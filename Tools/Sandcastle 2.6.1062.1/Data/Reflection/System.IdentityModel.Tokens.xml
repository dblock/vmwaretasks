<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.IdentityModel">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IdentityModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IdentityModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IdentityModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.30319.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.30319.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\Tools\devdiv\ecmapublickey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.AssemblyTargetedPatchBandAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.21-0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="SkipVerification">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.IdentityModel.Tokens">
      <topicdata group="api" />
      <apidata name="System.IdentityModel.Tokens" group="namespace" />
      <elements>
        <element api="T:System.IdentityModel.Tokens.SecurityKey" />
        <element api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" />
        <element api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.SecurityToken" />
        <element api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.WindowsSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.RsaSecurityKey" />
        <element api="T:System.IdentityModel.Tokens.RsaSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.SamlAccessDecision" />
        <element api="T:System.IdentityModel.Tokens.SamlAction" />
        <element api="T:System.IdentityModel.Tokens.SamlAdvice" />
        <element api="T:System.IdentityModel.Tokens.SamlAssertion" />
        <element api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.SamlAttribute" />
        <element api="T:System.IdentityModel.Tokens.SamlStatement" />
        <element api="T:System.IdentityModel.Tokens.SamlSubjectStatement" />
        <element api="T:System.IdentityModel.Tokens.SamlAttributeStatement" />
        <element api="T:System.IdentityModel.Tokens.SamlCondition" />
        <element api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />
        <element api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />
        <element api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />
        <element api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />
        <element api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />
        <element api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />
        <element api="T:System.IdentityModel.Tokens.SamlConditions" />
        <element api="T:System.IdentityModel.Tokens.SamlConstants" />
        <element api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" />
        <element api="T:System.IdentityModel.Tokens.SamlEvidence" />
        <element api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />
        <element api="T:System.IdentityModel.Tokens.SamlSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.SamlSerializer" />
        <element api="T:System.IdentityModel.Tokens.SamlSubject" />
        <element api="T:System.IdentityModel.Tokens.SecurityAlgorithms" />
        <element api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <element api="T:System.IdentityModel.Tokens.SecurityKeyType" />
        <element api="T:System.IdentityModel.Tokens.SecurityKeyUsage" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenException" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenTypes" />
        <element api="T:System.IdentityModel.Tokens.SigningCredentials" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />
        <element api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />
        <element api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />
        <element api="T:System.IdentityModel.Tokens.UserNameSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />
        <element api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.X509SecurityToken" />
        <element api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />
      </elements>
      <file name="7794cb6c-b8f3-fadf-cea8-146a86bd3870" />
    </api>
    <api id="T:System.IdentityModel.Tokens.AsymmetricSecurityKey">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.AsymmetricSecurityKey" />
      <apidata name="AsymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
          <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="4cc27225-2df4-2d3d-8a9e-aac0b148c6d9" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.AsymmetricSecurityKey">
      <topicdata name="AsymmetricSecurityKey" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" />
      <apidata name="AsymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.#ctor" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="P:System.IdentityModel.Tokens.SecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="1ac2b954-e1f6-8f6a-31d3-027680ab8354" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.AsymmetricSecurityKey">
      <topicdata name="AsymmetricSecurityKey" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" />
      <apidata name="AsymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="d8eb04fe-57bc-fed8-f36b-0d91ce3e1703" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.AsymmetricSecurityKey">
      <topicdata name="AsymmetricSecurityKey" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" />
      <apidata name="AsymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="5148acf8-c5d6-d817-9eef-1350946b59e9" />
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f2997788-5615-b58c-d4b8-15d6a2b38e95" />
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAsymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="privateKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="56022c41-8078-b83f-a7be-675f1a172f5d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
      <topicdata group="api" />
      <apidata name="GetHashAlgorithmForSignature" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="9400ce5f-1ca2-b250-f798-50a3d0158db9" />
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
      <topicdata group="api" />
      <apidata name="GetSignatureDeformatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="8fb54e20-011a-2e90-48f0-18645a6a54bb" />
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
      <topicdata group="api" />
      <apidata name="GetSignatureFormatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricSignatureFormatter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="73c426e7-5ccd-9c30-7346-56ea9f768190" />
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey">
      <topicdata group="api" />
      <apidata name="HasPrivateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="bda975b4-0a80-c2bf-25ff-170532bc0170" />
    </api>
    <api id="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
      <apidata name="BinaryKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
          <type api="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="87efa000-57eb-5eac-544a-0a5e8bb0cd5c" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
      <topicdata name="BinaryKeyIdentifierClause" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
      <apidata name="BinaryKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="f8d7af99-acf7-4d16-e7ca-ac0f541cbf02" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
      <topicdata name="BinaryKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
      <apidata name="BinaryKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="a97410d8-8ee0-9e1c-d2bd-5eb5dd124013" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
      <topicdata name="BinaryKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
      <apidata name="BinaryKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="d86c8d7d-2df6-aa64-48f3-d6562772b603" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
      <file name="c6e813fe-8988-e0db-6b96-73d2c0c5bc51" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
      <file name="8a68bf0c-4449-7ead-47ec-02ff9568944c" />
    </api>
    <api id="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="clauseType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="identificationData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="cloneBuffer">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c328e43d-be23-bfb2-a7ca-8d0da6a32245" />
    </api>
    <api id="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="clauseType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="identificationData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="cloneBuffer">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="derivationNonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
      <file name="25f1f661-698f-e152-b6b1-6cae9d2a48fd" />
    </api>
    <api id="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer">
      <topicdata group="api" />
      <apidata name="GetBuffer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
      <file name="c76f06f3-a342-b6fe-e09b-4e64dea2d571" />
    </api>
    <api id="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
      <topicdata group="api" />
      <apidata name="GetRawBuffer" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
      <file name="d2e1de5b-a15f-fa53-6e42-d65663b20f58" />
    </api>
    <api id="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ecf2788a-5d1a-f7dd-24c3-6a103660affa" />
    </api>
    <api id="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
      <file name="0d79cb64-5267-6905-477f-740127eda0af" />
    </api>
    <api id="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
      <file name="be09c69d-4457-e352-85c5-3d4a6e5ed19e" />
    </api>
    <api id="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
      <apidata name="EncryptedKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="156d515c-acc8-0c7e-3a44-63237ad24c06" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
      <topicdata name="EncryptedKeyIdentifierClause" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
      <apidata name="EncryptedKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />
        <element api="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" />
        <element api="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="231ff334-3771-429e-3310-dc7f21d1865d" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
      <topicdata name="EncryptedKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
      <apidata name="EncryptedKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="709dfdf8-9c29-f389-8049-0b3553dcdbd4" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
      <topicdata name="EncryptedKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
      <apidata name="EncryptedKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />
        <element api="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" />
        <element api="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="45df3051-d521-ee98-3753-4894ddc2e126" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
      <file name="1ff72053-b2bd-192d-68bc-558b50cd67c4" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
      <file name="ef498991-c31d-66ce-a077-45c604074680" />
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="encryptedKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="encryptionMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4e496ec4-7021-ba25-e8bf-b8da1b980d3f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="encryptedKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="encryptionMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encryptingKeyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="463c03a2-9678-da90-c987-92c866fcde2b" />
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="encryptedKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="encryptionMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encryptingKeyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
        <parameter name="carriedKeyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6c988bb8-662b-a517-b538-496675f7f7e4" />
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="encryptedKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="encryptionMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encryptingKeyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
        <parameter name="carriedKeyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="derivationNonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="742f8a06-ec0e-5bf3-e12f-9e61050182d7" />
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
      <topicdata group="api" />
      <apidata name="CarriedKeyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CarriedKeyName">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
      <file name="82b484d3-13be-ef3f-8cc1-21a9bd5ea257" />
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier">
      <topicdata group="api" />
      <apidata name="EncryptingKeyIdentifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EncryptingKeyIdentifier">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
      <file name="a07b5273-950a-f3f0-80a6-664c8665d50c" />
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod">
      <topicdata group="api" />
      <apidata name="EncryptionMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EncryptionMethod">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
      <file name="e5c35e81-3f1c-c29d-8bd3-e3102ad560ce" />
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey">
      <topicdata group="api" />
      <apidata name="GetEncryptedKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
      <file name="4326f26b-224a-3389-ccb9-95ac800b5b88" />
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="encryptedKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="encryptionMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="carriedKeyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
      <file name="f7dc749b-3722-d756-58d3-2959e73807ac" />
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
      <file name="1e86d9c0-fc1f-c9b9-7309-024d3190a399" />
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
      <file name="4a50c4d5-2f2a-e6f8-1647-8b8f9823f5ed" />
    </api>
    <api id="T:System.IdentityModel.Tokens.GenericXmlSecurityToken">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.GenericXmlSecurityToken" />
      <apidata name="GenericXmlSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="e798f13c-6790-4557-2c78-9cd2c1595210" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.GenericXmlSecurityToken">
      <topicdata name="GenericXmlSecurityToken" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" />
      <apidata name="GenericXmlSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityToken,System.DateTime,System.DateTime,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.AuthorizationPolicies" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ProofToken" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.TokenXml" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.ToString" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidTo" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="ad7f5307-cee4-2705-e268-a66195984357" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.GenericXmlSecurityToken">
      <topicdata name="GenericXmlSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" />
      <apidata name="GenericXmlSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="29d091d5-2bba-3977-8e26-bee4567553ec" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.GenericXmlSecurityToken">
      <topicdata name="GenericXmlSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" />
      <apidata name="GenericXmlSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.AuthorizationPolicies" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ProofToken" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.TokenXml" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="0b6f6c08-6726-a5e9-8ff3-75e28f04dd6a" />
    </api>
    <api id="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityToken,System.DateTime,System.DateTime,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="tokenXml">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
        <parameter name="proofToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="effectiveTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="expirationTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="internalTokenReference">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
        <parameter name="externalTokenReference">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
        <parameter name="authorizationPolicies">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
      <file name="e5606ebc-79a4-2584-df8e-492f5d35b24d" />
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.AuthorizationPolicies">
      <topicdata group="api" />
      <apidata name="AuthorizationPolicies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthorizationPolicies">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
      <file name="f361b08d-e0af-9811-0274-930f81b64b06" />
    </api>
    <api id="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
      <file name="d9868197-10c5-f87c-79e6-2867154b6da9" />
    </api>
    <api id="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
      <file name="ab058648-dd46-9bff-3a98-773da72691b9" />
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference">
      <topicdata group="api" />
      <apidata name="ExternalTokenReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExternalTokenReference">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
      <file name="95cc3167-ade0-9269-a23a-37fe3c3d86de" />
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
      <file name="ed5a7806-16ba-c0af-711a-8e0e07efd1da" />
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference">
      <topicdata group="api" />
      <apidata name="InternalTokenReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InternalTokenReference">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
      <file name="637e2c54-8991-b731-83dc-e0bc3a433818" />
    </api>
    <api id="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
      <file name="54a1fa67-ebad-1466-2127-9a3767707a4e" />
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ProofToken">
      <topicdata group="api" />
      <apidata name="ProofToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProofToken">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
      <file name="d671cf48-3cc8-0d7d-577a-21222e347926" />
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
      <file name="718dce1a-24b3-0170-b426-c7a886c06d8e" />
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.TokenXml">
      <topicdata group="api" />
      <apidata name="TokenXml" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TokenXml">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Xml.XmlElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
      <file name="5692db3f-a6a8-f176-f06d-c449ea2e5f9c" />
    </api>
    <api id="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
      <file name="5bdcf6b5-23f6-90fb-629f-abd5e989e0b5" />
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
      <file name="49aa1ac9-73e1-bf4b-38c1-39bd3f4947d2" />
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
      <file name="28708b67-da54-1873-f37f-0e25bf16c8d2" />
    </api>
    <api id="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />
      <apidata name="InMemorySymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="1b858a50-b69e-0793-5be7-e43f69b7c011" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
      <topicdata name="InMemorySymmetricSecurityKey" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />
      <apidata name="InMemorySymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor">
          <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[],System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricKey" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="P:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="e285a3a6-02a3-d913-5fa6-59d6e3b16a3b" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
      <topicdata name="InMemorySymmetricSecurityKey" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />
      <apidata name="InMemorySymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricKey" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSymmetricAlgorithm(System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="ef5b4dbd-b185-37b2-39be-b4dd1bf6d9ac" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
      <topicdata name="InMemorySymmetricSecurityKey" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />
      <apidata name="InMemorySymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="2a71b42c-d92a-9ec5-f1aa-83e30f9bd8b9" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[],System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <file name="e773f7c8-4ab1-55a0-881b-962d61f57a5e" />
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor" />
      <parameters>
        <parameter name="symmetricKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="500d5949-8a3a-4f5e-d1aa-06d620d250fc" />
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor" />
      <parameters>
        <parameter name="symmetricKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="cloneBuffer">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <file name="424b3f81-1586-cb88-405c-6fc9cbb6b61d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="DecryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <file name="0655b5f9-e14d-6afa-79f5-419b08ff1dca" />
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="EncryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <file name="e52817d6-531b-5cbc-4f4c-12d3fe1f5e2f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GenerateDerivedKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="label">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="nonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivedKeyLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <file name="c48d8574-149a-2954-1f2a-95f699403201" />
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="GetDecryptionTransform" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <file name="01c0bc6e-ccf8-8090-2d01-078c7c25214a" />
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="GetEncryptionTransform" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <file name="fe4feeec-0700-3d2f-5bce-968a9d39fb0a" />
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)">
      <topicdata group="api" />
      <apidata name="GetIVSize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <file name="184075a9-638c-7840-7b06-a16d184b75fb" />
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="GetKeyedHashAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.KeyedHashAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <file name="99fed6b1-124d-81fb-257f-409c4e57759c" />
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="GetSymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <file name="0eac910c-2058-a3d5-644e-4d23d7d926ec" />
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricKey">
      <topicdata group="api" />
      <apidata name="GetSymmetricKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <file name="4758cb8b-ef04-36db-0a0f-c95972671876" />
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <file name="c79551b3-cf11-981b-97ba-e7a5d27ceda4" />
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSupportedAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <file name="78e33359-0811-da67-604f-b1b762055479" />
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <file name="91d80f15-dbc1-493f-d3d5-0339c366c8e0" />
    </api>
    <api id="P:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize">
      <topicdata group="api" />
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityKey.KeySize">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeySize">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
      <file name="b4b69c99-0c61-1bbf-b70b-7d75133a5352" />
    </api>
    <api id="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />
      <apidata name="KerberosReceiverSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="a5aa965e-a427-fe20-0d57-d05b5c81b7ac" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken">
      <topicdata name="KerberosReceiverSecurityToken" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />
      <apidata name="KerberosReceiverSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String)" />
          <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.GetRequest" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidTo" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValueTypeUri" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.WindowsIdentity" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.Initialize">
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="ef28cd98-ae2e-d448-60b3-d364e26c2804" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken">
      <topicdata name="KerberosReceiverSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />
      <apidata name="KerberosReceiverSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.GetRequest" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.Initialize">
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="9cb95457-fb29-df33-1b09-3eaa17e4b544" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken">
      <topicdata name="KerberosReceiverSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />
      <apidata name="KerberosReceiverSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidTo" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValueTypeUri" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.WindowsIdentity" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="b0bf40b0-840a-00e2-c124-7d23a66e6f1d" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String)" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
      <file name="ad641d5b-1a2c-464d-0ed8-89ca2ab0afb0" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.Initialize">
      <topicdata name="Initialize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" allInherited="true" parentTopicId="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />
      </containers>
      <file name="84a0ab8d-51cd-f624-bfb4-178e0475f4ca" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor" />
      <parameters>
        <parameter name="request">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
      <file name="61fcb281-22d5-2d42-5977-831896f9121a" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor" />
      <parameters>
        <parameter name="request">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e6a4e419-a7bf-c340-f6f3-170ef642b613" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor" />
      <parameters>
        <parameter name="request">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="valueTypeUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bf3e9027-587d-bac5-931b-0b0ab9d9154a" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
      <file name="0255bd82-f913-2630-a1f5-f24fdbf81575" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
      <file name="7059d6cc-db51-dc5e-1f00-034c7becefd0" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.GetRequest">
      <topicdata group="api" />
      <apidata name="GetRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
      <file name="3986d406-cd69-fb89-ead8-ec0cf9fb30d7" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
      <file name="fff203b2-e62f-c34e-6a10-71ee5c00a506" />
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey">
      <topicdata group="api" />
      <apidata name="SecurityKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityKey" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
      <file name="afdd5f24-68e3-62ef-8f63-bd93952df551" />
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
      <file name="6e1dbbe6-f12c-98ae-a108-4db070a6471b" />
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
      <file name="9e75fd7c-b6f5-aad3-bd66-37a8017633b1" />
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
      <file name="0db85592-2848-8fb4-4292-8a28ad8b75a7" />
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValueTypeUri">
      <topicdata group="api" />
      <apidata name="ValueTypeUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValueTypeUri">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
      <file name="ec4f1191-31c7-545f-da3e-37ac9480bff2" />
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.WindowsIdentity">
      <topicdata group="api" />
      <apidata name="WindowsIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity">
          <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_WindowsIdentity" />
      <returns>
        <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
      <file name="12de141d-94af-e5e5-1e02-f98600af7c13" />
    </api>
    <api id="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />
      <apidata name="KerberosRequestorSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="e02a60e2-4250-67aa-6710-99c1ff6bbf4c" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken">
      <topicdata name="KerberosRequestorSecurityToken" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />
      <apidata name="KerberosRequestorSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id" />
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="149cfc2e-3daf-3ffb-1c42-db8ea32cb3a8" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken">
      <topicdata name="KerberosRequestorSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />
      <apidata name="KerberosRequestorSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest" />
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="6d119dfe-d18b-4c4e-f93f-5a682e8812fb" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken">
      <topicdata name="KerberosRequestorSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />
      <apidata name="KerberosRequestorSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="2a55b64b-cbca-1c8b-fd9a-85d6d5d99960" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
      <file name="7c9286ba-662d-4b20-ed3d-ebe84720bc7e" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor" />
      <parameters>
        <parameter name="servicePrincipalName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
      <file name="1e24ee09-9c45-42ea-e882-402ffd045ee6" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor" />
      <parameters>
        <parameter name="servicePrincipalName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tokenImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
        <parameter name="networkCredential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5d4a6f7c-ff10-7db9-cdf9-463a2333d9be" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
      <file name="64bbb5a4-58f0-9eab-fa26-f60b4c47f6e9" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
      <file name="8de9d17e-8371-4ea2-17d5-9cadf287d4f2" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest">
      <topicdata group="api" />
      <apidata name="GetRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
      <file name="7dd883da-e19d-4551-4d34-918972a28e1a" />
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
      <file name="8adb02d0-3fb3-d352-76b0-f3bed427c2ea" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
      <file name="8a5a887f-16a0-d9c9-b37a-3479cc8e879c" />
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey">
      <topicdata group="api" />
      <apidata name="SecurityKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityKey">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
      <file name="f21fcd60-d616-ff21-f2fe-221586d9be65" />
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
      <file name="bda0680b-5584-5c8b-f556-6278b3f73bee" />
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName">
      <topicdata group="api" />
      <apidata name="ServicePrincipalName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServicePrincipalName">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
      <file name="bc9cde16-ff80-4849-ca67-40e0a0e24da0" />
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
      <file name="7e002754-2429-e6d8-3078-8717cdefc1c3" />
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
      <file name="3e363366-a2b2-3d1c-e51a-bbbd695a31d2" />
    </api>
    <api id="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />
      <apidata name="KerberosTicketHashKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="41eaa8ab-1ee4-1dbd-47ae-62ffdbeb4cbf" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause">
      <topicdata name="KerberosTicketHashKeyIdentifierClause" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />
      <apidata name="KerberosTicketHashKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[],System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.GetKerberosTicketHash" />
        <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="398cd196-fa7e-36f7-4123-047d808d0e0f" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause">
      <topicdata name="KerberosTicketHashKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />
      <apidata name="KerberosTicketHashKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.GetKerberosTicketHash" />
        <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="3f2dfef5-f90e-1a15-8a3b-d759cb579f30" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause">
      <topicdata name="KerberosTicketHashKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />
      <apidata name="KerberosTicketHashKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="79114045-8ac4-9e0f-df95-de3a9b5143f8" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" allInherited="true" parentTopicId="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />
      </containers>
      <file name="683fbd24-9f8b-ecfa-e517-683d321fcf2f" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[],System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" ref="true" />
      </containers>
      <file name="d5825d32-6572-0750-7108-08543e80d3d0" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="ticketHash">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5389b592-c459-d0a7-1f29-3c826c5f3964" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[],System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="ticketHash">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationNonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="98a8a250-1f4a-1a49-e843-5320ee61c66c" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.GetKerberosTicketHash">
      <topicdata group="api" />
      <apidata name="GetKerberosTicketHash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" ref="true" />
      </containers>
      <file name="188499fd-ac24-76d9-d72f-f815cf3ac8dc" />
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" ref="true" />
      </containers>
      <file name="0285806b-2356-a015-1ea2-e937e64c5f13" />
    </api>
    <api id="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      <apidata name="LocalIdKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="d4dd8220-6245-f40d-e797-0dbe3bf56b19" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause">
      <topicdata name="LocalIdKeyIdentifierClause" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      <apidata name="LocalIdKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Type)" />
          <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32,System.Type)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" />
        <element api="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.String,System.Type)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" />
        <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="877aee5e-79d0-dbc2-6783-259f47eb07bd" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause">
      <topicdata name="LocalIdKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      <apidata name="LocalIdKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.String,System.Type)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="b20d2e4a-9fa5-3b1a-fa89-1eeb102d9c23" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause">
      <topicdata name="LocalIdKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      <apidata name="LocalIdKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" />
        <element api="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="367c50f7-7575-c581-35e6-ac551bb6356e" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Type)" />
        <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
      <file name="fa9c54b4-6e36-4a6c-c76d-430b35c444cb" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
      <file name="bf77ebb4-2490-b304-dc3b-4a199bebae76" />
    </api>
    <api id="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="localId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f611b80c-942f-6d81-ecac-b2bfa8b90253" />
    </api>
    <api id="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="localId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="derivationNonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
      <file name="2f8a93cb-3ea6-bffe-4b0f-2c6a81085c59" />
    </api>
    <api id="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="localId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
      <file name="f169237d-1820-08f6-c758-815b619dff82" />
    </api>
    <api id="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId">
      <topicdata group="api" />
      <apidata name="LocalId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LocalId">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
      <file name="03e0c268-d3b9-3258-b4b0-8761c5840d25" />
    </api>
    <api id="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
      <file name="00ed1f02-a93f-54c1-eb81-e1f5a5bd4bfe" />
    </api>
    <api id="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
      <file name="e4aece6d-7982-f423-1788-a77b86b768e8" />
    </api>
    <api id="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType">
      <topicdata group="api" />
      <apidata name="OwnerType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OwnerType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
      <file name="a4b327b9-b931-0d7d-2b44-e0ba29ec25d8" />
    </api>
    <api id="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
      <file name="c210269c-250b-1675-7b58-5d624d6f3437" />
    </api>
    <api id="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />
      <apidata name="RsaKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="ef2223b6-1d4c-e8f3-157c-9fa5b27b37bc" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.RsaKeyIdentifierClause">
      <topicdata name="RsaKeyIdentifierClause" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />
      <apidata name="RsaKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.#ctor(System.Security.Cryptography.RSA)" />
        <element api="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus" />
        <element api="Overload:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.Security.Cryptography.RSA)" />
          <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64(System.Xml.XmlWriter)" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64(System.Xml.XmlWriter)" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="d28689b1-a321-e5f9-b63e-26335e667a99" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.RsaKeyIdentifierClause">
      <topicdata name="RsaKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />
      <apidata name="RsaKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus" />
        <element api="Overload:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.Security.Cryptography.RSA)" />
          <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64(System.Xml.XmlWriter)" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64(System.Xml.XmlWriter)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="dc3a31d4-ae25-b533-c59c-8f5d8fb01ae9" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.RsaKeyIdentifierClause">
      <topicdata name="RsaKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />
      <apidata name="RsaKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="28c5f7d6-3f15-e81a-99c1-bfc01b9fb516" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.Security.Cryptography.RSA)" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
      <file name="24468642-8802-46a1-bee6-00ad6bf568f0" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.#ctor(System.Security.Cryptography.RSA)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="rsa">
          <type api="T:System.Security.Cryptography.RSA" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
      <file name="fba6244a-802e-7c79-9fd9-70bacd378774" />
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey">
      <topicdata group="api" />
      <apidata name="CanCreateKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanCreateKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
      <file name="2d968707-0a96-e1ab-ee77-2e21ee9e1846" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey">
      <topicdata group="api" />
      <apidata name="CreateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
      <file name="6ee10b2e-d3d3-f373-3227-1a275434ae1d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent">
      <topicdata group="api" />
      <apidata name="GetExponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
      <file name="6f077d37-932d-c079-76c5-bdb7b2141234" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus">
      <topicdata group="api" />
      <apidata name="GetModulus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
      <file name="70ed54f7-d8fb-0680-943f-5fbcbf43c846" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
      <file name="74d3d097-0363-7da9-0882-c61aa5246ecc" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.Security.Cryptography.RSA)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rsa">
          <type api="T:System.Security.Cryptography.RSA" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
      <file name="ca1db4be-fedb-eeff-4421-b1fe17faf803" />
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa">
      <topicdata group="api" />
      <apidata name="Rsa" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Rsa">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Security.Cryptography.RSA" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
      <file name="c72510a0-7007-9399-eee3-6eb5a5ea760f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
      <file name="7f471459-fee1-54a3-8924-0cfa8fb29a5f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteExponentAsBase64" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
      <file name="7294e067-ce44-d6ed-34ff-1ddaa3ad2e95" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteModulusAsBase64" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
      <file name="d8a5241b-323c-78e4-3255-d3598e651872" />
    </api>
    <api id="T:System.IdentityModel.Tokens.RsaSecurityKey">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.RsaSecurityKey" />
      <apidata name="RsaSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="98aaabd8-52f9-5992-215d-4eedc40030e1" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.RsaSecurityKey">
      <topicdata name="RsaSecurityKey" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.RsaSecurityKey" />
      <apidata name="RsaSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.#ctor(System.Security.Cryptography.RSA)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="25281a2e-402a-a5ce-cc82-adc32c4279aa" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.RsaSecurityKey">
      <topicdata name="RsaSecurityKey" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.RsaSecurityKey" />
      <apidata name="RsaSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="c426349d-a59e-2afd-baaa-4b678e9f7728" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.RsaSecurityKey">
      <topicdata name="RsaSecurityKey" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.RsaSecurityKey" />
      <apidata name="RsaSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.RsaSecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="c749f728-c048-1eaa-8b22-46385dfa6f80" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.#ctor(System.Security.Cryptography.RSA)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="rsa">
          <type api="T:System.Security.Cryptography.RSA" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
      <file name="fb3cf08b-366f-e97a-0839-839a3659a83a" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="DecryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
      <file name="9e96b6d3-e8af-c159-f550-50111affbd5f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="EncryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
      <file name="46ae6f2d-73dc-4e44-8210-b24d445a803c" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAsymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiresPrivateKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
      <file name="24375957-dc00-6f10-5fac-e434d663e4ae" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)">
      <topicdata group="api" />
      <apidata name="GetHashAlgorithmForSignature" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
      <file name="a132c5b7-db80-c68c-d7b5-1bc11b4af5eb" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)">
      <topicdata group="api" />
      <apidata name="GetSignatureDeformatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
      <file name="63f24e88-214c-fb94-ab83-00d84cc298ba" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)">
      <topicdata group="api" />
      <apidata name="GetSignatureFormatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricSignatureFormatter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
      <file name="0b55ad13-78c5-a163-2a39-2d1f568f51c2" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey">
      <topicdata group="api" />
      <apidata name="HasPrivateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
      <file name="0df605e9-7ace-e34c-1592-6f8985cc03db" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
      <file name="cf2dafc7-7b32-fbc9-e0e8-df167333ec12" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSupportedAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
      <file name="8edbaa5f-c304-2c85-7cc9-b023ca48499d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
      <file name="86f07c49-bb88-77d1-78cd-bf2b6d301d1e" />
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaSecurityKey.KeySize">
      <topicdata group="api" />
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityKey.KeySize">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
      <file name="a8541384-65e3-d7e2-c8a5-cd3ecaf626b2" />
    </api>
    <api id="T:System.IdentityModel.Tokens.RsaSecurityToken">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.RsaSecurityToken" />
      <apidata name="RsaSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="917c0f4d-7868-a574-387d-add5f8b7a1f2" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.RsaSecurityToken">
      <topicdata name="RsaSecurityToken" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.RsaSecurityToken" />
      <apidata name="RsaSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.RsaSecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA)" />
          <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.Finalize" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.Id" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.Rsa" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidTo" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="211f16d5-2821-24dc-c160-dbd1c3363844" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.RsaSecurityToken">
      <topicdata name="RsaSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.RsaSecurityToken" />
      <apidata name="RsaSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.Finalize" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="f1694ca7-ace9-71a4-d213-e03d2c26fba5" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.RsaSecurityToken">
      <topicdata name="RsaSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.RsaSecurityToken" />
      <apidata name="RsaSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.Rsa" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="fe60edc8-d9a2-e105-203d-3c410a100fb1" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.RsaSecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.RsaSecurityToken" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
      <file name="cb81784a-a2c9-8a49-22b2-abcf0969b1b2" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.RsaSecurityToken.#ctor" />
      <parameters>
        <parameter name="rsa">
          <type api="T:System.Security.Cryptography.RSA" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
      <file name="02ff269f-67e9-c58e-5fe0-f2a45f267fc1" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.RsaSecurityToken.#ctor" />
      <parameters>
        <parameter name="rsa">
          <type api="T:System.Security.Cryptography.RSA" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
      <file name="9feb432b-360b-778e-4077-62c88af18d71" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
      <file name="eaa964c0-99a1-3e45-40a1-b7d944d12b4f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.RsaSecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
      <file name="b369c144-8738-141f-b524-263e02dae94d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityToken.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
      <file name="e38bb9de-8fec-d112-a91c-07ebef2e23b3" />
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaSecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
      <file name="59a7c81f-572c-f95c-a562-7a460e35b7ea" />
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
      <file name="81cbef04-9dd4-f05f-0031-1c4f71fd3056" />
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaSecurityToken.Rsa">
      <topicdata group="api" />
      <apidata name="Rsa" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Rsa">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Security.Cryptography.RSA" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
      <file name="69b3037e-c8c5-a43d-62d4-63df8b675d43" />
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
      <file name="5b979776-bb85-2b4e-6c86-663567a03bb4" />
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
      <file name="bc232097-d490-7a02-20d7-abf88829afa9" />
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
      <file name="2abea2db-9fb1-7423-502d-7470754b2dd3" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAccessDecision">
      <topicdata group="api" />
      <apidata name="SamlAccessDecision" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.SamlAccessDecision.Permit" />
        <element api="F:System.IdentityModel.Tokens.SamlAccessDecision.Deny" />
        <element api="F:System.IdentityModel.Tokens.SamlAccessDecision.Indeterminate" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="4a96cfe8-2534-7229-1d04-092cb833dcd4" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SamlAccessDecision.Deny">
      <topicdata group="api" notopic="" />
      <apidata name="Deny" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.EnumMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ca693d18-6c6d-6ddb-7724-a53ef6870b4d" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SamlAccessDecision.Indeterminate">
      <topicdata group="api" notopic="" />
      <apidata name="Indeterminate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.EnumMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="746583cb-3d7d-4def-ef5f-62af28e3be20" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SamlAccessDecision.Permit">
      <topicdata group="api" notopic="" />
      <apidata name="Permit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.EnumMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="149ac6db-040d-c262-9cbd-f094a2dd5622" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAction" />
      <apidata name="SamlAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="ff519c35-2024-a983-fd69-4c83885b4f4c" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlAction">
      <topicdata name="SamlAction" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlAction" />
      <apidata name="SamlAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SamlAction.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAction.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String,System.String)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SamlAction.Action" />
        <element api="P:System.IdentityModel.Tokens.SamlAction.IsReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAction.MakeReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAction.Namespace" />
        <element api="M:System.IdentityModel.Tokens.SamlAction.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAction.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="3a2c5e65-16b2-fb1a-59d7-2a973c5b7cb7" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAction">
      <topicdata name="SamlAction" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAction" />
      <apidata name="SamlAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlAction.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAction.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAction.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="cc4abb35-fa47-1da7-daa6-a0c56807d630" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAction">
      <topicdata name="SamlAction" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAction" />
      <apidata name="SamlAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAction.Action" />
        <element api="P:System.IdentityModel.Tokens.SamlAction.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAction.Namespace" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="a652e293-8bb7-c6bb-1f96-f67669e02f2f" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAction" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAction.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
      <file name="94449ec2-af9d-75a9-a3b1-22bfe5db3d55" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAction.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="de77719b-84de-a1f5-d350-64df30260869" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAction.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="56a4cc2c-ad59-18d7-3be2-081b64196c87" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAction.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
      <file name="f615b866-a6bd-5afd-6f65-6cc1b9a84524" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAction.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Action">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
      <file name="619fba02-a8cb-9fb6-dcd5-8405b50bfdf8" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAction.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
      <file name="16761295-9050-605e-6c60-532055eb1349" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAction.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
      <file name="a4b078a3-90b8-b54b-24ec-e4dd40f642cf" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAction.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
      <file name="7128aa8f-d393-843c-9073-594c40d9158c" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAction.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
      <file name="1d508f5a-6dbd-88ab-e7ff-0bf437cabb9c" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAction.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
      <file name="c99b94a7-b996-95ed-6f10-ae63863128fa" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAdvice">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAdvice" />
      <apidata name="SamlAdvice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="17cd2720-b21a-e892-23e7-7e73ce513668" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlAdvice">
      <topicdata name="SamlAdvice" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlAdvice" />
      <apidata name="SamlAdvice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SamlAdvice.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
          <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SamlAdvice.AssertionIdReferences" />
        <element api="P:System.IdentityModel.Tokens.SamlAdvice.Assertions" />
        <element api="P:System.IdentityModel.Tokens.SamlAdvice.IsReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="7fe049d8-c33d-3c69-b09e-900b7d2bfc12" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAdvice">
      <topicdata name="SamlAdvice" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAdvice" />
      <apidata name="SamlAdvice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="d64792b0-602d-a5db-2aae-867cb77a2dd6" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAdvice">
      <topicdata name="SamlAdvice" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAdvice" />
      <apidata name="SamlAdvice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAdvice.AssertionIdReferences" />
        <element api="P:System.IdentityModel.Tokens.SamlAdvice.Assertions" />
        <element api="P:System.IdentityModel.Tokens.SamlAdvice.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="66c9cacb-4e11-94e1-db66-1cb8f18e147b" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAdvice.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAdvice" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
      <file name="0c25d995-650b-8e72-7abd-2009fced7c57" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAdvice.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAdvice.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f4016374-2498-a726-0db1-0ca0be0f9733" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAdvice.#ctor" />
      <parameters>
        <parameter name="assertions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7d214259-9dc7-0155-8019-c49d03b3a469" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAdvice.#ctor" />
      <parameters>
        <parameter name="references">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="23e02aca-e0a2-d98c-ef6a-540dadf45b87" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAdvice.#ctor" />
      <parameters>
        <parameter name="references">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="assertions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
      <file name="56cccb3a-6f93-5d31-03f1-ce1837d33f68" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAdvice.AssertionIdReferences">
      <topicdata group="api" />
      <apidata name="AssertionIdReferences" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssertionIdReferences">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
      <file name="010a0b06-2fcc-1106-1005-0e77f3468255" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAdvice.Assertions">
      <topicdata group="api" />
      <apidata name="Assertions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assertions">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
      <file name="259cbdeb-2634-52b6-61dd-8505f0c6560a" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAdvice.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
      <file name="149b4077-e153-7bb8-04a8-e21d59f338d4" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAdvice.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
      <file name="a21de6e1-982f-ebf4-1a21-c090183e25d6" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAdvice.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
      <file name="99d70d54-91e1-5037-9158-70efec0d5030" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAdvice.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
      <file name="93eb5318-c74c-010f-fcb5-82596ec7e9bd" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAssertion">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAssertion" />
      <apidata name="SamlAssertion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="e76c081e-df1f-1d80-842d-074ef7e3e719" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlAssertion">
      <topicdata name="SamlAssertion" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlAssertion" />
      <apidata name="SamlAssertion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SamlAssertion.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAssertion.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Advice" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Conditions" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.IssueInstant" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Issuer" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.MajorVersion" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.MinorVersion" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.SigningToken" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Statements" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="4f21c851-764b-b427-909a-dcaf5540be2f" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAssertion">
      <topicdata name="SamlAssertion" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAssertion" />
      <apidata name="SamlAssertion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="8c87ad8b-9ffb-a6dc-bda7-c084616abf10" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAssertion">
      <topicdata name="SamlAssertion" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAssertion" />
      <apidata name="SamlAssertion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Advice" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Conditions" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.IssueInstant" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Issuer" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.MajorVersion" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.MinorVersion" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.SigningToken" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Statements" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="dba706a8-670b-69c5-41fa-df6178a12899" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAssertion.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAssertion" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="51c2ad65-fd1d-6131-4d2f-b6f97a08eb77" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertion.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAssertion.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="0c033dbc-d253-11f7-35a7-7ead049ee991" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAssertion.#ctor" />
      <parameters>
        <parameter name="assertionId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="issueInstant">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="samlConditions">
          <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
        </parameter>
        <parameter name="samlAdvice">
          <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
        </parameter>
        <parameter name="samlStatements">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="4935858f-fcd9-5788-4457-61d75ec6c922" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.Advice">
      <topicdata group="api" />
      <apidata name="Advice" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Advice">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Advice" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="7a9649bf-1b07-c808-d9e3-345a8534edc5" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId">
      <topicdata group="api" />
      <apidata name="AssertionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AssertionId">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_AssertionId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="a8ba145c-f475-3dc8-e9ee-fa3635f5ffe7" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.Conditions">
      <topicdata group="api" />
      <apidata name="Conditions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Conditions">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Conditions" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="30072411-c328-63d8-6350-0427d83773ad" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="7d0ea2d1-6e24-4ec3-32ab-4f78daae7806" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.IssueInstant">
      <topicdata group="api" />
      <apidata name="IssueInstant" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IssueInstant">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IssueInstant" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="818661d6-4d21-8bd4-aea4-c3c58e55bcc0" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.Issuer">
      <topicdata group="api" />
      <apidata name="Issuer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Issuer">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Issuer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="48e652f4-8370-1151-8e6d-96c9d7c840bd" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.MajorVersion">
      <topicdata group="api" />
      <apidata name="MajorVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MajorVersion" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="8af421a8-d3ae-fc57-2262-5f6e0f131967" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="b20502ce-5c30-7fd0-6351-1d74638b08e3" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.MinorVersion">
      <topicdata group="api" />
      <apidata name="MinorVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MinorVersion" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="baf6fc82-67ca-f232-848a-0e881e65a4be" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)">
      <topicdata group="api" />
      <apidata name="ReadSignature" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="34b81534-4fc7-3c2d-30aa-4694932e2db0" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="08d99115-1e4c-c2be-d34d-2d22f90dfe12" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials">
      <topicdata group="api" />
      <apidata name="SigningCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SigningCredentials">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_SigningCredentials" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="a874aa3c-dc81-5b7a-4589-0c47bc50b7b7" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.SigningToken">
      <topicdata group="api" />
      <apidata name="SigningToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SigningToken">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="f17292ee-2396-4d33-8de5-94f8ed48fa84" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.Statements">
      <topicdata group="api" />
      <apidata name="Statements" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Statements">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="005553e8-949e-bc5b-dcdf-9b0a7d09a5c3" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
      <file name="2e48a765-3106-6c63-b6e8-9bfd352f687a" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />
      <apidata name="SamlAssertionKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="bbce2835-fb83-23c0-4ad8-c9e128225524" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause">
      <topicdata name="SamlAssertionKeyIdentifierClause" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />
      <apidata name="SamlAssertionKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.AssertionId" />
        <element api="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="66d3befc-559a-4422-b6b1-f059754c3f2f" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause">
      <topicdata name="SamlAssertionKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />
      <apidata name="SamlAssertionKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="6b4ed4fa-291d-644f-fcbc-64117f6e5948" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause">
      <topicdata name="SamlAssertionKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />
      <apidata name="SamlAssertionKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.AssertionId" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="2d95557b-3baa-7236-45cd-e0eefe93c2ce" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
      <file name="a320ac00-90d8-6379-a160-dc921f20c1ec" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
      <file name="a235b037-3a36-22df-4946-46be908d09fb" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="assertionId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="adf60a1f-9245-0143-ebdd-ffed0e54b0af" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="assertionId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="derivationNonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0887d7ae-7d22-2d79-8c9a-f394b96b4f00" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.AssertionId">
      <topicdata group="api" />
      <apidata name="AssertionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssertionId">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
      <file name="c5cad429-ebe8-013a-9252-60341fd44d1c" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
      <file name="b6e0633e-0cd5-cb3b-7432-640d1dcf1bf1" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.String)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assertionId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
      <file name="73c92b4e-fe10-9b3d-f3d2-f2c5d775a165" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
      <file name="12204040-4a7a-5c39-a554-52ef46860906" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAttribute" />
      <apidata name="SamlAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="5b6de809-98ea-dda1-a202-56b750a582b6" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlAttribute">
      <topicdata name="SamlAttribute" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlAttribute" />
      <apidata name="SamlAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SamlAttribute.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAttribute.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValues" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.ExtractClaims" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.Name" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.Namespace" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="cbdb1b4b-162e-1acf-69e8-d4e1fb68e5b2" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAttribute">
      <topicdata name="SamlAttribute" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAttribute" />
      <apidata name="SamlAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.ExtractClaims" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="412fc499-7190-fe27-f2cc-111a8c74e94c" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAttribute">
      <topicdata name="SamlAttribute" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAttribute" />
      <apidata name="SamlAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValues" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.Name" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.Namespace" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="b1afd7fb-19c2-dc3f-d759-c46fb985e478" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAttribute" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
      <file name="45faefe1-993d-33a9-d25d-8c4dd129fb8c" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAttribute.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
      <file name="808c4fac-452f-8227-588a-aa1c3b625683" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAttribute.#ctor" />
      <parameters>
        <parameter name="claim">
          <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
      <file name="2c0a1b9d-aee5-9fb1-70ba-5b101c16ae17" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAttribute.#ctor" />
      <parameters>
        <parameter name="attributeNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attributeValues">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
      <file name="caccbece-b099-84e3-f3a0-2f9ef5eb448a" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValues">
      <topicdata group="api" />
      <apidata name="AttributeValues" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AttributeValues">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
      <file name="6f929f7a-049a-5813-0f6d-df30e6305e98" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttribute.ExtractClaims">
      <topicdata group="api" />
      <apidata name="ExtractClaims" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
      <file name="5f13b772-0318-a9fd-9117-6b67b47a1cd5" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
      <file name="72c798ea-025b-5c61-e336-de36121bdfc9" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
      <file name="f1c8590f-674f-5b2c-db69-f538830cac25" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
      <file name="c484ad0a-3bff-fbb5-72f2-11b2acc4b172" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
      <file name="07dd6d5b-f4a7-7a39-dc64-01d7542d785d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
      <file name="0d707ebe-5a20-b629-d255-b026076d8049" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
      <file name="65ef7ea1-cd7d-49ba-1947-ccccfedc483b" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAttributeStatement">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAttributeStatement" />
      <apidata name="SamlAttributeStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="af7d1e82-aecd-3834-2410-ddfffdf67b3e" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlAttributeStatement">
      <topicdata name="SamlAttributeStatement" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlAttributeStatement" />
      <apidata name="SamlAttributeStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="P:System.IdentityModel.Tokens.SamlAttributeStatement.Attributes" />
        <element api="P:System.IdentityModel.Tokens.SamlAttributeStatement.IsReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="ce67f13f-84f0-feaf-ebec-a5ededce85c8" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAttributeStatement">
      <topicdata name="SamlAttributeStatement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAttributeStatement" />
      <apidata name="SamlAttributeStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="e5e86f92-e471-d1c6-c027-80b53cd8f8b4" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAttributeStatement">
      <topicdata name="SamlAttributeStatement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAttributeStatement" />
      <apidata name="SamlAttributeStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAttributeStatement.Attributes" />
        <element api="P:System.IdentityModel.Tokens.SamlAttributeStatement.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="24627dd8-36f5-92e4-2f86-dcf6e2002ba4" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAttributeStatement" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
      <file name="6f22e500-4487-3b51-cc26-e492eb8443d9" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
      <file name="623a4a56-eeec-6a66-85af-3478556723dc" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor" />
      <parameters>
        <parameter name="samlSubject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
        <parameter name="attributes">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
      <file name="29387e81-9dcb-22ef-5f7a-b490d7c2947e" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttributeStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <topicdata group="api" />
      <apidata name="AddClaimsToList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="claims">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
      <file name="986e0406-0bc6-f6cc-e50c-49f8930c70e5" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAttributeStatement.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attributes">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
      <file name="d298c240-11b4-84ef-8c0e-539ae75ae7a1" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAttributeStatement.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsReadOnly">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
      <file name="2ebb9877-934e-e5cd-0458-7cd4ee331fee" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttributeStatement.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
      <file name="85177c3a-356f-a223-5548-731d5b3fc776" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttributeStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
      <file name="8c3eb870-fd29-3971-2244-557c353b040e" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttributeStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
      <file name="b73b2eee-2e8d-3182-dee0-ad3e326082f8" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />
      <apidata name="SamlAudienceRestrictionCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="2f682e86-735a-00e5-5edc-5397246862ab" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition">
      <topicdata name="SamlAudienceRestrictionCondition" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />
      <apidata name="SamlAudienceRestrictionCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor(System.Collections.Generic.IEnumerable{System.Uri})" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences" />
        <element api="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.IsReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="713fa0e5-64f7-a895-93b6-9209c4e181b3" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition">
      <topicdata name="SamlAudienceRestrictionCondition" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />
      <apidata name="SamlAudienceRestrictionCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="23d1c692-405c-8b90-06b1-8a169de5c802" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition">
      <topicdata name="SamlAudienceRestrictionCondition" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />
      <apidata name="SamlAudienceRestrictionCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences" />
        <element api="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="74529e8d-b6a3-da1a-3c1d-39e4cb6b2c04" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor(System.Collections.Generic.IEnumerable{System.Uri})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
      <file name="6eba5b97-c65b-8b8f-989b-03261f720ec1" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
      <file name="b175526b-d4d3-d3be-56dc-2da8faa9e0fe" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor(System.Collections.Generic.IEnumerable{System.Uri})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor" />
      <parameters>
        <parameter name="audiences">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Uri" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
      <file name="ce3a4270-794f-facd-e604-8b4a15f90f1c" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences">
      <topicdata group="api" />
      <apidata name="Audiences" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Audiences">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
      <file name="ca0e9838-41ad-9ba8-91d9-7ef02603bdb1" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SamlCondition.IsReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsReadOnly">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
      <file name="734d7971-7795-25d4-85e5-327feb88cfbe" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
      <file name="59aecfc2-5754-984a-a2fd-44843359a7da" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
      <file name="2a029bbe-7bbc-c220-2740-c77a05533b5f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
      <file name="e500ee07-ef65-992b-e508-625337b96d9b" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />
      <apidata name="SamlAuthenticationClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a978611e-1ee1-5cce-6cbd-e4935bafac65" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource">
      <topicdata name="SamlAuthenticationClaimResource" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />
      <apidata name="SamlAuthenticationClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String)" />
          <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})" />
          <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SamlAuthorityBinding})" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationInstant" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationMethod" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthorityBindings" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.DnsAddress" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.Equals(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.GetHashCode" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.IPAddress" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="97d10133-ad9d-f393-139b-1a9e34158183" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource">
      <topicdata name="SamlAuthenticationClaimResource" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />
      <apidata name="SamlAuthenticationClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.Equals(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="a3e9fb3c-e35a-3ee2-587f-c6043878e666" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource">
      <topicdata name="SamlAuthenticationClaimResource" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />
      <apidata name="SamlAuthenticationClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationInstant" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationMethod" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthorityBindings" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.DnsAddress" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.IPAddress" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="7a40b911-9f4f-46b8-2888-e1ef7337dbbe" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SamlAuthorityBinding})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
      <file name="635e09d3-e627-65ce-77da-66a0cebc10d2" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor" />
      <parameters>
        <parameter name="authenticationInstant">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="authenticationMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dnsAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ipAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
      <file name="1b3be443-5fd4-ca49-f4df-be9b838a7b33" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor" />
      <parameters>
        <parameter name="authenticationInstant">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="authenticationMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dnsAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ipAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authorityBindings">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
      <file name="58235b34-1113-5613-49b3-c26d559fd13e" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SamlAuthorityBinding})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor" />
      <parameters>
        <parameter name="authenticationInstant">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="authenticationMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dnsAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ipAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authorityBindings">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
      <file name="2ce54e9d-e757-9587-d56b-050788f7b34f" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationInstant">
      <topicdata group="api" />
      <apidata name="AuthenticationInstant" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthenticationInstant">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
      <file name="cf94c41f-b6cd-67ef-59f8-73a6394936f2" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationMethod">
      <topicdata group="api" />
      <apidata name="AuthenticationMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthenticationMethod">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
      <file name="475719ba-35f3-8ffa-8db6-7436b383b591" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthorityBindings">
      <topicdata group="api" />
      <apidata name="AuthorityBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthorityBindings">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
      <file name="b40f4852-b3e0-8a89-40ab-cd41ddb48074" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.DnsAddress">
      <topicdata group="api" />
      <apidata name="DnsAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DnsAddress">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
      <file name="bea7ef60-dd8f-7b40-c421-14b1ae7aaa83" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
      <file name="e72c83bd-3fbd-11b8-eeab-f3481fde1f91" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
      <file name="ddc28f0f-21d8-5ae3-6481-b591926980a1" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.IPAddress">
      <topicdata group="api" />
      <apidata name="IPAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IPAddress">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
      <file name="5409b484-a21c-7c36-ce84-afb0d6c84316" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAuthenticationStatement">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />
      <apidata name="SamlAuthenticationStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="6a0e2f14-c6a4-7ff0-8fa7-c2f81f6852f1" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlAuthenticationStatement">
      <topicdata name="SamlAuthenticationStatement" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />
      <apidata name="SamlAuthenticationStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.DateTime,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationInstant" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationMethod" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthorityBindings" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.ClaimType" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.DnsAddress" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IPAddress" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="89643eab-b343-3d91-4e6e-d8057b5342b1" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAuthenticationStatement">
      <topicdata name="SamlAuthenticationStatement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />
      <apidata name="SamlAuthenticationStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="fe77fabe-258c-59e4-b6fe-10c201a4818e" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAuthenticationStatement">
      <topicdata name="SamlAuthenticationStatement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />
      <apidata name="SamlAuthenticationStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationInstant" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationMethod" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthorityBindings" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.ClaimType" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.DnsAddress" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IPAddress" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="8b55eab9-b5e5-a95a-b3d8-983232ea5657" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.DateTime,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
      <file name="c59e2e0d-4106-1286-0dc2-2b6a984169c0" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
      <file name="e854a4de-dc1a-1fa6-35e6-b25991bd59f9" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.DateTime,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor" />
      <parameters>
        <parameter name="samlSubject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
        <parameter name="authenticationMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authenticationInstant">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="dnsAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ipAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authorityBindings">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
      <file name="9d1b9f3d-0045-70d1-d37a-5c8d0dee607d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <topicdata group="api" />
      <apidata name="AddClaimsToList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="claims">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
      <file name="6e7580af-f241-70e2-7e6b-be0217f3d510" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationInstant">
      <topicdata group="api" />
      <apidata name="AuthenticationInstant" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthenticationInstant">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_AuthenticationInstant" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
      <file name="50ce497b-3e43-0b09-e16c-7f36d49b759b" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationMethod">
      <topicdata group="api" />
      <apidata name="AuthenticationMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthenticationMethod">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_AuthenticationMethod" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
      <file name="6c214ca1-fa3a-3436-3bcd-1de74254bdfb" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthorityBindings">
      <topicdata group="api" />
      <apidata name="AuthorityBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthorityBindings">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
      <file name="ddadc476-ea22-5a5c-4236-ad913e281b51" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.ClaimType">
      <topicdata group="api" />
      <apidata name="ClaimType" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClaimType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
      <file name="175d0ba2-14bd-f1d5-2b02-d2a56062bada" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.DnsAddress">
      <topicdata group="api" />
      <apidata name="DnsAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DnsAddress">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_DnsAddress" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
      <file name="5f97cafb-40bf-a0ad-5852-1a00f3fc8b9e" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IPAddress">
      <topicdata group="api" />
      <apidata name="IPAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IPAddress">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IPAddress" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
      <file name="d1dd1ad6-5fad-f4e6-8c5a-6364d63e9c54" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsReadOnly">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
      <file name="260aa997-88a4-cecf-03c3-b0df23c9892a" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
      <file name="debfa528-2ae0-2d0c-0507-f510a2d76db7" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
      <file name="ad4e929a-6071-32ce-60d4-5f7779b8b2f0" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
      <file name="71e7ee7f-a70d-d8d2-7712-7eb604db7640" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAuthorityBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAuthorityBinding" />
      <apidata name="SamlAuthorityBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2a4beb98-ab19-cdbf-ea85-0c295190cda7" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlAuthorityBinding">
      <topicdata name="SamlAuthorityBinding" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />
      <apidata name="SamlAuthorityBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor(System.Xml.XmlQualifiedName,System.String,System.String)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Location" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="5d10413e-f5a5-6967-7176-b59a16b503c2" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAuthorityBinding">
      <topicdata name="SamlAuthorityBinding" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />
      <apidata name="SamlAuthorityBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="24ce224a-4e0c-9d84-4e46-0d3c455f416d" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAuthorityBinding">
      <topicdata name="SamlAuthorityBinding" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />
      <apidata name="SamlAuthorityBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Location" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="2d5e396d-8468-c349-d890-4e3b760ca60a" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAuthorityBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor(System.Xml.XmlQualifiedName,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
      <file name="66330e64-034f-aeff-957e-5d3fcbf67fb5" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cee3dc9e-9a1e-34a3-8e45-be8f62c8ea6b" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor(System.Xml.XmlQualifiedName,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor" />
      <parameters>
        <parameter name="authorityKind">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="location">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
      <file name="cb0d961d-293e-08ad-68cb-8b3999af6cb1" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind">
      <topicdata group="api" />
      <apidata name="AuthorityKind" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthorityKind">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_AuthorityKind" />
      <returns>
        <type api="T:System.Xml.XmlQualifiedName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="1aa0c128-dfda-8a95-3804-cce56b1ef31e" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding">
      <topicdata group="api" />
      <apidata name="Binding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Binding">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Binding" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2dd54c7d-0f88-765f-fa0b-d29d366f56cd" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
      <file name="5c7595a6-f248-4a80-cb03-2bb4966e03e2" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Location">
      <topicdata group="api" />
      <apidata name="Location" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Location">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Location" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="52c1bfa3-07ca-d7eb-e14b-4b0337069498" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
      <file name="4eb76130-9814-9123-3518-ed41a4f2a386" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
      <file name="15c40601-4ea3-74fc-3c71-4b93417905ca" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
      <file name="a7c4019c-e596-745a-f182-bdb65eb72d95" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />
      <apidata name="SamlAuthorizationDecisionClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="718c3920-61a6-7eb5-5ef0-9bbe481a0f31" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource">
      <topicdata name="SamlAuthorizationDecisionClaimResource" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />
      <apidata name="SamlAuthorizationDecisionClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.#ctor(System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.String,System.String)" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.AccessDecision" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionName" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionNamespace" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Equals(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.GetHashCode" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Resource" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="a3a06186-1aeb-a893-8e8f-43f4ae5540ac" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource">
      <topicdata name="SamlAuthorizationDecisionClaimResource" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />
      <apidata name="SamlAuthorizationDecisionClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Equals(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="8b70f845-f666-d640-2a3f-73a810521f94" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource">
      <topicdata name="SamlAuthorizationDecisionClaimResource" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />
      <apidata name="SamlAuthorizationDecisionClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.AccessDecision" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionName" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionNamespace" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Resource" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="ce363b5d-5a9d-ffc0-e21b-9388e7eb1144" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.#ctor(System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="resource">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="accessDecision">
          <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
        </parameter>
        <parameter name="actionNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="actionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" ref="true" />
      </containers>
      <file name="5671b219-7499-83d9-79fa-1bb0b0a691e7" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.AccessDecision">
      <topicdata group="api" />
      <apidata name="AccessDecision" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AccessDecision">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" ref="true" />
      </containers>
      <file name="d11ce92c-9d1c-1d29-e355-9df79d5c4308" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionName">
      <topicdata group="api" />
      <apidata name="ActionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActionName">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" ref="true" />
      </containers>
      <file name="0308b138-45be-4f49-1c2a-ee95a1a789a6" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionNamespace">
      <topicdata group="api" />
      <apidata name="ActionNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActionNamespace">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" ref="true" />
      </containers>
      <file name="60e9ab63-a95a-f68b-7372-97b4f066142a" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" ref="true" />
      </containers>
      <file name="0c906422-e413-a6f7-3902-9e371b71842d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" ref="true" />
      </containers>
      <file name="b612aa78-c1cd-8bec-4707-cb481628fa52" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Resource">
      <topicdata group="api" />
      <apidata name="Resource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Resource">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" ref="true" />
      </containers>
      <file name="49455310-a7a0-cdce-2186-6037456c34ef" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />
      <apidata name="SamlAuthorizationDecisionStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="759e9b15-22cb-ec16-1635-22cb84197590" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement">
      <topicdata name="SamlAuthorizationDecisionStatement" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />
      <apidata name="SamlAuthorizationDecisionStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction})" />
          <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction},System.IdentityModel.Tokens.SamlEvidence)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="f6d9f50d-b1ae-8b82-7293-73067ce8c1e2" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement">
      <topicdata name="SamlAuthorizationDecisionStatement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />
      <apidata name="SamlAuthorizationDecisionStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="6592cce0-b03e-841e-c315-5b65b60dbcb5" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement">
      <topicdata name="SamlAuthorizationDecisionStatement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />
      <apidata name="SamlAuthorizationDecisionStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="a63fea9a-4c2e-7376-f51e-ba6d8d22cf44" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction})" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction},System.IdentityModel.Tokens.SamlEvidence)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
      <file name="75b2b065-0356-15ba-c8f3-68e548153c00" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
      <file name="5dda989b-dd5a-8a2a-ed89-226bb97873c1" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor" />
      <parameters>
        <parameter name="samlSubject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
        <parameter name="resource">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="accessDecision">
          <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
        </parameter>
        <parameter name="samlActions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="eadcfc24-0e3f-2a7a-84b6-c91315791fa3" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction},System.IdentityModel.Tokens.SamlEvidence)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor" />
      <parameters>
        <parameter name="samlSubject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
        <parameter name="resource">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="accessDecision">
          <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
        </parameter>
        <parameter name="samlActions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="samlEvidence">
          <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
      <file name="4f8c9976-c0b6-a521-be18-9e219b4e7160" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision">
      <topicdata group="api" />
      <apidata name="AccessDecision" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AccessDecision">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_AccessDecision" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
      <file name="453064bf-ca1e-6e8d-17ba-843f6f966d1e" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <topicdata group="api" />
      <apidata name="AddClaimsToList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="claims">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
      <file name="ecfdf93b-d486-b312-1141-753cc64bc864" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType">
      <topicdata group="api" />
      <apidata name="ClaimType" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClaimType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
      <file name="7623296c-7641-3027-9a1e-4676e9651362" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence">
      <topicdata group="api" />
      <apidata name="Evidence" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Evidence">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Evidence" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
      <file name="800777e3-8315-64d4-9eec-b6f329934a9e" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsReadOnly">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
      <file name="32e24529-0349-d62e-e706-84660b0d8077" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
      <file name="0827e929-6a67-864d-ff4f-98a302b0fa9d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
      <file name="2e687471-a82e-c0c7-178e-0335210e1e42" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource">
      <topicdata group="api" />
      <apidata name="Resource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Resource">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Resource" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
      <file name="978e5ae0-e505-2e18-cd62-9ff9cc76276d" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions">
      <topicdata group="api" />
      <apidata name="SamlActions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SamlActions">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
      <file name="f8d8121e-cd91-e54c-6214-e72c4d699393" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
      <file name="80cd053d-c84d-8a9e-9495-8dcc32f2cd4f" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlCondition">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlCondition" />
      <apidata name="SamlCondition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="bd8328bd-2ee1-4b74-4120-02d3c3a18436" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlCondition">
      <topicdata name="SamlCondition" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlCondition" />
      <apidata name="SamlCondition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlCondition.#ctor" />
        <element api="P:System.IdentityModel.Tokens.SamlCondition.IsReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="ab5e1b0f-bbc1-2591-2883-616ffe24ecd6" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlCondition">
      <topicdata name="SamlCondition" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlCondition" />
      <apidata name="SamlCondition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="5a3ec2bd-83c4-ea06-e83d-4eb388072120" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlCondition">
      <topicdata name="SamlCondition" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlCondition" />
      <apidata name="SamlCondition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlCondition.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="1d729a8b-69f5-ea31-c54d-344922aeb41f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlCondition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8626f8c0-95bc-449a-1a4b-7d2934c054d1" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlCondition.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
      </containers>
      <file name="6b9a746d-a9e8-a1df-ab9f-0fe5623a27ce" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
      </containers>
      <file name="af0fb491-4833-cc19-2a1e-e49c0c0a2ea1" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
      </containers>
      <file name="286704f1-2dc9-9081-ed7a-d0d71fc08bc3" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
      </containers>
      <file name="6cedb47e-647d-78eb-4a5b-c3313873f0fd" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlConditions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlConditions" />
      <apidata name="SamlConditions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="4b98fbfb-e6b3-e9b3-4c48-8a5e8b562a5e" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlConditions">
      <topicdata name="SamlConditions" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlConditions" />
      <apidata name="SamlConditions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SamlConditions.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlConditions.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime)" />
          <element api="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlCondition})" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SamlConditions.Conditions" />
        <element api="P:System.IdentityModel.Tokens.SamlConditions.IsReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlConditions.MakeReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlConditions.NotBefore" />
        <element api="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter" />
        <element api="M:System.IdentityModel.Tokens.SamlConditions.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlConditions.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="e501e27e-5bdf-6635-75ed-5d5efa0f96d7" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlConditions">
      <topicdata name="SamlConditions" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlConditions" />
      <apidata name="SamlConditions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlConditions.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlConditions.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlConditions.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="73991288-c872-34f8-0b72-bcac9ff3295f" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlConditions">
      <topicdata name="SamlConditions" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlConditions" />
      <apidata name="SamlConditions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlConditions.Conditions" />
        <element api="P:System.IdentityModel.Tokens.SamlConditions.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlConditions.NotBefore" />
        <element api="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="fcbfb209-0d65-3044-63c9-aba338e63706" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlConditions.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlConditions" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlConditions.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime)" />
        <element api="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlCondition})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
      <file name="97bbdd75-b0b1-8be8-d722-ad151850f99f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlConditions.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlConditions.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
      <file name="821e953c-f5b8-168d-d18f-c8c436f35ee4" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlConditions.#ctor" />
      <parameters>
        <parameter name="notBefore">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="notOnOrAfter">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="35ec27db-00e5-3700-161a-be9765e9cca6" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlCondition})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlConditions.#ctor" />
      <parameters>
        <parameter name="notBefore">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="notOnOrAfter">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="conditions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
      <file name="92705f74-7a50-158c-00dc-8183bcfa5078" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConditions.Conditions">
      <topicdata group="api" />
      <apidata name="Conditions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Conditions">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
      <file name="c0b28fdd-b690-a239-af0f-15ffa81d7181" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConditions.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
      <file name="16e435c1-5430-9400-2ca2-c14e7302eae9" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlConditions.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
      <file name="a5a99ccf-95c3-8457-c9f4-8a3de19c1e6e" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConditions.NotBefore">
      <topicdata group="api" />
      <apidata name="NotBefore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotBefore">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_NotBefore" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
      <file name="8c3cbe8d-64c8-3af5-685d-1e987fe80df5" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter">
      <topicdata group="api" />
      <apidata name="NotOnOrAfter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotOnOrAfter">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_NotOnOrAfter" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
      <file name="67e1e640-d372-acb7-775c-a87faaadd85b" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlConditions.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
      <file name="37d40064-4a14-011d-c154-3e1defef68f1" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlConditions.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
      <file name="39fec72d-f9ee-277b-b537-c76c241b541f" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlConstants">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlConstants" />
      <apidata name="SamlConstants" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="1f9deb00-be9a-525b-a740-e9bfc8caf4d5" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlConstants">
      <topicdata name="SamlConstants" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlConstants" />
      <apidata name="SamlConstants" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlConstants.EmailName" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.EmailNamespace" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.HolderOfKey" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.Namespace" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.SenderVouches" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.UserName" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.UserNameNamespace" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="4c43f30d-2920-4029-cdd7-7b49960b75e0" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlConstants">
      <topicdata name="SamlConstants" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlConstants" />
      <apidata name="SamlConstants" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlConstants.EmailName" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.EmailNamespace" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.HolderOfKey" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.Namespace" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.SenderVouches" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.UserName" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.UserNameNamespace" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="085e0a59-8eaf-9cbc-fa22-89de6794165a" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.EmailName">
      <topicdata group="api" />
      <apidata name="EmailName" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EmailName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
      <file name="df8046c7-de3b-dc2c-7298-94cf2aa8e14b" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.EmailNamespace">
      <topicdata group="api" />
      <apidata name="EmailNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EmailNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
      <file name="b1e05d58-67fa-8fff-39fb-d6244c7742ee" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.HolderOfKey">
      <topicdata group="api" />
      <apidata name="HolderOfKey" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HolderOfKey" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
      <file name="5543b931-26c4-c8ca-a33b-56dd785508d3" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue">
      <topicdata group="api" />
      <apidata name="MajorVersionValue" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MajorVersionValue" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
      <file name="fbbce07f-b41e-0280-926b-573483ef1112" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue">
      <topicdata group="api" />
      <apidata name="MinorVersionValue" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MinorVersionValue" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
      <file name="fa843f31-5ebe-49c9-1438-15b55112a87f" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
      <file name="cad6eaf2-4a66-4e48-0a0c-4911b39854f5" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.SenderVouches">
      <topicdata group="api" />
      <apidata name="SenderVouches" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SenderVouches" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
      <file name="1f5bad1e-f686-dfa7-21cb-9b70b968406e" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.UserName">
      <topicdata group="api" />
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
      <file name="316b3731-662b-9948-001e-e761c1140860" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.UserNameNamespace">
      <topicdata group="api" />
      <apidata name="UserNameNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserNameNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
      <file name="c2684fe8-5133-4ede-ffa2-49d994017cdf" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" />
      <apidata name="SamlDoNotCacheCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="6768bc86-8932-ff8e-f411-2309921e27da" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
      <topicdata name="SamlDoNotCacheCondition" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" />
      <apidata name="SamlDoNotCacheCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.#ctor" />
        <element api="P:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="99bba9bb-14e4-ce42-b336-532459996a7c" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
      <topicdata name="SamlDoNotCacheCondition" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" />
      <apidata name="SamlDoNotCacheCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="f06194a9-7088-ad64-70f9-b7f27b627d43" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
      <topicdata name="SamlDoNotCacheCondition" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" />
      <apidata name="SamlDoNotCacheCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="4ab517d8-aed8-edce-9dca-a251c4c1a6f0" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c5e6927c-6534-aa5b-c4de-7fc6612b0a93" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SamlCondition.IsReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsReadOnly">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" ref="true" />
      </containers>
      <file name="11c9361b-c754-6d1c-d5ba-9fed8267c4d7" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" ref="true" />
      </containers>
      <file name="fa4a50e1-6ef3-3457-7e3e-f6924eeb9489" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" ref="true" />
      </containers>
      <file name="8c8f764d-f2e0-b6b2-f630-61ffda854d1b" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" ref="true" />
      </containers>
      <file name="43ba07ed-153f-4a21-2762-eedf72741170" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlEvidence">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlEvidence" />
      <apidata name="SamlEvidence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="5f801edb-33f7-de3c-6650-bfd1900a06fe" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlEvidence">
      <topicdata name="SamlEvidence" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlEvidence" />
      <apidata name="SamlEvidence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SamlEvidence.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
          <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences" />
        <element api="P:System.IdentityModel.Tokens.SamlEvidence.Assertions" />
        <element api="P:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="e9833eb3-3fbb-9387-4d43-1e53080c5e90" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlEvidence">
      <topicdata name="SamlEvidence" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlEvidence" />
      <apidata name="SamlEvidence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="3dc8b465-3a78-e66c-f1b1-8dc6ece43ee9" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlEvidence">
      <topicdata name="SamlEvidence" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlEvidence" />
      <apidata name="SamlEvidence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences" />
        <element api="P:System.IdentityModel.Tokens.SamlEvidence.Assertions" />
        <element api="P:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="d6501a69-3dcc-f137-b036-ce763642cc41" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlEvidence.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlEvidence" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
      <file name="238de0bf-456e-a548-3d42-5e5c13812fc3" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlEvidence.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
      <file name="31abadbb-1315-46f9-dcfc-73a642879688" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
      <parameters>
        <parameter name="assertions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fbff68be-3b87-b961-c0e1-2a53af46f863" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
      <parameters>
        <parameter name="assertionIdReferences">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="84dcc425-7e5e-5264-f4f0-a9f94e316522" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
      <parameters>
        <parameter name="assertionIdReferences">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="assertions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
      <file name="cb6165dc-ebee-3f17-f361-19b38e876dec" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences">
      <topicdata group="api" />
      <apidata name="AssertionIdReferences" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssertionIdReferences">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
      <file name="8e510c90-9592-1d09-3523-83ad363947a4" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlEvidence.Assertions">
      <topicdata group="api" />
      <apidata name="Assertions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assertions">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
      <file name="e33d609a-ccf8-a038-5276-215c8fe31477" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
      <file name="94c97281-ebc0-099c-232f-e79da5e75458" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
      <file name="44f4f711-9711-c967-677a-af6fcd468adf" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlEvidence.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
      <file name="aa7e4162-6a24-6b7b-88ba-087724812f2e" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlEvidence.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
      <file name="569b5559-7646-46a0-e2c5-e08a258fe083" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />
      <apidata name="SamlNameIdentifierClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="60c72ba4-87bc-85fb-c236-c9b46ca6670c" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource">
      <topicdata name="SamlNameIdentifierClaimResource" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />
      <apidata name="SamlNameIdentifierClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Equals(System.Object)" />
        <element api="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Format" />
        <element api="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.GetHashCode" />
        <element api="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Name" />
        <element api="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.NameQualifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="59b88e73-624c-9ea0-1cbc-cfe0caf6e712" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource">
      <topicdata name="SamlNameIdentifierClaimResource" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />
      <apidata name="SamlNameIdentifierClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Equals(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="51469665-527b-3ecb-6be1-3bcd3def3c56" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource">
      <topicdata name="SamlNameIdentifierClaimResource" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />
      <apidata name="SamlNameIdentifierClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Format" />
        <element api="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Name" />
        <element api="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.NameQualifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="7f789951-2c3b-c1b4-96ac-affa0978a1a8" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nameQualifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" ref="true" />
      </containers>
      <file name="d04f399f-0a3a-c9ba-9eb2-fbd458ce2761" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" ref="true" />
      </containers>
      <file name="b2eb10dc-999f-6d54-75f5-f00b2545c46b" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Format">
      <topicdata group="api" />
      <apidata name="Format" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Format">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" ref="true" />
      </containers>
      <file name="9fb170be-473f-4133-a120-dac9ced791cb" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" ref="true" />
      </containers>
      <file name="8e175865-5a6f-7f3e-bf1e-c1a61f285b93" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" ref="true" />
      </containers>
      <file name="c2b90416-4863-9573-9da5-7d9d697129cc" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.NameQualifier">
      <topicdata group="api" />
      <apidata name="NameQualifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NameQualifier">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" ref="true" />
      </containers>
      <file name="ad39c14c-2d28-da9c-2b2b-0c14d5da4896" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlSecurityToken">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlSecurityToken" />
      <apidata name="SamlSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="ae1df3e3-f7b5-170a-8479-f5ae8e27721d" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlSecurityToken">
      <topicdata name="SamlSecurityToken" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlSecurityToken" />
      <apidata name="SamlSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SamlSecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor(System.IdentityModel.Tokens.SamlAssertion)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.Assertion" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.Id" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.Initialize(System.IdentityModel.Tokens.SamlAssertion)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidTo" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="96468526-beb4-2f8d-4b30-874bdf0b12c2" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlSecurityToken">
      <topicdata name="SamlSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlSecurityToken" />
      <apidata name="SamlSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.Initialize(System.IdentityModel.Tokens.SamlAssertion)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="e2873368-3762-e616-6c76-9be83f5b8955" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlSecurityToken">
      <topicdata name="SamlSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlSecurityToken" />
      <apidata name="SamlSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.Assertion" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="dd745ee5-fb99-30bb-c778-b7efe6e12099" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlSecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlSecurityToken" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor(System.IdentityModel.Tokens.SamlAssertion)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
      <file name="7e7c101c-e4d7-07e8-556e-46660c203b98" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSecurityToken.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="443db244-6118-5725-9420-5ae171ebae5d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor(System.IdentityModel.Tokens.SamlAssertion)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSecurityToken.#ctor" />
      <parameters>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
      <file name="75eda1e1-e633-685c-1d78-c71f4d5a20d9" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityToken.Assertion">
      <topicdata group="api" />
      <apidata name="Assertion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assertion">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
      <file name="89248059-975c-d149-f8ed-6ea61223bbba" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
      <file name="5a58de69-6512-ed36-1f8f-b2c329600823" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
      <file name="3658746a-6ecc-2159-8d4c-d61fb7d84b13" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
      <file name="607f6e1e-a6cb-042f-4054-5b295e16a225" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityToken.Initialize(System.IdentityModel.Tokens.SamlAssertion)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
      <file name="ad108847-602c-4dfa-29d0-485b73f38a03" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
      <file name="a395f512-0d94-9fb0-10db-04c998f70bc6" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
      <file name="d240c053-8d7b-5f0e-de85-ecebda14b265" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
      <file name="e6703f27-f954-82f8-6182-05a7e45e767e" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
      <file name="0c6aca2f-a528-dd8b-1690-721994af62ad" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlSerializer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlSerializer" />
      <apidata name="SamlSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="9dc0976f-f58c-1cc9-af50-ae98dccf0e3c" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlSerializer">
      <topicdata name="SamlSerializer" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlSerializer" />
      <apidata name="SamlSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="a7614ea2-66c1-b3fa-9115-94dfd8e06ebe" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlSerializer">
      <topicdata name="SamlSerializer" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlSerializer" />
      <apidata name="SamlSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="73332d70-d1a1-df2a-4814-d89681df662d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1ce1b9a2-1e2f-2fcd-cbdc-3267f8ec02a4" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="LoadAdvice" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
      <file name="3af2fa6e-52f6-9604-1af2-82421721c00b" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="LoadAssertion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
      <file name="f8d8e7df-983e-39bc-e4cf-1685bc211850" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="LoadAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
      <file name="1ece2852-1589-c665-66f1-7d74a4af6cdd" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="LoadCondition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
      <file name="2082c302-cdb4-41a9-527d-6cd9e6f6e927" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="LoadConditions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
      <file name="4778a4cf-aa96-6665-a87d-0eceea94c0b0" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="LoadStatement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
      <file name="d1a062f0-27dd-2c35-3251-2946769e13d8" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)">
      <topicdata group="api" />
      <apidata name="PopulateDictionary" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Xml.IXmlDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
      <file name="eb9b15e2-0c2c-93a1-c129-d40ccc5f396d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
      <file name="8772eff7-f869-d974-19b1-14e9b8bc2a89" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
        </parameter>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
      <file name="4d486848-adcd-86c0-0c6a-1f00ca73cbea" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlStatement">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlStatement" />
      <apidata name="SamlStatement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="f78a25be-43fd-9484-6d84-f81267a3b771" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlStatement">
      <topicdata name="SamlStatement" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlStatement" />
      <apidata name="SamlStatement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="P:System.IdentityModel.Tokens.SamlStatement.IsReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="72da2942-8b7b-3006-3ff6-03e3dd932932" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlStatement">
      <topicdata name="SamlStatement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlStatement" />
      <apidata name="SamlStatement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="f645ed19-d707-8165-6750-65e9959b444e" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlStatement">
      <topicdata name="SamlStatement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlStatement" />
      <apidata name="SamlStatement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlStatement.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="1c891b60-d65a-96e8-df4e-c961dd27d993" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlStatement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f03f6466-efc7-b87b-f72e-542aeb125a81" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
      <topicdata group="api" />
      <apidata name="CreatePolicy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="issuer">
          <type api="T:System.IdentityModel.Claims.ClaimSet" ref="true" />
        </parameter>
        <parameter name="samlAuthenticator">
          <type api="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
      </containers>
      <file name="20c9916f-549a-d50d-aa9e-7a329b2aadd5" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlStatement.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
      </containers>
      <file name="59c1a97f-e5f5-0c4c-539c-ca3084702168" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlStatement.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
      </containers>
      <file name="b233e73a-c847-6830-d729-5ba538c687e3" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
      </containers>
      <file name="97175f6e-692d-7abb-cd3d-8db825500a47" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
      </containers>
      <file name="f91110fd-2789-4c53-4aa2-be59c7051b2d" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlSubject">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlSubject" />
      <apidata name="SamlSubject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="8baad240-487a-e4f8-966c-84df7a775029" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlSubject">
      <topicdata name="SamlSubject" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlSubject" />
      <apidata name="SamlSubject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SamlSubject.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlSubject.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String)" />
          <element api="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SamlSubject.ConfirmationMethods" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.Crypto" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.ExtractClaims" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.ExtractSubjectKeyClaimSet(System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.KeyIdentifier" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.MakeReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.Name" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.NameClaimType" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.NameFormat" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.NameQualifier" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.SubjectConfirmationData" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="733e75a6-1cd5-f588-57f9-6cd108495c18" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlSubject">
      <topicdata name="SamlSubject" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlSubject" />
      <apidata name="SamlSubject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.ExtractClaims" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.ExtractSubjectKeyClaimSet(System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="7503185a-39fc-e7a5-efd0-8ff1c83706b2" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlSubject">
      <topicdata name="SamlSubject" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlSubject" />
      <apidata name="SamlSubject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlSubject.ConfirmationMethods" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.Crypto" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.KeyIdentifier" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.Name" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.NameClaimType" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.NameFormat" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.NameQualifier" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.SubjectConfirmationData" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="aacf750c-2fdf-a711-c2ff-4413571effee" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlSubject.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlSubject" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlSubject.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="1585babd-db7e-1500-b262-7cf813a34a67" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSubject.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="cdb3e8b1-131f-c8cb-f69e-1ddca9427d2f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSubject.#ctor" />
      <parameters>
        <parameter name="nameFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nameQualifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c9abc04c-213e-6458-0449-8b2ed7757d34" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSubject.#ctor" />
      <parameters>
        <parameter name="nameFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nameQualifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="confirmations">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="confirmationData">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="securityKeyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="59b1909c-e080-da4d-e2be-1989fd2989ec" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.ConfirmationMethods">
      <topicdata group="api" />
      <apidata name="ConfirmationMethods" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConfirmationMethods">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="4fa081d6-3baf-3b84-ec99-2cdea527dc7e" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.Crypto">
      <topicdata group="api" />
      <apidata name="Crypto" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Crypto">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Crypto" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="972e0b0b-65eb-c2b1-d177-be4c778d06c6" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.ExtractClaims">
      <topicdata group="api" />
      <apidata name="ExtractClaims" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="e347d766-0271-3589-03c0-2d25e3511814" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.ExtractSubjectKeyClaimSet(System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
      <topicdata group="api" />
      <apidata name="ExtractSubjectKeyClaimSet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="samlAuthenticator">
          <type api="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Claims.ClaimSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="43270dde-92ed-3b20-951b-f4efda61ab97" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="e4573719-fd9d-0665-a89c-24f05581651c" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.KeyIdentifier">
      <topicdata group="api" />
      <apidata name="KeyIdentifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyIdentifier">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_KeyIdentifier" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="e4ee706d-be22-4802-8e8b-c43da6d6ac89" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="e5aaa4cc-3b7f-1f73-f238-ba81549f7c41" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="e52a1f58-a5cc-8d44-fa7f-9939e4de18f9" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.NameClaimType">
      <topicdata group="api" />
      <apidata name="NameClaimType" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NameClaimType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="e824b7d6-bad4-e471-3964-e6d9f74715d6" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.NameFormat">
      <topicdata group="api" />
      <apidata name="NameFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NameFormat">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_NameFormat" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="8ae819de-1c30-03d1-b0fe-c950ab25478f" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.NameQualifier">
      <topicdata group="api" />
      <apidata name="NameQualifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NameQualifier">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_NameQualifier" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="cf732fdd-e20a-ed2c-6009-a5d4f6d8a65b" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="9dd06554-2358-389d-3f8c-bed1d08c6a52" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.SubjectConfirmationData">
      <topicdata group="api" />
      <apidata name="SubjectConfirmationData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SubjectConfirmationData">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_SubjectConfirmationData" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="b221e72e-5a8d-9632-de96-903e1dee1429" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
      <file name="6655738f-ea37-6804-a5e8-40bc7d7cfc84" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlSubjectStatement">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlSubjectStatement" />
      <apidata name="SamlSubjectStatement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="661c9ac2-62a5-c8ed-4323-e681cd932348" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SamlSubjectStatement">
      <topicdata name="SamlSubjectStatement" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SamlSubjectStatement" />
      <apidata name="SamlSubjectStatement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="Overload:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor(System.IdentityModel.Tokens.SamlSubject)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="dba6798f-3b44-953e-b59c-adfd8d5ae892" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlSubjectStatement">
      <topicdata name="SamlSubjectStatement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlSubjectStatement" />
      <apidata name="SamlSubjectStatement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="4a30c96a-6a25-399d-b21c-b7aa11cb227f" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlSubjectStatement">
      <topicdata name="SamlSubjectStatement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlSubjectStatement" />
      <apidata name="SamlSubjectStatement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="919ca3b2-e94f-5f5e-87a7-63c526f28845" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SamlSubjectStatement" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor(System.IdentityModel.Tokens.SamlSubject)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
      <file name="3cfd54cc-b723-6b04-8065-4f8867ac2f56" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="69e8a57e-9d10-68d3-bac4-aff609d57cb2" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor(System.IdentityModel.Tokens.SamlSubject)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor" />
      <parameters>
        <parameter name="samlSubject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
      <file name="8de37f9f-8631-2d83-73ab-40f9ef2ea3a5" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <topicdata group="api" />
      <apidata name="AddClaimsToList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="claims">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
      <file name="857e4bb0-43aa-d42f-331c-8e31acc09f36" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
      <topicdata group="api" />
      <apidata name="CreatePolicy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="issuer">
          <type api="T:System.IdentityModel.Claims.ClaimSet" ref="true" />
        </parameter>
        <parameter name="samlAuthenticator">
          <type api="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
      <file name="a8ad8d11-3937-89d0-1eae-9b3dac52c473" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SamlStatement.IsReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsReadOnly">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
      <file name="71c45e6d-b948-0d0f-c1df-341bd0d4150a" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.MakeReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
      <file name="05a32d8b-b4a2-b1fe-29b8-16f93e549a16" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject">
      <topicdata group="api" />
      <apidata name="SamlSubject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SamlSubject">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_SamlSubject" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
      <file name="df84bf04-5479-037f-a6b1-161c1624efcb" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)">
      <topicdata group="api" />
      <apidata name="SetSubject" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="samlSubject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
      <file name="053b0c7b-bf25-587d-d05a-beed1efcdd83" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityAlgorithms">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SecurityAlgorithms" />
      <apidata name="SecurityAlgorithms" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="003b84b2-c35a-4c32-f94c-084e6cc48d1d" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SecurityAlgorithms">
      <topicdata name="SecurityAlgorithms" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SecurityAlgorithms" />
      <apidata name="SecurityAlgorithms" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.DesEncryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14n" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14nWithComments" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha256Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivationDec2005" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Ripemd160Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha1Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha256Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha512Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.TlsSspiKeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.WindowsSspiKeyWrap" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="39930e16-de9b-498f-2200-5c1361ddf548" />
    </api>
    <api id="Fields.T:System.IdentityModel.Tokens.SecurityAlgorithms">
      <topicdata name="SecurityAlgorithms" group="list" subgroup="Fields" typeTopicId="T:System.IdentityModel.Tokens.SecurityAlgorithms" />
      <apidata name="SecurityAlgorithms" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.DesEncryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14n" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14nWithComments" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha256Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivationDec2005" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Ripemd160Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha1Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha256Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha512Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.TlsSspiKeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.WindowsSspiKeyWrap" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="2e37041d-95d0-ae02-b538-585fd9464141" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption">
      <topicdata group="api" />
      <apidata name="Aes128Encryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="c1c4dac3-652e-8a8f-2fb0-f1a53288070d" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap">
      <topicdata group="api" />
      <apidata name="Aes128KeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="a0ff4fda-9b64-6c92-e786-d2ded2afd23b" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption">
      <topicdata group="api" />
      <apidata name="Aes192Encryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="53115d67-d6ca-03a0-6b14-c6a33eae1b43" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap">
      <topicdata group="api" />
      <apidata name="Aes192KeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="630a5179-f0fe-9f94-3518-76acd3d2eff2" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption">
      <topicdata group="api" />
      <apidata name="Aes256Encryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="12a4081d-7a29-3c54-6417-7697e19955fe" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap">
      <topicdata group="api" />
      <apidata name="Aes256KeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="412fe3d1-f3a6-3000-ddf0-b5e3cc8ffd99" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.DesEncryption">
      <topicdata group="api" />
      <apidata name="DesEncryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="d3cbdb3c-9ef0-4be7-85ab-27cd35869ae0" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature">
      <topicdata group="api" />
      <apidata name="DsaSha1Signature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="1712bded-647f-b4a9-1244-3e4c513da6db" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14n">
      <topicdata group="api" />
      <apidata name="ExclusiveC14n" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="2702f341-7662-124f-af5f-760f9ce1eb7a" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14nWithComments">
      <topicdata group="api" />
      <apidata name="ExclusiveC14nWithComments" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="12e2dc2f-e6f5-83e0-23fc-cf032865097a" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature">
      <topicdata group="api" />
      <apidata name="HmacSha1Signature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="a05b1d93-9ee8-54c5-1254-0a70fcddb29c" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha256Signature">
      <topicdata group="api" />
      <apidata name="HmacSha256Signature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="827684d5-fd36-1f36-de9a-3d76834df0a8" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation">
      <topicdata group="api" />
      <apidata name="Psha1KeyDerivation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="814d62bd-349b-abb1-8a3d-9b3ad2f02eeb" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivationDec2005">
      <topicdata group="api" />
      <apidata name="Psha1KeyDerivationDec2005" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="8023c87e-61f4-6515-7b77-f8c3dc3afde3" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Ripemd160Digest">
      <topicdata group="api" />
      <apidata name="Ripemd160Digest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="44dbf916-c200-a601-b9f4-3d5a5e48e8ff" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap">
      <topicdata group="api" />
      <apidata name="RsaOaepKeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="fccf9fc2-b2f2-75be-3938-9bcc45734946" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature">
      <topicdata group="api" />
      <apidata name="RsaSha1Signature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="5c4382aa-0730-41c5-c827-65d0d36a0e63" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature">
      <topicdata group="api" />
      <apidata name="RsaSha256Signature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="a4f206cb-4063-c8ef-cdde-d5b6b225fc37" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap">
      <topicdata group="api" />
      <apidata name="RsaV15KeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="2b1701dc-bc67-6d12-a529-33c2e210b847" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha1Digest">
      <topicdata group="api" />
      <apidata name="Sha1Digest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="7fd9a58d-a3e4-d4e5-7001-9bb1f26cf28f" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha256Digest">
      <topicdata group="api" />
      <apidata name="Sha256Digest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="baf29236-7021-c8fc-23f7-bfc164b61c10" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha512Digest">
      <topicdata group="api" />
      <apidata name="Sha512Digest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="2e5bae86-c68b-b914-a0c6-eee4e26eac3f" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.TlsSspiKeyWrap">
      <topicdata group="api" />
      <apidata name="TlsSspiKeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="600d74b3-75a7-fd4c-d4c8-dbc796528ea2" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption">
      <topicdata group="api" />
      <apidata name="TripleDesEncryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="f189ad13-12a6-683f-dd8a-d855315f4877" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap">
      <topicdata group="api" />
      <apidata name="TripleDesKeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="3bcae306-255e-723b-f46f-b3e2f7d41a8e" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.WindowsSspiKeyWrap">
      <topicdata group="api" />
      <apidata name="WindowsSspiKeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
      <file name="fa8234a1-ed1a-5177-52ec-18c81f8e9745" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityKey">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SecurityKey" />
      <apidata name="SecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="5f9b8150-6d57-52f0-f97e-656691ab1094" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SecurityKey">
      <topicdata name="SecurityKey" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SecurityKey" />
      <apidata name="SecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="P:System.IdentityModel.Tokens.SecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="fcb58e90-da0a-22f5-d8c3-969ec78670b5" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityKey">
      <topicdata name="SecurityKey" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityKey" />
      <apidata name="SecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="65349293-e1d5-852d-154c-d4b2cdef49f7" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityKey">
      <topicdata name="SecurityKey" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityKey" />
      <apidata name="SecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="be80a7f5-91aa-1b9d-326c-b52b894bad8f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKey.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="308bb22b-1c7c-2d3b-2add-308adad5dcdf" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="DecryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </containers>
      <file name="8d2c298f-2ddf-cb10-bf3f-2bfd1c932e21" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="EncryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </containers>
      <file name="b76e8688-be7b-5e9d-f4ac-c2edb35dcd8e" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </containers>
      <file name="89af9e83-f3a4-ec74-50de-6d4589f63892" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSupportedAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </containers>
      <file name="668b8a72-62e3-fd7b-0b83-2e2e782e26ff" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </containers>
      <file name="6e2b178a-04bd-a054-d5cc-53a4eea42c25" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKey.KeySize">
      <topicdata group="api" />
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_KeySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </containers>
      <file name="d0290c4e-0a26-1d38-0819-3c40e880a342" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityKeyIdentifier">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      <apidata name="SecurityKeyIdentifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="38ffc72d-3d59-1434-96e0-699cd83a4a41" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SecurityKeyIdentifier">
      <topicdata name="SecurityKeyIdentifier" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      <apidata name="SecurityKeyIdentifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="TElement" index="0" api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor">
          <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="56d1363f-2f42-9c7e-1c3a-8726ff061d45" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityKeyIdentifier">
      <topicdata name="SecurityKeyIdentifier" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      <apidata name="SecurityKeyIdentifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="TElement" index="0" api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="4b7a6316-232b-1e03-b8b6-4b391c13a1b2" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityKeyIdentifier">
      <topicdata name="SecurityKeyIdentifier" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      <apidata name="SecurityKeyIdentifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="891aac05-8578-cbbc-8c0a-fdee2d2517fb" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
      <file name="edf1cf51-dfe0-5a58-568a-a6e01d7346b9" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
      <file name="9deb3198-9b2d-1f6d-60ea-bbbda8c33e33" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor" />
      <parameters>
        <parameter name="clauses" params="true">
          <arrayOf rank="1">
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
      <file name="7632c11f-022e-02e7-cd58-f2226648bed1" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="clause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
      <file name="6bf03b52-be69-00a1-d756-cf30381181db" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey">
      <topicdata group="api" />
      <apidata name="CanCreateKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanCreateKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
      <file name="ea502b8c-8457-7277-51de-3bffbac74e28" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
      <file name="358b6e1c-323c-839a-63c7-aa9ebc469f61" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey">
      <topicdata group="api" />
      <apidata name="CreateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
      <file name="9a7eefc1-dad0-0012-9400-851764271263" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TClause">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="TClause" index="0" api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
      <file name="ed885cf1-9a96-d10b-d426-97050ff173a4" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
      <file name="22449266-a06f-c7d9-3c1a-eab69cbd9800" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
      <file name="50cafb69-d239-728e-a8f0-1eab1ae3b3d2" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
      <file name="2f0f052f-45ff-be10-b3af-6baf75e5c53f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
      <file name="067b6066-ab59-524b-475e-02572ea2b202" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ba33e8f4-0065-07b7-3cec-9b6c4dd03bdf" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
      <file name="07fae479-ba40-eaea-83fb-9d944cfa3462" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)">
      <topicdata group="api" />
      <apidata name="TryFind" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TClause">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="clause" out="true">
          <referenceTo>
            <template name="TClause" index="0" api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
      <file name="1071d389-c351-160c-3b00-958e0c7e90af" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      <apidata name="SecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
          <type api="T:System.ServiceModel.Security.KeyNameIdentifierClause" ref="true" />
          <type api="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="c83327dd-aad4-480d-f593-c68e90ca71bc" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
      <topicdata name="SecurityKeyIdentifierClause" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      <apidata name="SecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="74b4c5dd-e2e3-4d62-df92-6e6119d0ebc6" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
      <topicdata name="SecurityKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      <apidata name="SecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="a9482e16-e03c-66e4-6544-787e25b199a0" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
      <topicdata name="SecurityKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      <apidata name="SecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="084db680-44bc-2316-cf21-86027f6ae6d2" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
      <file name="ecd75f4e-f290-726e-0fc4-ca7cadfccc35" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="clauseType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="25171433-924d-23ef-1a49-1b81765ad525" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="clauseType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6ccc35d4-445e-8900-c64e-0d12dc92cb55" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
      <topicdata group="api" />
      <apidata name="CanCreateKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanCreateKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
      <file name="d9ce387e-b2a5-e121-d368-233aaaa4258b" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType">
      <topicdata group="api" />
      <apidata name="ClauseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClauseType">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
      <file name="303258d2-038d-f2e1-dbad-c361550ab225" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
      <topicdata group="api" />
      <apidata name="CreateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
      <file name="65b78ba4-c370-b17c-b9da-677e59743e18" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength">
      <topicdata group="api" />
      <apidata name="DerivationLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DerivationLength">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
      <file name="3f985e62-1132-e0f1-0c25-3e63e7109f16" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce">
      <topicdata group="api" />
      <apidata name="GetDerivationNonce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
      <file name="22462fbf-beaa-8cf4-7b7f-c94571c5c48e" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
      <file name="662facf8-e0c5-da78-deeb-8954f8406252" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityKeyType">
      <topicdata group="api" />
      <apidata name="SecurityKeyType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />
        <element api="F:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey" />
        <element api="F:System.IdentityModel.Tokens.SecurityKeyType.BearerKey" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="7c553cb2-4c98-2146-c5b8-d3b3f9c8fc42" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey">
      <topicdata group="api" notopic="" />
      <apidata name="AsymmetricKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyType" ref="false" />
      </containers>
      <file name="3e56ba93-3949-3a19-a85c-f2552ea87d17" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityKeyType.BearerKey">
      <topicdata group="api" notopic="" />
      <apidata name="BearerKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyType" ref="false" />
      </containers>
      <file name="4bb7970a-9ef9-b7e4-64e2-2d7ec1ced8c8" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey">
      <topicdata group="api" notopic="" />
      <apidata name="SymmetricKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyType" ref="false" />
      </containers>
      <file name="18635c3b-2b57-824f-96bc-34ccaaa2d9ee" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityKeyUsage">
      <topicdata group="api" />
      <apidata name="SecurityKeyUsage" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.SecurityKeyUsage.Exchange" />
        <element api="F:System.IdentityModel.Tokens.SecurityKeyUsage.Signature" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="98f2f838-6efb-cb39-03bb-4aede619fd46" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityKeyUsage.Exchange">
      <topicdata group="api" notopic="" />
      <apidata name="Exchange" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyUsage" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyUsage" ref="false" />
      </containers>
      <file name="9b0e275e-ced2-1016-3c70-0ead3ca3da7d" />
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityKeyUsage.Signature">
      <topicdata group="api" notopic="" />
      <apidata name="Signature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyUsage" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyUsage" ref="false" />
      </containers>
      <file name="0cba1fb1-5df8-2b38-970c-b61fb24f6e49" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityToken">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SecurityToken" />
      <apidata name="SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
          <type api="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" ref="true" />
          <type api="T:System.ServiceModel.Security.Tokens.SspiSecurityToken" ref="true" />
          <type api="T:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken" ref="true" />
          <type api="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="93fdbde1-3470-1de4-feee-bb4ca58ac4bf" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SecurityToken">
      <topicdata name="SecurityToken" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SecurityToken" />
      <apidata name="SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="P:System.IdentityModel.Tokens.SecurityToken.Id" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="d6397d73-5723-381d-f654-d54ed05b59bb" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityToken">
      <topicdata name="SecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityToken" />
      <apidata name="SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="7a5d86d8-1b47-6687-3129-75cfb1d8beb6" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityToken">
      <topicdata name="SecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityToken" />
      <apidata name="SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="2be8071d-2e99-61b8-cffa-e1baec230690" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityToken.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3b89f953-c0c9-cf81-0c49-7eb71927e804" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
      <file name="72b09916-5283-5620-14b9-3cdbcc443b1d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
      <file name="9a473320-cd8a-cddb-3148-cb7453116b4c" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
      <file name="564004fd-d5b7-d423-bb6b-043936d45815" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
      <file name="0ded320e-1045-083e-336a-753d53c83592" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="ResolveKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
      <file name="07027ad8-380f-9ba0-cae6-e5f2a4ef6b7a" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
      <file name="f680d06f-f98a-5867-a493-66512a48363c" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
      <file name="3845d81f-ebdf-0653-13a4-29568bb586b4" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
      <file name="52512e38-6813-1b87-aea4-310f1c62ea76" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SecurityTokenException" />
      <apidata name="SecurityTokenException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="5a97423c-8c50-064c-dba3-bb867e63c9ef" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SecurityTokenException">
      <topicdata name="SecurityTokenException" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenException" />
      <apidata name="SecurityTokenException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenException.#ctor">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="ae65cd57-c176-3d8a-474c-396c66be37b4" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityTokenException">
      <topicdata name="SecurityTokenException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenException" />
      <apidata name="SecurityTokenException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="bd678528-d53f-5a50-b705-b230af1cce64" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityTokenException">
      <topicdata name="SecurityTokenException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenException" />
      <apidata name="SecurityTokenException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="c28d13c6-e9e0-aa63-25c5-7bac7790451b" />
    </api>
    <api id="Events.T:System.IdentityModel.Tokens.SecurityTokenException">
      <topicdata name="SecurityTokenException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenException" />
      <apidata name="SecurityTokenException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="c28a24b9-2aba-56cb-1df5-5dddff9cf216" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SecurityTokenException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
      </containers>
      <file name="5101b0d2-d6e6-faed-e847-376a257cc55c" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="51896301-cc94-ca3f-1e28-492fbfd432b9" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6ae76e28-7b2f-d1c8-7231-4aad5c2f2a43" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c1cd67c3-d8a2-6ece-630a-4695e2546849" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="89dbcc8f-df29-a65f-d95a-637cb1147cf7" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenTypes">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SecurityTokenTypes" />
      <apidata name="SecurityTokenTypes" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="b141a764-70ed-9450-a731-80a054797c8d" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SecurityTokenTypes">
      <topicdata name="SecurityTokenTypes" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenTypes" />
      <apidata name="SecurityTokenTypes" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.Rsa" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.Saml" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.UserName" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="3547ffb2-28c9-dc80-de36-dcb1c9fd4ef9" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityTokenTypes">
      <topicdata name="SecurityTokenTypes" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenTypes" />
      <apidata name="SecurityTokenTypes" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.Rsa" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.Saml" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.UserName" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="f47cca29-f1c3-e24f-1038-7408bcc7f5a8" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos">
      <topicdata group="api" />
      <apidata name="Kerberos" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Kerberos" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenTypes" ref="true" />
      </containers>
      <file name="85a9ad4c-d8e2-7f08-340f-724b2e630460" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenTypes.Rsa">
      <topicdata group="api" />
      <apidata name="Rsa" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Rsa" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenTypes" ref="true" />
      </containers>
      <file name="1d00c402-a5a2-3893-bec6-dceacd49631c" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenTypes.Saml">
      <topicdata group="api" />
      <apidata name="Saml" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Saml" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenTypes" ref="true" />
      </containers>
      <file name="81f76059-77d1-1f90-6d9b-5d12399e6ef5" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenTypes.UserName">
      <topicdata group="api" />
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenTypes" ref="true" />
      </containers>
      <file name="fd5217ca-8bb9-326c-c2e9-01b9b9ca7e39" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate">
      <topicdata group="api" />
      <apidata name="X509Certificate" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_X509Certificate" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenTypes" ref="true" />
      </containers>
      <file name="a8326bfd-0d18-2e6e-66e6-cd5e6c3b510a" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenValidationException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SecurityTokenValidationException" />
      <apidata name="SecurityTokenValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="82532d20-6614-4595-6016-eace98be7e9f" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SecurityTokenValidationException">
      <topicdata name="SecurityTokenValidationException" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />
      <apidata name="SecurityTokenValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="1273684a-7379-2824-b382-d1919f3d3ca5" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityTokenValidationException">
      <topicdata name="SecurityTokenValidationException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />
      <apidata name="SecurityTokenValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="3b6c95d4-53c1-f433-5f2e-d3125cc59886" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityTokenValidationException">
      <topicdata name="SecurityTokenValidationException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />
      <apidata name="SecurityTokenValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="3e40eab1-a12c-d652-32cd-f8b8a40bc9fe" />
    </api>
    <api id="Events.T:System.IdentityModel.Tokens.SecurityTokenValidationException">
      <topicdata name="SecurityTokenValidationException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />
      <apidata name="SecurityTokenValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="10cfde7e-97b1-e2af-7a77-c211bed64e8b" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SecurityTokenValidationException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
      </containers>
      <file name="c384a53b-c30a-60df-db9f-2faa35ac708a" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="43379102-c064-454f-c25c-b6c67df9546d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e6843a05-a067-a534-99ca-75505623e519" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7eef634a-f932-3829-35bd-a1df429f4972" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e15e52c8-eb32-b925-21f7-ef1c26187a15" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SigningCredentials">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SigningCredentials" />
      <apidata name="SigningCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="01f9a2ba-9423-4411-95c2-7d0a53072509" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SigningCredentials">
      <topicdata name="SigningCredentials" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SigningCredentials" />
      <apidata name="SigningCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SigningCredentials.#ctor">
          <element api="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)" />
          <element api="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SigningKey" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="cf453927-3c2a-0c78-ce05-20e4a1840920" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SigningCredentials">
      <topicdata name="SigningCredentials" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SigningCredentials" />
      <apidata name="SigningCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="cf7451cb-0cfd-b344-82b0-89ab6365ef11" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SigningCredentials">
      <topicdata name="SigningCredentials" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SigningCredentials" />
      <apidata name="SigningCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SigningKey" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="7b6dc725-16a7-244a-9cb3-d3567aafb94d" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SigningCredentials.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SigningCredentials" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </containers>
      <file name="4c0a44b4-84a8-6f50-a776-7db96cdd7ba5" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SigningCredentials.#ctor" />
      <parameters>
        <parameter name="signingKey">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </parameter>
        <parameter name="signatureAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="digestAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ecc27e04-7db7-ae20-9d26-226c762e465c" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SigningCredentials.#ctor" />
      <parameters>
        <parameter name="signingKey">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </parameter>
        <parameter name="signatureAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="digestAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="signingKeyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </containers>
      <file name="498153b0-2bd3-0ab2-24f4-a8c626f4b510" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm">
      <topicdata group="api" />
      <apidata name="DigestAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DigestAlgorithm">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </containers>
      <file name="75477ffa-e222-7d88-607f-2aa4cdb84cd2" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm">
      <topicdata group="api" />
      <apidata name="SignatureAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SignatureAlgorithm">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </containers>
      <file name="a9285c01-1451-7ebd-86a5-3a8f9cce0300" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SigningCredentials.SigningKey">
      <topicdata group="api" />
      <apidata name="SigningKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SigningKey">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </containers>
      <file name="b0aa6bad-5c1d-8b91-cbbf-e7bb51371568" />
    </api>
    <api id="P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier">
      <topicdata group="api" />
      <apidata name="SigningKeyIdentifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SigningKeyIdentifier">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </containers>
      <file name="6729aaba-d468-6c9f-02e0-ea81138a2632" />
    </api>
    <api id="T:System.IdentityModel.Tokens.SymmetricSecurityKey">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.SymmetricSecurityKey" />
      <apidata name="SymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="3ce80b8c-346c-df41-b592-63a3bcf9d3c0" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.SymmetricSecurityKey">
      <topicdata name="SymmetricSecurityKey" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />
      <apidata name="SymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="P:System.IdentityModel.Tokens.SecurityKey.KeySize" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="77d924d6-8fac-6649-6bff-836334b824db" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SymmetricSecurityKey">
      <topicdata name="SymmetricSecurityKey" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />
      <apidata name="SymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="d0e1ee3d-36da-fc42-a9dc-6024096c409b" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SymmetricSecurityKey">
      <topicdata name="SymmetricSecurityKey" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />
      <apidata name="SymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="ddf0ebf1-7d7a-d3e0-f4a0-7da1aa38428f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d137261d-fe07-9ad6-eeb0-04fdaef63119" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GenerateDerivedKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="label">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="nonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivedKeyLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
      <file name="d1947701-78ad-a480-cfae-fd96513d7256" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="GetDecryptionTransform" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
      <file name="e0b27da4-be31-26fc-e9cc-558578017614" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="GetEncryptionTransform" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
      <file name="34d61d65-f6dd-653d-ab07-cf23ec48213e" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
      <topicdata group="api" />
      <apidata name="GetIVSize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
      <file name="4f0d8580-b7bf-ab00-a0bb-647ad48fac8b" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="GetKeyedHashAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.KeyedHashAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
      <file name="24624488-4203-716a-8ff6-a25e0552b7b5" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="GetSymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
      <file name="8bb0a3af-653a-d1f3-dcb7-93961a7e3138" />
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey">
      <topicdata group="api" />
      <apidata name="GetSymmetricKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
      <file name="0257cd50-6d62-9e62-2761-201d1f0faba2" />
    </api>
    <api id="T:System.IdentityModel.Tokens.UserNameSecurityToken">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.UserNameSecurityToken" />
      <apidata name="UserNameSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="b3547eb6-8efb-a42a-30db-3e7553e54a7d" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.UserNameSecurityToken">
      <topicdata name="UserNameSecurityToken" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.UserNameSecurityToken" />
      <apidata name="UserNameSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String)" />
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String,System.String)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.Password" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="0092ca07-c66d-2b81-a325-b6b83d486bde" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.UserNameSecurityToken">
      <topicdata name="UserNameSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.UserNameSecurityToken" />
      <apidata name="UserNameSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="5cabc12b-6e98-95af-10a2-9d12329fb4b2" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.UserNameSecurityToken">
      <topicdata name="UserNameSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.UserNameSecurityToken" />
      <apidata name="UserNameSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.Password" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="97c8c762-8e94-6ab9-4ce9-9ce5402e0393" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.UserNameSecurityToken" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String)" />
        <element api="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
      <file name="11aaf80b-9d4d-d0d1-b6ab-6f42c07a7525" />
    </api>
    <api id="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor" />
      <parameters>
        <parameter name="userName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
      <file name="ade2a9bd-4e6d-6dec-0068-e14d8889141c" />
    </api>
    <api id="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor" />
      <parameters>
        <parameter name="userName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
      <file name="f69625b6-d8eb-e817-651b-593a8ee88a97" />
    </api>
    <api id="P:System.IdentityModel.Tokens.UserNameSecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
      <file name="cf6021b2-e658-a0ab-d5ed-12a4dd1ee622" />
    </api>
    <api id="P:System.IdentityModel.Tokens.UserNameSecurityToken.Password">
      <topicdata group="api" />
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Password">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
      <file name="1a455493-f1be-7055-754d-6d7d74a7e72c" />
    </api>
    <api id="P:System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
      <file name="3b9a42f8-d4b3-8a62-ff98-d58b93e94860" />
    </api>
    <api id="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName">
      <topicdata group="api" />
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserName">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
      <file name="24943e30-ca58-b167-de1e-5d079afad92a" />
    </api>
    <api id="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
      <file name="33b1e15c-f7c6-79be-d32d-356539d6b578" />
    </api>
    <api id="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
      <file name="192f8dd0-1595-e80a-853c-2228bc81be05" />
    </api>
    <api id="T:System.IdentityModel.Tokens.WindowsSecurityToken">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.WindowsSecurityToken" />
      <apidata name="WindowsSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="009b5f31-e989-f5c4-678c-8d8c8e209158" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.WindowsSecurityToken">
      <topicdata name="WindowsSecurityToken" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.WindowsSecurityToken" />
      <apidata name="WindowsSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor" />
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity)" />
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String)" />
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String,System.String)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id" />
        <element api="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize">
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="b6d035e5-fa04-90d3-8cb9-81cb03f79351" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.WindowsSecurityToken">
      <topicdata name="WindowsSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.WindowsSecurityToken" />
      <apidata name="WindowsSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose" />
        <element api="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize">
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="4cf3352d-f398-2aa3-a527-071dd7ed9d2a" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.WindowsSecurityToken">
      <topicdata name="WindowsSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.WindowsSecurityToken" />
      <apidata name="WindowsSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="9244a135-1b3a-6936-74b3-43632e5ad64d" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.WindowsSecurityToken" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity)" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <file name="55fd8171-adcb-b381-78f2-d492b922bdbb" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize">
      <topicdata name="Initialize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.WindowsSecurityToken" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <file name="16fc32dc-e0f2-c5e9-1582-a884080ab92f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6ae88554-b625-fb65-16f9-eb173970a9c1" />
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor" />
      <parameters>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <file name="06e998ad-0980-16cf-aecc-de62253d2784" />
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor" />
      <parameters>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="25594c8d-d4a9-aa13-6733-e30551520880" />
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor" />
      <parameters>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authenticationType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <file name="9c785f9e-ed84-d348-ed63-0a6a7fdc85af" />
    </api>
    <api id="P:System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType">
      <topicdata group="api" />
      <apidata name="AuthenticationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthenticationType">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <file name="07665dd0-ea4c-25bc-6b9c-f4ddcd463c84" />
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <file name="eb2ae709-9c68-9a48-d422-1f8519db6602" />
    </api>
    <api id="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <file name="29356e1d-59ff-7de0-c7f8-d3399b00bbf8" />
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="effectiveTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="expirationTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
        <parameter name="clone">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1c525341-94e7-e0a1-3bcb-4054d8c1ed9c" />
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authenticationType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="effectiveTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="expirationTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
        <parameter name="clone">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <file name="14f096c0-1f64-d268-e776-a8a7745a5038" />
    </api>
    <api id="P:System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <file name="7ec0e068-6f37-53bc-5054-909a367652ef" />
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed">
      <topicdata group="api" />
      <apidata name="ThrowIfDisposed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <file name="9e7fb7e3-51c5-cedf-3349-0e07594be41e" />
    </api>
    <api id="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <file name="ef41d9a4-7922-9891-21cd-b7501643cd49" />
    </api>
    <api id="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <file name="d500786e-dd57-429d-9f26-81fc5433ecd8" />
    </api>
    <api id="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity">
      <topicdata group="api" />
      <apidata name="WindowsIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_WindowsIdentity" />
      <returns>
        <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
      <file name="1871d2e0-a796-0a60-2094-8efd2fec86bf" />
    </api>
    <api id="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />
      <apidata name="X509AsymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="5218bf77-f5f6-236e-8328-b0b9f089251e" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey">
      <topicdata name="X509AsymmetricSecurityKey" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />
      <apidata name="X509AsymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="3d6d3507-db1c-f44f-53e9-5e3c717dabfb" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey">
      <topicdata name="X509AsymmetricSecurityKey" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />
      <apidata name="X509AsymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="cc5c0ad4-6612-6678-c578-a677ff0752f5" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey">
      <topicdata name="X509AsymmetricSecurityKey" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />
      <apidata name="X509AsymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="37fb8897-9e13-66e3-a384-7d874217099c" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="7128a281-9d02-b45a-033b-7c1170369ab8" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="DecryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="c838e713-36db-d380-9b82-873b9fdc3ffe" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="EncryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="034378c7-d6a8-3560-59bc-2b37888a39b7" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAsymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="privateKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="616048dc-7ab4-82ad-c8d2-f86cf441746a" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
      <topicdata group="api" />
      <apidata name="GetHashAlgorithmForSignature" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="bff7f44d-e596-ae49-f6e1-e34d396d088e" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
      <topicdata group="api" />
      <apidata name="GetSignatureDeformatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="9e785429-6b39-bedd-cf75-5fa00204a727" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
      <topicdata group="api" />
      <apidata name="GetSignatureFormatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricSignatureFormatter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="09c296e5-5b10-9785-4f9a-9bb105c6d21b" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey">
      <topicdata group="api" />
      <apidata name="HasPrivateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="49aceb9e-a579-fe16-296e-132d652fdd8e" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="454f3f7b-51f5-98d2-1f9d-e047a546b363" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSupportedAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="8d9753cf-e01a-e201-174e-f63a68a6b347" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="1a8d2d32-c8de-c6c1-310c-f12c7ad67d44" />
    </api>
    <api id="P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize">
      <topicdata group="api" />
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityKey.KeySize">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
      <file name="ff24403f-7ea4-66ee-6146-c5ee65ba0589" />
    </api>
    <api id="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />
      <apidata name="X509IssuerSerialKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="4b6ef6e3-17f0-8c4f-6ccf-194d8fbf1200" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause">
      <topicdata name="X509IssuerSerialKeyIdentifierClause" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />
      <apidata name="X509IssuerSerialKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.String,System.String)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerName" />
        <element api="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerSerialNumber" />
        <element api="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="2c17f4f9-745e-85ff-0552-d6efdf5f808d" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause">
      <topicdata name="X509IssuerSerialKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />
      <apidata name="X509IssuerSerialKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="5bea488f-bddb-7394-5572-0c0d9df5db79" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause">
      <topicdata name="X509IssuerSerialKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />
      <apidata name="X509IssuerSerialKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerName" />
        <element api="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerSerialNumber" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="e9803f7d-b2aa-ee92-c231-39ae3dd82a1d" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
      <file name="41b897a4-4d96-47c3-7a46-2bdadd47aa91" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
      <file name="d93835b4-f46b-b840-dd95-6c1c8d5c0697" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
      <file name="9f3d6985-fcbf-4332-6e19-48493ffb21e6" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="issuerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="issuerSerialNumber">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
      <file name="109cac14-64fa-fdc2-b806-0bfd6d9a5127" />
    </api>
    <api id="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerName">
      <topicdata group="api" />
      <apidata name="IssuerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IssuerName">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
      <file name="73134b03-99ce-1170-51fd-32852b5c43e6" />
    </api>
    <api id="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerSerialNumber">
      <topicdata group="api" />
      <apidata name="IssuerSerialNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IssuerSerialNumber">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
      <file name="52b91688-1fca-cc60-5d57-b4dbf8d40603" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
      <file name="c483a706-1622-206a-d9d0-ee42840f2447" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
      <file name="25f87219-f583-32ca-58fa-ce10f20d8d1b" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="issuerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="issuerSerialNumber">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
      <file name="5ca1197d-c80f-9ede-3311-5c0101ee4e12" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
      <file name="9945067a-4a93-4cb2-62d9-bb770acb5ca8" />
    </api>
    <api id="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />
      <apidata name="X509RawDataKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="c06890c3-9158-9777-7054-68447817a1f2" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause">
      <topicdata name="X509RawDataKeyIdentifierClause" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />
      <apidata name="X509RawDataKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey" />
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData" />
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="36e89b64-4b40-2287-ed47-2c68f1854801" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause">
      <topicdata name="X509RawDataKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />
      <apidata name="X509RawDataKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData" />
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="21fb3659-772f-80e2-49dd-20b127f89da1" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause">
      <topicdata name="X509RawDataKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />
      <apidata name="X509RawDataKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="1b47b4ea-4526-25c7-0a7f-13693855b1cf" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
      <file name="d8a6bdfc-f2df-423c-318d-a8db894ee53e" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
      <file name="6491a3b5-9a6d-893a-a663-c43e57673eee" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="certificateRawData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5d573452-cb48-e0e8-d847-71141160f1e7" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
      <file name="d41506e8-6286-8dd2-5050-db637037d9ae" />
    </api>
    <api id="P:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey">
      <topicdata group="api" />
      <apidata name="CanCreateKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanCreateKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
      <file name="3d2c8c59-7664-4f50-6ed1-17c245360a14" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey">
      <topicdata group="api" />
      <apidata name="CreateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
      <file name="e090fdb0-fc70-a0d9-81a8-0bdcae296e1d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData">
      <topicdata group="api" />
      <apidata name="GetX509RawData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
      <file name="c84a8161-d0b3-975d-fd19-3e17ba913e22" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
      <file name="8e7263e7-7f6c-1f76-070c-44e819fd7bfb" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
      <file name="b18ae66e-a529-dbfc-6ee6-e772e3af0135" />
    </api>
    <api id="T:System.IdentityModel.Tokens.X509SecurityToken">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509SecurityToken" />
      <apidata name="X509SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="db79b43e-3a38-9b0b-1166-2504cef411f7" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.X509SecurityToken">
      <topicdata name="X509SecurityToken" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.X509SecurityToken" />
      <apidata name="X509SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.X509SecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.Dispose" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Id" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="6085c942-0351-7fac-a632-43af33fb4c5d" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509SecurityToken">
      <topicdata name="X509SecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509SecurityToken" />
      <apidata name="X509SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.Dispose" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="89945356-173b-cc94-9831-68258536ebf1" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509SecurityToken">
      <topicdata name="X509SecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509SecurityToken" />
      <apidata name="X509SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="1230c42b-abfb-f4de-c67b-1af102b2d7e8" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509SecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509SecurityToken" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
      <file name="fffdfdbf-1f0d-fad0-4878-9cf2034843be" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509SecurityToken.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
      <file name="ce4bd5c2-2574-4f36-ca43-4cfe031432f2" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509SecurityToken.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="04fac65c-7429-6e0c-5bba-c4ac2d3072d1" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
      <file name="68d0cb94-4a01-ae2e-317a-05064ae9b15e" />
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate">
      <topicdata group="api" />
      <apidata name="Certificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Certificate" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
      <file name="9b8d2e02-110b-5a91-56ff-3d3cf4c5ccf2" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
      <file name="109ef25d-2f00-eaa8-58ea-39d4a11ffdde" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityToken.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
      <file name="44638535-572f-a91e-6a81-7da1f3b24788" />
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
      <file name="f8310598-b5a6-978d-e356-c9c045d5fa0f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
      <file name="3e30ec8e-3475-3971-1c67-bb966125c22c" />
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
      <file name="5d40582e-ff98-508a-fda0-b25b46ad7768" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed">
      <topicdata group="api" />
      <apidata name="ThrowIfDisposed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
      <file name="a35af48e-1da1-e5ef-d15d-7d818da114b0" />
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
      <file name="b01db9d5-d6bc-d6af-faff-4d7dabace6f6" />
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
      <file name="93b5310a-fbb7-9628-4ab3-2556f223c74c" />
    </api>
    <api id="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />
      <apidata name="X509SubjectKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="655c4bd8-3cc9-bc77-ee28-3ebdd98a9185" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause">
      <topicdata name="X509SubjectKeyIdentifierClause" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />
      <apidata name="X509SubjectKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="0eab01cc-8c4d-b238-7de0-1aac417456e0" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause">
      <topicdata name="X509SubjectKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />
      <apidata name="X509SubjectKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="ffae7e2f-e089-4eb0-0725-6828e3678af9" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause">
      <topicdata name="X509SubjectKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />
      <apidata name="X509SubjectKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="fc1b0cd2-4413-b891-7b9a-81232bb7eb52" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
      </containers>
      <file name="8e2ec315-4005-1186-e2bf-d70a1deb9a02" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="ski">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6c83e150-30c8-9496-99c4-9022713e80d3" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name="CanCreateFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
      </containers>
      <file name="69ca9edf-758c-4a3d-d535-03974418b170" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier">
      <topicdata group="api" />
      <apidata name="GetX509SubjectKeyIdentifier" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
      </containers>
      <file name="70bbdc53-dbb9-85ed-f80d-a1ac5376a94e" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
      </containers>
      <file name="e84864f4-b441-6215-8dc3-687ac27428fd" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
      </containers>
      <file name="eda41e8b-35e5-0f2a-f440-986e332eba83" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)">
      <topicdata group="api" />
      <apidata name="TryCreateFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="keyIdentifierClause" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
      </containers>
      <file name="a75d768a-2333-00d4-6528-49e097d0d632" />
    </api>
    <api id="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />
      <apidata name="X509ThumbprintKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="c605b0d8-e4cf-be12-dd29-4d73353c03ee" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause">
      <topicdata name="X509ThumbprintKeyIdentifierClause" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />
      <apidata name="X509ThumbprintKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint" />
        <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="3ad1ef18-43e5-2f5d-d31d-1834515318c0" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause">
      <topicdata name="X509ThumbprintKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />
      <apidata name="X509ThumbprintKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint" />
        <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="d91156c7-5036-9b19-bf0c-4023916896a6" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause">
      <topicdata name="X509ThumbprintKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />
      <apidata name="X509ThumbprintKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="9e6ead49-74f3-8e54-bc89-255ad72cf089" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
      </containers>
      <file name="5e93c7cb-ef90-9f92-a8d4-12006f12bcf7" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
      </containers>
      <file name="999e5ffb-9098-526c-b83f-8210e90c328f" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="thumbprint">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cda22a53-ac42-3d16-f67c-ce361feb1fa5" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
      </containers>
      <file name="b38ae48a-f1c7-3744-6f08-d3d9ae919c41" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint">
      <topicdata group="api" />
      <apidata name="GetX509Thumbprint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
      </containers>
      <file name="e1c7144c-e5d6-6b04-314a-1ec4a1ab84d7" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
      </containers>
      <file name="2d7113bd-2fbd-3e21-847b-6ebeb343d179" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
      </containers>
      <file name="22fad4fd-baa5-3919-4219-be27059019b6" />
    </api>
    <api id="T:System.IdentityModel.Tokens.X509WindowsSecurityToken">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />
      <apidata name="X509WindowsSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="5289ddb0-4911-b64c-4bb1-a774461d559a" />
    </api>
    <api id="AllMembers.T:System.IdentityModel.Tokens.X509WindowsSecurityToken">
      <topicdata name="X509WindowsSecurityToken" group="list" subgroup="members" typeTopicId="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />
      <apidata name="X509WindowsSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Id" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidTo" />
        <element api="Overload:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity)" />
          <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String)" />
          <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String,System.String)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.AuthenticationType" />
        <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.Dispose" />
        <element api="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="5c23128b-c903-804e-c10e-80210ca5c772" />
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509WindowsSecurityToken">
      <topicdata name="X509WindowsSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />
      <apidata name="X509WindowsSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed" />
        <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.Dispose" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="cd18bba6-88b0-efa9-3867-da48fba34094" />
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509WindowsSecurityToken">
      <topicdata name="X509WindowsSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />
      <apidata name="X509WindowsSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidTo" />
        <element api="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.AuthenticationType" />
        <element api="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <file name="1e58e5a0-2382-430f-5be3-c7b79fefade6" />
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity)" />
        <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
      </containers>
      <file name="509226a6-299f-c02f-95cc-3cf99c8ee9bf" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="70208f4e-627f-b522-620d-dbb89979fddc" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8bd50824-bff3-1345-7622-06263f9f468e" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
        <parameter name="authenticationType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2380b975-4087-d07a-38f4-4372b26d50ec" />
    </api>
    <api id="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.AuthenticationType">
      <topicdata group="api" />
      <apidata name="AuthenticationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthenticationType">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
      </containers>
      <file name="803e9b1b-a841-d3ef-41b9-53caa57b6f8d" />
    </api>
    <api id="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.X509SecurityToken.Dispose">
          <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
      </containers>
      <file name="2d014d56-4b30-ba39-f25b-0437e54d0343" />
    </api>
    <api id="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity">
      <topicdata group="api" />
      <apidata name="WindowsIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WindowsIdentity" />
      <returns>
        <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
      </containers>
      <file name="59da684d-7a7f-f2d5-9a26-2bbbb448d70c" />
    </api>
  </apis>
</reflection>