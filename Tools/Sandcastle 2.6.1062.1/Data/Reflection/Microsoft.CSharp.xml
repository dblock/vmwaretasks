<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.30319.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.30319.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.AssemblyTargetedPatchBandAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.21-0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="SkipVerification">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Microsoft.CSharp">
      <topicdata group="api" />
      <apidata name="Microsoft.CSharp" group="namespace" />
      <elements>
        <element api="T:Microsoft.CSharp.CSharpCodeProvider" />
      </elements>
      <file name="c2dd9bb1-2485-454a-87ec-c7182c79dd77" />
    </api>
    <api id="T:Microsoft.CSharp.CSharpCodeProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.CSharp.CSharpCodeProvider" />
      <apidata name="CSharpCodeProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.PermissionSetAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>FullTrust</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.PermissionSetAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>FullTrust</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="466ab122-927d-b75a-45a2-dee1c02d98c0" />
    </api>
    <api id="AllMembers.T:Microsoft.CSharp.CSharpCodeProvider">
      <topicdata name="CSharpCodeProvider" group="list" subgroup="members" typeTopicId="T:Microsoft.CSharp.CSharpCodeProvider" />
      <apidata name="CSharpCodeProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:Microsoft.CSharp.CSharpCodeProvider.#ctor">
          <element api="M:Microsoft.CSharp.CSharpCodeProvider.#ctor" />
          <element api="M:Microsoft.CSharp.CSharpCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})" />
        </element>
        <element api="M:Microsoft.CSharp.CSharpCodeProvider.CreateCompiler" />
        <element api="Overload:Microsoft.CSharp.CSharpCodeProvider.CreateGenerator">
          <element api="M:Microsoft.CSharp.CSharpCodeProvider.CreateGenerator" />
          <element api="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)" />
          <element api="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)" />
        </element>
        <element api="P:Microsoft.CSharp.CSharpCodeProvider.FileExtension" />
        <element api="M:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
        <element api="M:Microsoft.CSharp.CSharpCodeProvider.GetConverter(System.Type)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:Microsoft.CSharp.CSharpCodeProvider.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" />
        <element api="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="Overload:Microsoft.CSharp.CSharpCodeProvider.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="M:System.ComponentModel.Component.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
      </containers>
      <file name="8154b071-f918-9924-c30b-5e291257a8da" />
    </api>
    <api id="Methods.T:Microsoft.CSharp.CSharpCodeProvider">
      <topicdata name="CSharpCodeProvider" group="list" subgroup="Methods" typeTopicId="T:Microsoft.CSharp.CSharpCodeProvider" />
      <apidata name="CSharpCodeProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:Microsoft.CSharp.CSharpCodeProvider.CreateCompiler" />
        <element api="Overload:Microsoft.CSharp.CSharpCodeProvider.CreateGenerator">
          <element api="M:Microsoft.CSharp.CSharpCodeProvider.CreateGenerator" />
          <element api="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)" />
          <element api="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)" />
        </element>
        <element api="M:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
        <element api="M:Microsoft.CSharp.CSharpCodeProvider.GetConverter(System.Type)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:Microsoft.CSharp.CSharpCodeProvider.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)" />
        <element api="Overload:Microsoft.CSharp.CSharpCodeProvider.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
      </containers>
      <file name="28171e04-eacf-6cfa-e676-1fdd249f9069" />
    </api>
    <api id="Properties.T:Microsoft.CSharp.CSharpCodeProvider">
      <topicdata name="CSharpCodeProvider" group="list" subgroup="Properties" typeTopicId="T:Microsoft.CSharp.CSharpCodeProvider" />
      <apidata name="CSharpCodeProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:Microsoft.CSharp.CSharpCodeProvider.FileExtension" />
        <element api="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
      </containers>
      <file name="5b0be2d5-e8d8-4142-84e2-80b5b5a26eb4" />
    </api>
    <api id="Events.T:Microsoft.CSharp.CSharpCodeProvider">
      <topicdata name="CSharpCodeProvider" group="list" subgroup="Events" typeTopicId="T:Microsoft.CSharp.CSharpCodeProvider" />
      <apidata name="CSharpCodeProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
      </containers>
      <file name="a20f298b-8b1d-774a-fc77-47f7f5d076c7" />
    </api>
    <api id="Overload:Microsoft.CSharp.CSharpCodeProvider.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.CSharp.CSharpCodeProvider" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.CSharp.CSharpCodeProvider.#ctor" />
        <element api="M:Microsoft.CSharp.CSharpCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CSharpCodeProvider" ref="true" />
      </containers>
      <file name="c15260f4-14f1-b8ca-a875-beae93de6329" />
    </api>
    <api id="Overload:Microsoft.CSharp.CSharpCodeProvider.CreateGenerator">
      <topicdata name="CreateGenerator" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.CSharp.CSharpCodeProvider" />
      <apidata name="CreateGenerator" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.CSharp.CSharpCodeProvider.CreateGenerator" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)" />
        <element api="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CSharpCodeProvider" ref="true" />
      </containers>
      <file name="05e08067-8d58-a8b7-3a01-442f20e78712" />
    </api>
    <api id="Overload:Microsoft.CSharp.CSharpCodeProvider.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.CSharp.CSharpCodeProvider" allInherited="true" parentTopicId="Overload:System.MarshalByRefObject.MemberwiseClone" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CSharpCodeProvider" />
      </containers>
      <file name="3490af9a-c950-544a-aaa0-d152ba4e7860" />
    </api>
    <api id="Overload:Microsoft.CSharp.CSharpCodeProvider.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.CSharp.CSharpCodeProvider" allInherited="true" parentTopicId="Overload:System.ComponentModel.Component.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CSharpCodeProvider" />
      </containers>
      <file name="33f9c8fd-802d-1fe6-2c70-1ba823077cc8" />
    </api>
    <api id="M:Microsoft.CSharp.CSharpCodeProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.CSharp.CSharpCodeProvider.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CSharpCodeProvider" ref="true" />
      </containers>
      <file name="546b037d-e6bc-ab60-fdf1-57a414105cd3" />
    </api>
    <api id="M:Microsoft.CSharp.CSharpCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.CSharp.CSharpCodeProvider.#ctor" />
      <parameters>
        <parameter name="providerOptions">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CSharpCodeProvider" ref="true" />
      </containers>
      <file name="9e801155-27b9-a4f5-2d73-506823bc9d8f" />
    </api>
    <api id="M:Microsoft.CSharp.CSharpCodeProvider.CreateCompiler">
      <topicdata group="api" />
      <apidata name="CreateCompiler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler">
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.CodeDom.Compiler.ICodeCompiler" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CSharpCodeProvider" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Callers should not use the ICodeCompiler interface and should instead use the methods directly on the CodeDomProvider class.</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ffa7d01c-2ecc-982b-c2d5-76c2d792b712" />
    </api>
    <api id="M:Microsoft.CSharp.CSharpCodeProvider.CreateGenerator">
      <topicdata group="api" />
      <apidata name="CreateGenerator" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.CSharp.CSharpCodeProvider.CreateGenerator" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator">
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.CodeDom.Compiler.ICodeGenerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CSharpCodeProvider" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Callers should not use the ICodeGenerator interface and should instead use the methods directly on the CodeDomProvider class.</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5488577c-2930-e8eb-8ac2-5b064f16b042" />
    </api>
    <api id="P:Microsoft.CSharp.CSharpCodeProvider.FileExtension">
      <topicdata group="api" />
      <apidata name="FileExtension" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_FileExtension" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CSharpCodeProvider" ref="true" />
      </containers>
      <file name="57099c6f-5524-00b0-e268-04f5414f9272" />
    </api>
    <api id="M:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <topicdata group="api" />
      <apidata name="GenerateCodeFromMember" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="member">
          <type api="T:System.CodeDom.CodeTypeMember" ref="true" />
        </parameter>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.CodeDom.Compiler.CodeGeneratorOptions" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CSharpCodeProvider" ref="true" />
      </containers>
      <file name="0b60ad1a-7d48-0927-3af9-1b2383acab6e" />
    </api>
    <api id="M:Microsoft.CSharp.CSharpCodeProvider.GetConverter(System.Type)">
      <topicdata group="api" />
      <apidata name="GetConverter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)">
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CSharpCodeProvider" ref="true" />
      </containers>
      <file name="f50f78f4-3e9a-ed89-c835-1c6ddd87bc66" />
    </api>
  </apis>
</reflection>