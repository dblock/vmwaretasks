<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ComponentModel.Composition">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.30319.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.30319.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.AssemblyTargetedPatchBandAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.21-0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ComponentModel.Composition">
      <topicdata group="api" />
      <apidata name="System.ComponentModel.Composition" group="namespace" />
      <elements>
        <element api="T:System.ComponentModel.Composition.AttributedModelServices" />
        <element api="T:System.ComponentModel.Composition.CompositionContractMismatchException" />
        <element api="T:System.ComponentModel.Composition.CompositionError" />
        <element api="T:System.ComponentModel.Composition.ExportAttribute" />
        <element api="T:System.ComponentModel.Composition.InheritedExportAttribute" />
        <element api="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" />
        <element api="T:System.ComponentModel.Composition.ImportManyAttribute" />
        <element api="T:System.ComponentModel.Composition.ICompositionService" />
        <element api="T:System.ComponentModel.Composition.ImportingConstructorAttribute" />
        <element api="T:System.ComponentModel.Composition.IPartImportsSatisfiedNotification" />
        <element api="T:System.ComponentModel.Composition.PartCreationPolicyAttribute" />
        <element api="T:System.ComponentModel.Composition.PartMetadataAttribute" />
        <element api="T:System.ComponentModel.Composition.PartNotDiscoverableAttribute" />
        <element api="T:System.ComponentModel.Composition.CompositionException" />
        <element api="T:System.ComponentModel.Composition.ChangeRejectedException" />
        <element api="T:System.ComponentModel.Composition.CreationPolicy" />
        <element api="T:System.ComponentModel.Composition.ExportMetadataAttribute" />
        <element api="T:System.ComponentModel.Composition.ImportAttribute" />
        <element api="T:System.ComponentModel.Composition.MetadataAttributeAttribute" />
      </elements>
      <file name="b3ac2ee0-4dcf-f488-9d60-7de0ea718dd1" />
    </api>
    <api id="T:System.ComponentModel.Composition.AttributedModelServices">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.AttributedModelServices" />
      <apidata name="AttributedModelServices" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="47760a01-9b81-ae88-aabd-a938bdbeb169" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.AttributedModelServices">
      <topicdata name="AttributedModelServices" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.AttributedModelServices" />
      <apidata name="AttributedModelServices" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue">
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" />
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" />
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)" />
        <element api="Overload:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue">
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" />
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" />
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)" />
        <element api="Overload:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition">
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <element api="Overload:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity">
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)" />
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" />
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="7c33b064-9f9f-7197-aca2-9dcb28d35461" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.AttributedModelServices">
      <topicdata name="AttributedModelServices" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.AttributedModelServices" />
      <apidata name="AttributedModelServices" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue">
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" />
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" />
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)" />
        <element api="Overload:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue">
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" />
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" />
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)" />
        <element api="Overload:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition">
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <element api="Overload:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity">
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)" />
          <element api="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" />
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="1f30b717-1a57-8f99-38c9-1db0de544ccf" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue">
      <topicdata name="AddExportedValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.AttributedModelServices" />
      <apidata name="AddExportedValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <file name="2224bd31-49e1-d1c6-bb74-d31664d0a979" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue">
      <topicdata name="ComposeExportedValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.AttributedModelServices" />
      <apidata name="ComposeExportedValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <file name="423d1bfb-7e36-822c-e569-d85505db0824" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition">
      <topicdata name="CreatePartDefinition" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.AttributedModelServices" />
      <apidata name="CreatePartDefinition" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <file name="5b03ea11-4f85-a35f-5ab6-e90e76dd79fc" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity">
      <topicdata name="GetTypeIdentity" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.AttributedModelServices" />
      <apidata name="GetTypeIdentity" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <file name="2c1483bd-61c6-1693-f66d-f11edc1d2560" />
    </api>
    <api id="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)">
      <topicdata group="api" />
      <apidata name="AddExportedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="batch">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
        </parameter>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exportedValue">
          <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="21b87057-8280-fed5-5ca1-a40e6d0682cb" />
    </api>
    <api id="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)">
      <topicdata group="api" />
      <apidata name="AddExportedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="batch">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
        </parameter>
        <parameter name="exportedValue">
          <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="3fed8158-3b9d-8be7-e316-fa21a220f044" />
    </api>
    <api id="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)">
      <topicdata group="api" />
      <apidata name="AddPart" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="batch">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
        </parameter>
        <parameter name="attributedPart">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2d19ef3b-d243-985d-a5e6-11ceb87085c2" />
    </api>
    <api id="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)">
      <topicdata group="api" />
      <apidata name="ComposeExportedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="container">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
        </parameter>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exportedValue">
          <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="751adb4b-651d-b82f-b372-46a0df40e047" />
    </api>
    <api id="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)">
      <topicdata group="api" />
      <apidata name="ComposeExportedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="container">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
        </parameter>
        <parameter name="exportedValue">
          <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c13f9f8c-f7f0-124e-eef1-b68c102d9324" />
    </api>
    <api id="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])">
      <topicdata group="api" />
      <apidata name="ComposeParts" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="container">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
        </parameter>
        <parameter name="attributedParts" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9d2cd97b-2a30-124f-fd6d-ed1ed46a4cd6" />
    </api>
    <api id="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)">
      <topicdata group="api" />
      <apidata name="CreatePart" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attributedPart">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <file name="2b83bd61-aec1-5b34-3600-05f79f09908a" />
    </api>
    <api id="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name="CreatePartDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <file name="18acfe9d-c99d-cc9e-c45a-5ea2092b6d0a" />
    </api>
    <api id="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreatePartDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
        <parameter name="ensureIsDiscoverable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <file name="b3455b8d-49be-f4f2-d484-a463d69c1292" />
    </api>
    <api id="M:System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)">
      <topicdata group="api" />
      <apidata name="GetContractName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8cfdc313-0ded-77c9-f31e-0188c344cff4" />
    </api>
    <api id="M:System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <topicdata group="api" />
      <apidata name="GetMetadataView" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TMetadataView" />
      </templates>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TMetadataView" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <file name="964224a0-86f0-0436-c3a3-b057c09c9b1a" />
    </api>
    <api id="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="GetTypeIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <file name="2c32c951-dfea-f2a4-f30f-7d2b3841d56c" />
    </api>
    <api id="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)">
      <topicdata group="api" />
      <apidata name="GetTypeIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <file name="477d2602-aaa7-417b-2619-ed2efa08a7d9" />
    </api>
    <api id="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)">
      <topicdata group="api" />
      <apidata name="SatisfyImportsOnce" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="compositionService">
          <type api="T:System.ComponentModel.Composition.ICompositionService" ref="true" />
        </parameter>
        <parameter name="attributedPart">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="892e3e83-b766-faa1-9e0c-fecec3d0e3ef" />
    </api>
    <api id="T:System.ComponentModel.Composition.ChangeRejectedException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ChangeRejectedException" />
      <apidata name="ChangeRejectedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.CompositionException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="1a51b567-4086-ae22-f0c5-8f002db81f3f" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.ChangeRejectedException">
      <topicdata name="ChangeRejectedException" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.ChangeRejectedException" />
      <apidata name="ChangeRejectedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ComponentModel.Composition.ChangeRejectedException.#ctor">
          <element api="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor" />
          <element api="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.CompositionError})" />
          <element api="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.ComponentModel.Composition.ChangeRejectedException.Message" />
        <element api="P:System.ComponentModel.Composition.CompositionException.Errors" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="d8a013c6-390c-28ff-dc18-06d9aa8ca593" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.ChangeRejectedException">
      <topicdata name="ChangeRejectedException" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.ChangeRejectedException" />
      <apidata name="ChangeRejectedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="d1326b02-ab7d-ffd6-a316-693caa896e3e" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.ChangeRejectedException">
      <topicdata name="ChangeRejectedException" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.ChangeRejectedException" />
      <apidata name="ChangeRejectedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.ComponentModel.Composition.ChangeRejectedException.Message" />
        <element api="P:System.ComponentModel.Composition.CompositionException.Errors" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="07565e48-f6cc-c617-145e-856e9b8d59dc" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.ChangeRejectedException">
      <topicdata name="ChangeRejectedException" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.ChangeRejectedException" />
      <apidata name="ChangeRejectedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="0a8a8a2e-952e-2515-475e-62d74000f9a0" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.ChangeRejectedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ChangeRejectedException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor" />
        <element api="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.CompositionError})" />
        <element api="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ChangeRejectedException" ref="true" />
      </containers>
      <file name="97d468a7-7775-b3da-e5e5-71070a583c05" />
    </api>
    <api id="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ChangeRejectedException.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ChangeRejectedException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ce012f84-27ee-5d0b-14a5-79a1fa415581" />
    </api>
    <api id="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.CompositionError})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ChangeRejectedException.#ctor" />
      <parameters>
        <parameter name="errors">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.CompositionError" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ChangeRejectedException" ref="true" />
      </containers>
      <file name="b6676576-429a-d4c2-e40d-47c771ec87e8" />
    </api>
    <api id="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ChangeRejectedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ChangeRejectedException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="578c833e-be29-b19c-5cea-841830f8c2a9" />
    </api>
    <api id="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ChangeRejectedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ChangeRejectedException" ref="true" />
      </containers>
      <file name="c545f0dd-45b0-5cc4-28f0-321d146a22e5" />
    </api>
    <api id="P:System.ComponentModel.Composition.ChangeRejectedException.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.Composition.CompositionException.Message">
          <type api="T:System.ComponentModel.Composition.CompositionException" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.InteropServices._Exception.Message">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ChangeRejectedException" ref="true" />
      </containers>
      <file name="9d022f4c-74f0-802a-4a37-d7ac6be240bc" />
    </api>
    <api id="T:System.ComponentModel.Composition.CompositionContractMismatchException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.CompositionContractMismatchException" />
      <apidata name="CompositionContractMismatchException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="dbc67fe2-95f6-9338-0c08-f4538a9ffdc0" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.CompositionContractMismatchException">
      <topicdata name="CompositionContractMismatchException" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.CompositionContractMismatchException" />
      <apidata name="CompositionContractMismatchException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor">
          <element api="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor" />
          <element api="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="edebe523-8676-766a-08fa-6126fcabcba6" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.CompositionContractMismatchException">
      <topicdata name="CompositionContractMismatchException" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.CompositionContractMismatchException" />
      <apidata name="CompositionContractMismatchException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="9b289271-7dab-2713-71e8-0f37f9664f04" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.CompositionContractMismatchException">
      <topicdata name="CompositionContractMismatchException" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.CompositionContractMismatchException" />
      <apidata name="CompositionContractMismatchException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="0ba9ea19-ba45-0f64-f635-a49f13dcbc03" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.CompositionContractMismatchException">
      <topicdata name="CompositionContractMismatchException" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.CompositionContractMismatchException" />
      <apidata name="CompositionContractMismatchException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="207cbbe1-9e19-89a4-cbb0-a6d30602a37a" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.CompositionContractMismatchException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor" />
        <element api="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionContractMismatchException" ref="true" />
      </containers>
      <file name="cde35434-0b85-5b61-8608-94792506543a" />
    </api>
    <api id="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionContractMismatchException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ec07cf9e-ba54-2e61-ca65-704b06a4a0aa" />
    </api>
    <api id="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionContractMismatchException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a4bdb329-70ce-8aa4-0e97-78489baf5d8b" />
    </api>
    <api id="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionContractMismatchException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b8eaa078-f075-b260-383b-65937e029d7d" />
    </api>
    <api id="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionContractMismatchException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3dc8c87f-edb3-b455-ed73-b9acfc58ac34" />
    </api>
    <api id="T:System.ComponentModel.Composition.CompositionError">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.CompositionError" />
      <apidata name="CompositionError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="92306f72-b59b-f03f-c841-66b0ba6334f9" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.CompositionError">
      <topicdata name="CompositionError" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.CompositionError" />
      <apidata name="CompositionError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ComponentModel.Composition.CompositionError.#ctor">
          <element api="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String,System.Exception)" />
          <element api="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Exception)" />
        </element>
        <element api="P:System.ComponentModel.Composition.CompositionError.Description" />
        <element api="P:System.ComponentModel.Composition.CompositionError.Element" />
        <element api="P:System.ComponentModel.Composition.CompositionError.Exception" />
        <element api="M:System.ComponentModel.Composition.CompositionError.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="a1389e1b-d1ad-9fd2-788d-f819a4dd86b1" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.CompositionError">
      <topicdata name="CompositionError" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.CompositionError" />
      <apidata name="CompositionError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ComponentModel.Composition.CompositionError.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="0df9399e-33ea-daac-785f-c9c4e1c8aa45" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.CompositionError">
      <topicdata name="CompositionError" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.CompositionError" />
      <apidata name="CompositionError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.Composition.CompositionError.Description" />
        <element api="P:System.ComponentModel.Composition.CompositionError.Element" />
        <element api="P:System.ComponentModel.Composition.CompositionError.Exception" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="d50e813e-cab5-e0aa-98d3-069da9617fd6" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.CompositionError.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.CompositionError" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String,System.Exception)" />
        <element api="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionError" ref="true" />
      </containers>
      <file name="a1460207-a137-bf37-a106-dc7fe9513178" />
    </api>
    <api id="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.CompositionError.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionError" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ee11cd72-cff1-1b18-0587-826fa1b6c2e2" />
    </api>
    <api id="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.CompositionError.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="element">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionError" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="133d6500-a43a-a8d7-dbf1-aa93e9722d58" />
    </api>
    <api id="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.CompositionError.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="element">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionError" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cd8de6e1-5f3c-ba61-0bcf-66e45e883203" />
    </api>
    <api id="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.CompositionError.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionError" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8e18c531-ca29-798b-ea3c-440e06083499" />
    </api>
    <api id="P:System.ComponentModel.Composition.CompositionError.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionError" ref="true" />
      </containers>
      <file name="1abd4400-7397-f7e2-28e2-27d813fe069b" />
    </api>
    <api id="P:System.ComponentModel.Composition.CompositionError.Element">
      <topicdata group="api" />
      <apidata name="Element" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Element">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionError" ref="true" />
      </containers>
      <file name="3fdf63bd-caae-7167-09d4-0983adf4e08a" />
    </api>
    <api id="P:System.ComponentModel.Composition.CompositionError.Exception">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Exception">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionError" ref="true" />
      </containers>
      <file name="df62b43b-f96c-14e9-8e76-43077d255452" />
    </api>
    <api id="M:System.ComponentModel.Composition.CompositionError.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionError" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3518f806-6cb9-965e-0981-20b784f455ae" />
    </api>
    <api id="T:System.ComponentModel.Composition.CompositionException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.CompositionException" />
      <apidata name="CompositionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.Composition.ChangeRejectedException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="ac34ac91-e58a-9c1e-9787-16a8eacdf8eb" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.CompositionException">
      <topicdata name="CompositionException" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.CompositionException" />
      <apidata name="CompositionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ComponentModel.Composition.CompositionException.#ctor">
          <element api="M:System.ComponentModel.Composition.CompositionException.#ctor" />
          <element api="M:System.ComponentModel.Composition.CompositionException.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.CompositionError})" />
          <element api="M:System.ComponentModel.Composition.CompositionException.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Composition.CompositionException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.ComponentModel.Composition.CompositionException.Errors" />
        <element api="P:System.ComponentModel.Composition.CompositionException.Message" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="931f27f5-2003-decf-2888-e99133e1c213" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.CompositionException">
      <topicdata name="CompositionException" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.CompositionException" />
      <apidata name="CompositionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="f425c588-7541-9263-1294-fb12300d2a9f" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.CompositionException">
      <topicdata name="CompositionException" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.CompositionException" />
      <apidata name="CompositionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.ComponentModel.Composition.CompositionException.Errors" />
        <element api="P:System.ComponentModel.Composition.CompositionException.Message" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="04452820-6009-7c00-d362-d9ed68c9836d" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.CompositionException">
      <topicdata name="CompositionException" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.CompositionException" />
      <apidata name="CompositionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="2032102d-b57b-d0dd-aeab-aa9fe6d63cab" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.CompositionException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.CompositionException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.CompositionException.#ctor" />
        <element api="M:System.ComponentModel.Composition.CompositionException.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.CompositionError})" />
        <element api="M:System.ComponentModel.Composition.CompositionException.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Composition.CompositionException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionException" ref="true" />
      </containers>
      <file name="230b4cf3-1757-b7f0-5c4c-e0d4fe0e9673" />
    </api>
    <api id="M:System.ComponentModel.Composition.CompositionException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.CompositionException.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="393b88ec-e2a3-2230-a2d1-cae97fbc06f7" />
    </api>
    <api id="M:System.ComponentModel.Composition.CompositionException.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.CompositionError})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.CompositionException.#ctor" />
      <parameters>
        <parameter name="errors">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.CompositionError" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f09a218c-3ed4-3e00-5009-bc98ec998c14" />
    </api>
    <api id="M:System.ComponentModel.Composition.CompositionException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.CompositionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="de7bf2a1-84e0-f825-f4a2-133cdcd1e604" />
    </api>
    <api id="M:System.ComponentModel.Composition.CompositionException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.CompositionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f2f73bfb-81f5-dfc6-fad7-1e8419b6ebb3" />
    </api>
    <api id="P:System.ComponentModel.Composition.CompositionException.Errors">
      <topicdata group="api" />
      <apidata name="Errors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Errors">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.CompositionError" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionException" ref="true" />
      </containers>
      <file name="a87496b5-5859-85d3-ba77-612c54020be4" />
    </api>
    <api id="P:System.ComponentModel.Composition.CompositionException.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.Message">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.InteropServices._Exception.Message">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CompositionException" ref="true" />
      </containers>
      <file name="423537ce-b26e-a311-5efa-1dea6761e7a0" />
    </api>
    <api id="T:System.ComponentModel.Composition.CreationPolicy">
      <topicdata group="api" />
      <apidata name="CreationPolicy" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.ComponentModel.Composition.CreationPolicy.Any" />
        <element api="F:System.ComponentModel.Composition.CreationPolicy.Shared" />
        <element api="F:System.ComponentModel.Composition.CreationPolicy.NonShared" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="76660fe9-2297-9555-994f-674737e63ddd" />
    </api>
    <api id="F:System.ComponentModel.Composition.CreationPolicy.Any">
      <topicdata group="api" notopic="" />
      <apidata name="Any" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
      </containers>
      <file name="02730110-cf00-d199-d354-b9f10a4dfb85" />
    </api>
    <api id="F:System.ComponentModel.Composition.CreationPolicy.NonShared">
      <topicdata group="api" notopic="" />
      <apidata name="NonShared" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
      </containers>
      <file name="9e77f7f5-0963-9792-75d2-bbfb6aa0c2f7" />
    </api>
    <api id="F:System.ComponentModel.Composition.CreationPolicy.Shared">
      <topicdata group="api" notopic="" />
      <apidata name="Shared" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
      </containers>
      <file name="409472dd-48ec-822d-ae37-58bc53d434a1" />
    </api>
    <api id="T:System.ComponentModel.Composition.ExportAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ExportAttribute" />
      <apidata name="ExportAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.Composition.InheritedExportAttribute" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Method" />
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="4136c2a7-634f-e709-c2f7-c89b6573d1e3" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.ExportAttribute">
      <topicdata name="ExportAttribute" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.ExportAttribute" />
      <apidata name="ExportAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.ExportAttribute.#ctor">
          <element api="M:System.ComponentModel.Composition.ExportAttribute.#ctor" />
          <element api="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)" />
          <element api="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)" />
        </element>
        <element api="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
        <element api="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="ab740786-fb48-e3b8-6fe1-12d98a839833" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.ExportAttribute">
      <topicdata name="ExportAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.ExportAttribute" />
      <apidata name="ExportAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="3c4c6222-0edf-e423-bc76-916d11363647" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.ExportAttribute">
      <topicdata name="ExportAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.ExportAttribute" />
      <apidata name="ExportAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
        <element api="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="2f05b8f8-068d-27e3-2fae-a045d1db2d5d" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.ExportAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ExportAttribute" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.ExportAttribute.#ctor" />
        <element api="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)" />
        <element api="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ExportAttribute" ref="true" />
      </containers>
      <file name="ba6cd506-ca56-610e-98f9-c9c531669dc4" />
    </api>
    <api id="M:System.ComponentModel.Composition.ExportAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ExportAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="50777b9b-c546-deae-4574-0059017ee74e" />
    </api>
    <api id="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ExportAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="707b7afc-f88f-a3dc-313c-d2e355c53ff5" />
    </api>
    <api id="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ExportAttribute" ref="true" />
      </containers>
      <file name="6515ca43-2bcb-0d26-9eba-4041ff56ec33" />
    </api>
    <api id="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <parameters>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ExportAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6b193b63-eeb5-6886-e91b-ef3ff92bc59c" />
    </api>
    <api id="P:System.ComponentModel.Composition.ExportAttribute.ContractName">
      <topicdata group="api" />
      <apidata name="ContractName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ContractName">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ContractName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ExportAttribute" ref="true" />
      </containers>
      <file name="82285467-3657-1bb2-7d83-5734e150c180" />
    </api>
    <api id="P:System.ComponentModel.Composition.ExportAttribute.ContractType">
      <topicdata group="api" />
      <apidata name="ContractType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ContractType">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ContractType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ExportAttribute" ref="true" />
      </containers>
      <file name="7250b074-8000-7eb8-5ceb-ff4469d18d3a" />
    </api>
    <api id="T:System.ComponentModel.Composition.ExportMetadataAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ExportMetadataAttribute" />
      <apidata name="ExportMetadataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Method" />
              <field name="Property" />
              <field name="Field" />
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="f9a352e4-8758-fe11-151f-8161ba90c0f7" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.ExportMetadataAttribute">
      <topicdata name="ExportMetadataAttribute" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.ExportMetadataAttribute" />
      <apidata name="ExportMetadataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.ExportMetadataAttribute.#ctor(System.String,System.Object)" />
        <element api="P:System.ComponentModel.Composition.ExportMetadataAttribute.IsMultiple" />
        <element api="P:System.ComponentModel.Composition.ExportMetadataAttribute.Name" />
        <element api="P:System.ComponentModel.Composition.ExportMetadataAttribute.Value" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="23ea1c57-5dd1-f9aa-0922-f43dc526d790" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.ExportMetadataAttribute">
      <topicdata name="ExportMetadataAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.ExportMetadataAttribute" />
      <apidata name="ExportMetadataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="6675ea10-c02c-3559-1b3c-fa01b5dba6e8" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.ExportMetadataAttribute">
      <topicdata name="ExportMetadataAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.ExportMetadataAttribute" />
      <apidata name="ExportMetadataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.Composition.ExportMetadataAttribute.IsMultiple" />
        <element api="P:System.ComponentModel.Composition.ExportMetadataAttribute.Name" />
        <element api="P:System.ComponentModel.Composition.ExportMetadataAttribute.Value" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="f246beb2-2b16-cfe9-531b-8e919acf4d81" />
    </api>
    <api id="M:System.ComponentModel.Composition.ExportMetadataAttribute.#ctor(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ExportMetadataAttribute" ref="true" />
      </containers>
      <file name="d7fa7959-60ac-5bf7-ac5b-5d950836622b" />
    </api>
    <api id="P:System.ComponentModel.Composition.ExportMetadataAttribute.IsMultiple">
      <topicdata group="api" />
      <apidata name="IsMultiple" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsMultiple">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IsMultiple">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ExportMetadataAttribute" ref="true" />
      </containers>
      <file name="a7be1b56-7bcf-9cec-93b3-d2765fdd4462" />
    </api>
    <api id="P:System.ComponentModel.Composition.ExportMetadataAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Name">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ExportMetadataAttribute" ref="true" />
      </containers>
      <file name="74f6efaa-7f7b-ef82-162d-cd607d73edb2" />
    </api>
    <api id="P:System.ComponentModel.Composition.ExportMetadataAttribute.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Value">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ExportMetadataAttribute" ref="true" />
      </containers>
      <file name="768c6a31-b956-6c94-dd03-c47bfe8c5e4f" />
    </api>
    <api id="T:System.ComponentModel.Composition.ICompositionService">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ICompositionService" />
      <apidata name="ICompositionService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="2abc950a-95a1-2afb-29c3-6e9e34c5654a" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.ICompositionService">
      <topicdata name="ICompositionService" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.ICompositionService" />
      <apidata name="ICompositionService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" source="extension">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="7f84b751-8180-b04e-df9a-04bb0bee5757" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.ICompositionService">
      <topicdata name="ICompositionService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.ICompositionService" />
      <apidata name="ICompositionService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" source="extension">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="7dbc3093-b232-8efd-486a-8de33ed21b71" />
    </api>
    <api id="M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <topicdata group="api" />
      <apidata name="SatisfyImportsOnce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ICompositionService" ref="true" />
      </containers>
      <file name="757da7d0-beda-7f7d-80d3-68b753a25e4e" />
    </api>
    <api id="T:System.ComponentModel.Composition.ImportAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ImportAttribute" />
      <apidata name="ImportAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="eb3791c3-2244-2a8e-4a04-1339c1067c31" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.ImportAttribute">
      <topicdata name="ImportAttribute" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.ImportAttribute" />
      <apidata name="ImportAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.ImportAttribute.#ctor">
          <element api="M:System.ComponentModel.Composition.ImportAttribute.#ctor" />
          <element api="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)" />
          <element api="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)" />
        </element>
        <element api="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault" />
        <element api="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition" />
        <element api="P:System.ComponentModel.Composition.ImportAttribute.ContractName" />
        <element api="P:System.ComponentModel.Composition.ImportAttribute.ContractType" />
        <element api="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="bff990b0-8bb9-01f0-a53e-ce8e57ba4d1f" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.ImportAttribute">
      <topicdata name="ImportAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.ImportAttribute" />
      <apidata name="ImportAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="030d888c-b1d9-fdad-960e-25be3b86a0b4" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.ImportAttribute">
      <topicdata name="ImportAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.ImportAttribute" />
      <apidata name="ImportAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault" />
        <element api="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition" />
        <element api="P:System.ComponentModel.Composition.ImportAttribute.ContractName" />
        <element api="P:System.ComponentModel.Composition.ImportAttribute.ContractType" />
        <element api="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="952ec169-21ab-4aa1-2801-25245823afb1" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.ImportAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ImportAttribute" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.ImportAttribute.#ctor" />
        <element api="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)" />
        <element api="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportAttribute" ref="true" />
      </containers>
      <file name="ff520f52-a4c5-7534-df20-7a03a855f014" />
    </api>
    <api id="M:System.ComponentModel.Composition.ImportAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ImportAttribute.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="11adfb05-0ad3-abf6-ab36-3fe06d15a7cd" />
    </api>
    <api id="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ImportAttribute.#ctor" />
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4fef5305-5bfd-61d9-35a3-487563db4f33" />
    </api>
    <api id="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ImportAttribute.#ctor" />
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportAttribute" ref="true" />
      </containers>
      <file name="dbbc75ed-2d84-f55a-e4c6-a73cfacd99e9" />
    </api>
    <api id="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ImportAttribute.#ctor" />
      <parameters>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2611566a-d6e8-1ce7-a8e5-cd1e7bf8f124" />
    </api>
    <api id="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault">
      <topicdata group="api" />
      <apidata name="AllowDefault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowDefault">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_AllowDefault">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportAttribute" ref="true" />
      </containers>
      <file name="186d083a-9e68-a4e7-e27c-d8d0ddbfe2c0" />
    </api>
    <api id="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition">
      <topicdata group="api" />
      <apidata name="AllowRecomposition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowRecomposition">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_AllowRecomposition">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportAttribute" ref="true" />
      </containers>
      <file name="434c5bc8-7ea7-3987-6442-864cac187718" />
    </api>
    <api id="P:System.ComponentModel.Composition.ImportAttribute.ContractName">
      <topicdata group="api" />
      <apidata name="ContractName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ContractName">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ContractName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportAttribute" ref="true" />
      </containers>
      <file name="d71af73d-25e2-fbb4-afb5-b2f26110245b" />
    </api>
    <api id="P:System.ComponentModel.Composition.ImportAttribute.ContractType">
      <topicdata group="api" />
      <apidata name="ContractType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ContractType">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ContractType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportAttribute" ref="true" />
      </containers>
      <file name="4e17d2d4-ce70-7edb-54ee-19e9d2a07d85" />
    </api>
    <api id="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy">
      <topicdata group="api" />
      <apidata name="RequiredCreationPolicy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RequiredCreationPolicy">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_RequiredCreationPolicy">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportAttribute" ref="true" />
      </containers>
      <file name="5fbd4fdc-ab3a-15b8-8798-9bfce5bccc6b" />
    </api>
    <api id="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ImportCardinalityMismatchException" />
      <apidata name="ImportCardinalityMismatchException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="417e7193-bea4-5986-daa0-09044ab3cd8d" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
      <topicdata name="ImportCardinalityMismatchException" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" />
      <apidata name="ImportCardinalityMismatchException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor">
          <element api="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor" />
          <element api="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="82522f08-558f-afc6-e304-25ee282c44ba" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
      <topicdata name="ImportCardinalityMismatchException" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" />
      <apidata name="ImportCardinalityMismatchException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="ed2761bc-0843-c064-ffb6-de9ce9b927fb" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
      <topicdata name="ImportCardinalityMismatchException" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" />
      <apidata name="ImportCardinalityMismatchException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="54151550-4a45-1d81-afa9-99adade6fe95" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
      <topicdata name="ImportCardinalityMismatchException" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" />
      <apidata name="ImportCardinalityMismatchException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="68d31ca4-4bc9-8a0f-680a-f714706c6db4" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ImportCardinalityMismatchException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor" />
        <element api="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" ref="true" />
      </containers>
      <file name="e9a79fa3-91a1-26d4-4943-6ee0f3bf254e" />
    </api>
    <api id="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="89b56b99-13bb-ca22-c39a-91232517acbe" />
    </api>
    <api id="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3022a691-910a-d6ff-8882-6ddf5d092575" />
    </api>
    <api id="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="500a65f2-9617-e03d-6a4b-4634054a6735" />
    </api>
    <api id="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a2c72c72-9290-f75b-60da-dd0123fbcbd7" />
    </api>
    <api id="T:System.ComponentModel.Composition.ImportingConstructorAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ImportingConstructorAttribute" />
      <apidata name="ImportingConstructorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Constructor" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="8f4c359b-1a30-8aa2-1f22-57b877972605" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.ImportingConstructorAttribute">
      <topicdata name="ImportingConstructorAttribute" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.ImportingConstructorAttribute" />
      <apidata name="ImportingConstructorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.ImportingConstructorAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="fcecb22f-1384-8e35-7c04-f9aafbcbc320" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.ImportingConstructorAttribute">
      <topicdata name="ImportingConstructorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.ImportingConstructorAttribute" />
      <apidata name="ImportingConstructorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="eb63cd57-e73b-2e97-cee2-1d9613fb7c62" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.ImportingConstructorAttribute">
      <topicdata name="ImportingConstructorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.ImportingConstructorAttribute" />
      <apidata name="ImportingConstructorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="d77454ae-fa9c-961d-0f3a-e27f29d96f04" />
    </api>
    <api id="M:System.ComponentModel.Composition.ImportingConstructorAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportingConstructorAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="93ad9d3b-7caa-15b8-9d91-ba96f69df0b3" />
    </api>
    <api id="T:System.ComponentModel.Composition.ImportManyAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ImportManyAttribute" />
      <apidata name="ImportManyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="f3eba7f7-4708-24ee-b44f-9a34721f45ba" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.ImportManyAttribute">
      <topicdata name="ImportManyAttribute" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.ImportManyAttribute" />
      <apidata name="ImportManyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.ImportManyAttribute.#ctor">
          <element api="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor" />
          <element api="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)" />
          <element api="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)" />
        </element>
        <element api="P:System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition" />
        <element api="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" />
        <element api="P:System.ComponentModel.Composition.ImportManyAttribute.ContractType" />
        <element api="P:System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="04d3ad86-e85d-a7c9-a53e-238487fc9030" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.ImportManyAttribute">
      <topicdata name="ImportManyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.ImportManyAttribute" />
      <apidata name="ImportManyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="443fd91c-d4e8-753a-f476-616d3dba134e" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.ImportManyAttribute">
      <topicdata name="ImportManyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.ImportManyAttribute" />
      <apidata name="ImportManyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition" />
        <element api="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" />
        <element api="P:System.ComponentModel.Composition.ImportManyAttribute.ContractType" />
        <element api="P:System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="cb45e0f7-d034-f422-321a-4fe71434a433" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.ImportManyAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ImportManyAttribute" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor" />
        <element api="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)" />
        <element api="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportManyAttribute" ref="true" />
      </containers>
      <file name="9531bb84-355b-76a3-9cb1-af5b2a187231" />
    </api>
    <api id="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ImportManyAttribute.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportManyAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="23be0745-ad6d-c601-21b9-48c1b87eb585" />
    </api>
    <api id="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ImportManyAttribute.#ctor" />
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportManyAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c5c30394-ed9b-ef2c-2089-453d5d684607" />
    </api>
    <api id="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ImportManyAttribute.#ctor" />
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportManyAttribute" ref="true" />
      </containers>
      <file name="4db94b27-69c3-af93-6bd5-2fdd0e26cf6e" />
    </api>
    <api id="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ImportManyAttribute.#ctor" />
      <parameters>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportManyAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="03f3d638-f1fe-7b6a-44af-a8a139efc2ca" />
    </api>
    <api id="P:System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition">
      <topicdata group="api" />
      <apidata name="AllowRecomposition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowRecomposition">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_AllowRecomposition">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportManyAttribute" ref="true" />
      </containers>
      <file name="b9c1409f-34e9-ec3b-6d44-0c2d74a33579" />
    </api>
    <api id="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName">
      <topicdata group="api" />
      <apidata name="ContractName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ContractName">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ContractName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportManyAttribute" ref="true" />
      </containers>
      <file name="f1bdf960-e3d6-4797-e95c-8da02b038d0d" />
    </api>
    <api id="P:System.ComponentModel.Composition.ImportManyAttribute.ContractType">
      <topicdata group="api" />
      <apidata name="ContractType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ContractType">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ContractType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportManyAttribute" ref="true" />
      </containers>
      <file name="f17bd402-9122-dcce-c33c-4e7f62b199b7" />
    </api>
    <api id="P:System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy">
      <topicdata group="api" />
      <apidata name="RequiredCreationPolicy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RequiredCreationPolicy">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_RequiredCreationPolicy">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.ImportManyAttribute" ref="true" />
      </containers>
      <file name="7e40fdfb-538b-75e9-4291-f1ad8013593c" />
    </api>
    <api id="T:System.ComponentModel.Composition.InheritedExportAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.InheritedExportAttribute" />
      <apidata name="InheritedExportAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.ExportAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="a1f8acf3-11f6-dc56-6ec9-d8ea45b8b969" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.InheritedExportAttribute">
      <topicdata name="InheritedExportAttribute" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.InheritedExportAttribute" />
      <apidata name="InheritedExportAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
        <element api="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
        <element api="Overload:System.ComponentModel.Composition.InheritedExportAttribute.#ctor">
          <element api="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor" />
          <element api="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor(System.Type)" />
          <element api="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor(System.String,System.Type)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="406fbe74-8827-7ce0-2780-588fe1b6a15b" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.InheritedExportAttribute">
      <topicdata name="InheritedExportAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.InheritedExportAttribute" />
      <apidata name="InheritedExportAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="70c6a906-58fc-e9d5-df84-f449f75e5bcb" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.InheritedExportAttribute">
      <topicdata name="InheritedExportAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.InheritedExportAttribute" />
      <apidata name="InheritedExportAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
        <element api="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="6abbda25-8894-a102-d617-ec9e0c11c2be" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.InheritedExportAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.InheritedExportAttribute" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor" />
        <element api="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor(System.Type)" />
        <element api="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.InheritedExportAttribute" ref="true" />
      </containers>
      <file name="6646bd77-60f4-7134-0dfd-8ac97386071e" />
    </api>
    <api id="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.InheritedExportAttribute.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.InheritedExportAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ce715898-9843-97b3-a2e1-c360c2754218" />
    </api>
    <api id="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.InheritedExportAttribute.#ctor" />
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.InheritedExportAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="02c2ee4c-07d2-85db-faaf-5f870461e21c" />
    </api>
    <api id="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.InheritedExportAttribute.#ctor" />
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.InheritedExportAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="55407b79-0df0-8e05-e6b0-a5131bcf131a" />
    </api>
    <api id="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.InheritedExportAttribute.#ctor" />
      <parameters>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.InheritedExportAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="daca124d-367a-1935-42ad-0692d1aa3fb5" />
    </api>
    <api id="T:System.ComponentModel.Composition.IPartImportsSatisfiedNotification">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.IPartImportsSatisfiedNotification" />
      <apidata name="IPartImportsSatisfiedNotification" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="3a063644-7ed3-4acf-56a3-a1bebeb5433e" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.IPartImportsSatisfiedNotification">
      <topicdata name="IPartImportsSatisfiedNotification" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.IPartImportsSatisfiedNotification" />
      <apidata name="IPartImportsSatisfiedNotification" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.ComponentModel.Composition.IPartImportsSatisfiedNotification.OnImportsSatisfied" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="70798907-b612-c756-07ab-b2c1a682a963" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.IPartImportsSatisfiedNotification">
      <topicdata name="IPartImportsSatisfiedNotification" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.IPartImportsSatisfiedNotification" />
      <apidata name="IPartImportsSatisfiedNotification" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.ComponentModel.Composition.IPartImportsSatisfiedNotification.OnImportsSatisfied" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="34a4a3b0-4f6b-2777-c35c-17e9fa926518" />
    </api>
    <api id="M:System.ComponentModel.Composition.IPartImportsSatisfiedNotification.OnImportsSatisfied">
      <topicdata group="api" />
      <apidata name="OnImportsSatisfied" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.IPartImportsSatisfiedNotification" ref="true" />
      </containers>
      <file name="c8d65f2a-1caf-e247-ed4a-e47299260fe1" />
    </api>
    <api id="T:System.ComponentModel.Composition.MetadataAttributeAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.MetadataAttributeAttribute" />
      <apidata name="MetadataAttributeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="ae9a1dba-58c1-ee96-2ece-4895218203e3" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.MetadataAttributeAttribute">
      <topicdata name="MetadataAttributeAttribute" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.MetadataAttributeAttribute" />
      <apidata name="MetadataAttributeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.MetadataAttributeAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="33170b11-3a6c-afc3-ecd3-972ea384da7e" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.MetadataAttributeAttribute">
      <topicdata name="MetadataAttributeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.MetadataAttributeAttribute" />
      <apidata name="MetadataAttributeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="2709a751-7cc0-03da-145d-272f99c01b97" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.MetadataAttributeAttribute">
      <topicdata name="MetadataAttributeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.MetadataAttributeAttribute" />
      <apidata name="MetadataAttributeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="18385c19-3c53-c8a6-4eeb-b341827f18c2" />
    </api>
    <api id="M:System.ComponentModel.Composition.MetadataAttributeAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.MetadataAttributeAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="81bf59f7-dabc-62dc-62d2-847c1d93498f" />
    </api>
    <api id="T:System.ComponentModel.Composition.PartCreationPolicyAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.PartCreationPolicyAttribute" />
      <apidata name="PartCreationPolicyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="9a21f2c1-2c33-097c-ef97-9965c247099a" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.PartCreationPolicyAttribute">
      <topicdata name="PartCreationPolicyAttribute" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.PartCreationPolicyAttribute" />
      <apidata name="PartCreationPolicyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.PartCreationPolicyAttribute.#ctor(System.ComponentModel.Composition.CreationPolicy)" />
        <element api="P:System.ComponentModel.Composition.PartCreationPolicyAttribute.CreationPolicy" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="0c12c66f-a8d8-97ee-f1d3-c3014a83b925" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.PartCreationPolicyAttribute">
      <topicdata name="PartCreationPolicyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.PartCreationPolicyAttribute" />
      <apidata name="PartCreationPolicyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="29fac8bc-f091-4258-4d8b-1104f4c063b1" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.PartCreationPolicyAttribute">
      <topicdata name="PartCreationPolicyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.PartCreationPolicyAttribute" />
      <apidata name="PartCreationPolicyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.Composition.PartCreationPolicyAttribute.CreationPolicy" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="efc1b969-3b02-b956-b4c2-952f6cb64780" />
    </api>
    <api id="M:System.ComponentModel.Composition.PartCreationPolicyAttribute.#ctor(System.ComponentModel.Composition.CreationPolicy)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="creationPolicy">
          <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.PartCreationPolicyAttribute" ref="true" />
      </containers>
      <file name="2be7cd29-ea74-7648-e575-108b0d5f2c59" />
    </api>
    <api id="P:System.ComponentModel.Composition.PartCreationPolicyAttribute.CreationPolicy">
      <topicdata group="api" />
      <apidata name="CreationPolicy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_CreationPolicy">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_CreationPolicy" />
      <returns>
        <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.PartCreationPolicyAttribute" ref="true" />
      </containers>
      <file name="dd5040e9-07c2-790c-e313-c73de498f87a" />
    </api>
    <api id="T:System.ComponentModel.Composition.PartMetadataAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.PartMetadataAttribute" />
      <apidata name="PartMetadataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="e202b871-8cbf-7eef-29a0-a9a960b3cbc5" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.PartMetadataAttribute">
      <topicdata name="PartMetadataAttribute" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.PartMetadataAttribute" />
      <apidata name="PartMetadataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.PartMetadataAttribute.#ctor(System.String,System.Object)" />
        <element api="P:System.ComponentModel.Composition.PartMetadataAttribute.Name" />
        <element api="P:System.ComponentModel.Composition.PartMetadataAttribute.Value" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="c93ca597-67bf-da92-6e1b-5a1f3ceac091" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.PartMetadataAttribute">
      <topicdata name="PartMetadataAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.PartMetadataAttribute" />
      <apidata name="PartMetadataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="3116889f-e9a7-c1fc-360c-db761052f608" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.PartMetadataAttribute">
      <topicdata name="PartMetadataAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.PartMetadataAttribute" />
      <apidata name="PartMetadataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.Composition.PartMetadataAttribute.Name" />
        <element api="P:System.ComponentModel.Composition.PartMetadataAttribute.Value" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="18a9e8ff-f1cf-4562-b80f-acaab5eed7a4" />
    </api>
    <api id="M:System.ComponentModel.Composition.PartMetadataAttribute.#ctor(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.PartMetadataAttribute" ref="true" />
      </containers>
      <file name="ca31903c-fa04-d7e9-c100-ab0f70fbc3c9" />
    </api>
    <api id="P:System.ComponentModel.Composition.PartMetadataAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Name">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.PartMetadataAttribute" ref="true" />
      </containers>
      <file name="bdfff588-2edc-09f2-de17-c3448b928891" />
    </api>
    <api id="P:System.ComponentModel.Composition.PartMetadataAttribute.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Value">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.PartMetadataAttribute" ref="true" />
      </containers>
      <file name="1b91f45a-acb2-bb64-4868-0876fabdf57f" />
    </api>
    <api id="T:System.ComponentModel.Composition.PartNotDiscoverableAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.PartNotDiscoverableAttribute" />
      <apidata name="PartNotDiscoverableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="c50b4526-3396-d68b-380c-b71bd76e278d" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.PartNotDiscoverableAttribute">
      <topicdata name="PartNotDiscoverableAttribute" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.PartNotDiscoverableAttribute" />
      <apidata name="PartNotDiscoverableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.PartNotDiscoverableAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="b886b6fc-177e-8ada-158d-9841e9f496be" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.PartNotDiscoverableAttribute">
      <topicdata name="PartNotDiscoverableAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.PartNotDiscoverableAttribute" />
      <apidata name="PartNotDiscoverableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="e9f77b85-2a28-f66c-83ec-23dc427fbd8d" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.PartNotDiscoverableAttribute">
      <topicdata name="PartNotDiscoverableAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.PartNotDiscoverableAttribute" />
      <apidata name="PartNotDiscoverableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
      </containers>
      <file name="adcbea6c-2615-aebd-d31e-430f690e3f6b" />
    </api>
    <api id="M:System.ComponentModel.Composition.PartNotDiscoverableAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition" />
        <type api="T:System.ComponentModel.Composition.PartNotDiscoverableAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e4d4ea57-d99b-695c-4997-bd395e314afa" />
    </api>
  </apis>
</reflection>