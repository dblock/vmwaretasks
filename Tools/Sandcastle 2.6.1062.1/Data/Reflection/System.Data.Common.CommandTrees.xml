<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Data.Entity">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.30319.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.30319.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.AssemblyTargetedPatchBandAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.21-0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Data.Common.CommandTrees">
      <topicdata group="api" />
      <apidata name="System.Data.Common.CommandTrees" group="namespace" />
      <elements>
        <element api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
        <element api="T:System.Data.Common.CommandTrees.DbCommandTree" />
        <element api="T:System.Data.Common.CommandTrees.DbFunctionCommandTree" />
        <element api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />
        <element api="T:System.Data.Common.CommandTrees.DbModificationCommandTree" />
        <element api="T:System.Data.Common.CommandTrees.DbDeleteCommandTree" />
        <element api="T:System.Data.Common.CommandTrees.DbInsertCommandTree" />
        <element api="T:System.Data.Common.CommandTrees.DbModificationClause" />
        <element api="T:System.Data.Common.CommandTrees.DbQueryCommandTree" />
        <element api="T:System.Data.Common.CommandTrees.DbSetClause" />
        <element api="T:System.Data.Common.CommandTrees.DbUpdateCommandTree" />
        <element api="T:System.Data.Common.CommandTrees.DbExpressionKind" />
        <element api="T:System.Data.Common.CommandTrees.DbExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbBinaryExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbUnaryExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbAggregate" />
        <element api="T:System.Data.Common.CommandTrees.DbGroupAggregate" />
        <element api="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />
        <element api="T:System.Data.Common.CommandTrees.DbExpressionBinding" />
        <element api="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />
        <element api="T:System.Data.Common.CommandTrees.DbAndExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbOrExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbNotExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbCaseExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbCastExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbComparisonExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbIsNullExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbIsOfExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbTreatExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbLikeExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbApplyExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbDistinctExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbElementExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbExceptExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbFilterExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbGroupByExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbIntersectExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbJoinExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbLimitExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbProjectExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbSortClause" />
        <element api="T:System.Data.Common.CommandTrees.DbSkipExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbSortExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbConstantExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbNullExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbPropertyExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbFunctionExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbLambdaExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbRefExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbDerefExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbScanExpression" />
        <element api="T:System.Data.Common.CommandTrees.DbLambda" />
      </elements>
      <file name="c4387cbf-1aef-2d27-2471-de41f5071c5e" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbAggregate">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbAggregate" />
      <apidata name="DbAggregate" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Common.CommandTrees.DbGroupAggregate" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbFunctionAggregate" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="5dc95995-45cf-452e-75e3-6a1410aedfae" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbAggregate">
      <topicdata name="DbAggregate" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbAggregate" />
      <apidata name="DbAggregate" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbAggregate.Arguments" />
        <element api="P:System.Data.Common.CommandTrees.DbAggregate.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="00a2c530-e335-cd23-95e1-5e72cbcdf4ec" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbAggregate">
      <topicdata name="DbAggregate" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbAggregate" />
      <apidata name="DbAggregate" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="7883daf5-17bf-e492-7932-99557dbf60dd" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbAggregate">
      <topicdata name="DbAggregate" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbAggregate" />
      <apidata name="DbAggregate" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbAggregate.Arguments" />
        <element api="P:System.Data.Common.CommandTrees.DbAggregate.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="77d852de-13e1-1a17-8ac1-2451c0ceeaeb" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbAggregate.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Arguments">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbAggregate" ref="true" />
      </containers>
      <file name="a7e18bb2-a91b-94e0-286c-62c99a532abf" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbAggregate.ResultType">
      <topicdata group="api" />
      <apidata name="ResultType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResultType">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbAggregate" ref="true" />
      </containers>
      <file name="3873ae83-6116-4576-8560-06c0542e2b2e" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbAndExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbAndExpression" />
      <apidata name="DbAndExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbBinaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="4ba6d7e0-112c-d257-ad67-37791a841ff5" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbAndExpression">
      <topicdata name="DbAndExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbAndExpression" />
      <apidata name="DbAndExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbAndExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbAndExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbAndExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="05786c31-902c-d919-823f-778e1514bd57" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbAndExpression">
      <topicdata name="DbAndExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbAndExpression" />
      <apidata name="DbAndExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbAndExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbAndExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbAndExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="55121476-efd8-58c3-dd1d-0eb9bc751125" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbAndExpression">
      <topicdata name="DbAndExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbAndExpression" />
      <apidata name="DbAndExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="a6fe3e04-2d55-735a-4ff2-f5f168202ac5" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbAndExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbAndExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbAndExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbAndExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbAndExpression" ref="true" />
      </containers>
      <file name="98c05cb8-66b6-0045-eb6d-1442e16591f6" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbAndExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbAndExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbAndExpression" ref="true" />
      </containers>
      <file name="6f048935-26d5-7f68-51cd-26fd2acacafd" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbAndExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbAndExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbAndExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbAndExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbAndExpression" ref="true" />
      </containers>
      <file name="718a5f84-169f-301f-9faa-c155508e4584" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbApplyExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbApplyExpression" />
      <apidata name="DbApplyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="49cbcbef-3a6a-cf0b-5c4f-2b9679f309be" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbApplyExpression">
      <topicdata name="DbApplyExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbApplyExpression" />
      <apidata name="DbApplyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbApplyExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbApplyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbApplyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="P:System.Data.Common.CommandTrees.DbApplyExpression.Apply" />
        <element api="P:System.Data.Common.CommandTrees.DbApplyExpression.Input" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="9f8f83e7-e0a4-5a84-76dd-c1bb710a8876" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbApplyExpression">
      <topicdata name="DbApplyExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbApplyExpression" />
      <apidata name="DbApplyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbApplyExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbApplyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbApplyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="96bffdd5-ef69-07af-3e1d-d8b89c803267" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbApplyExpression">
      <topicdata name="DbApplyExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbApplyExpression" />
      <apidata name="DbApplyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbApplyExpression.Apply" />
        <element api="P:System.Data.Common.CommandTrees.DbApplyExpression.Input" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="b0e37ffc-1385-9497-5c9d-d421e9961294" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbApplyExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbApplyExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbApplyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbApplyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbApplyExpression" ref="true" />
      </containers>
      <file name="75661780-708c-7863-be82-129c3ad280a0" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbApplyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbApplyExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbApplyExpression" ref="true" />
      </containers>
      <file name="e4ffc0ea-2138-d7a8-5b05-a9338dde225a" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbApplyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbApplyExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbApplyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbApplyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbApplyExpression" ref="true" />
      </containers>
      <file name="191b9019-a2bb-3c2f-948b-e177e7297b59" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbApplyExpression.Apply">
      <topicdata group="api" />
      <apidata name="Apply" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Apply">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbApplyExpression" ref="true" />
      </containers>
      <file name="de63bd67-3437-b253-ef83-aa73be93e84b" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbApplyExpression.Input">
      <topicdata group="api" />
      <apidata name="Input" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Input">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbApplyExpression" ref="true" />
      </containers>
      <file name="c9a43f36-60ec-13da-d522-695f621ef9ac" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbArithmeticExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbArithmeticExpression" />
      <apidata name="DbArithmeticExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="0fcf3c9e-dd37-a68f-4d87-fd2d03e84535" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbArithmeticExpression">
      <topicdata name="DbArithmeticExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />
      <apidata name="DbArithmeticExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="P:System.Data.Common.CommandTrees.DbArithmeticExpression.Arguments" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="0d0b9938-1460-a8d7-a70c-274f1b5ab36d" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbArithmeticExpression">
      <topicdata name="DbArithmeticExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />
      <apidata name="DbArithmeticExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="c409e8de-7f29-780d-05dc-4ffc468f79a0" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbArithmeticExpression">
      <topicdata name="DbArithmeticExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />
      <apidata name="DbArithmeticExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbArithmeticExpression.Arguments" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="2ace9900-646a-d511-3b6f-e14a9d9404dd" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbArithmeticExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbArithmeticExpression" ref="true" />
      </containers>
      <file name="e874c399-11e1-a74b-2eba-6b0c69e34e59" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbArithmeticExpression" ref="true" />
      </containers>
      <file name="282878b0-ad00-a197-0036-8d5d74520c45" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbArithmeticExpression" ref="true" />
      </containers>
      <file name="bfcc40f9-3074-adcb-2ece-7df634c07f2d" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbArithmeticExpression.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Arguments">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbArithmeticExpression" ref="true" />
      </containers>
      <file name="3bda6d4a-1cf4-2b27-3866-19f8daa2eabc" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbBinaryExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbBinaryExpression" />
      <apidata name="DbBinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Common.CommandTrees.DbAndExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbOrExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbComparisonExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExceptExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbIntersectExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbUnionAllExpression" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="73c732e0-49ef-49f7-ee84-0af0b378cf74" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbBinaryExpression">
      <topicdata name="DbBinaryExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbBinaryExpression" />
      <apidata name="DbBinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
        <element api="Overload:System.Data.Common.CommandTrees.DbBinaryExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="046cb0dd-b02d-27a8-329f-d0f2bb016a31" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbBinaryExpression">
      <topicdata name="DbBinaryExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbBinaryExpression" />
      <apidata name="DbBinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbBinaryExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="85f47044-cf44-9f96-0390-4f7af3ba1d4d" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbBinaryExpression">
      <topicdata name="DbBinaryExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbBinaryExpression" />
      <apidata name="DbBinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="901fd652-bf8c-5e7f-3b47-c9cea19bce84" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbBinaryExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbBinaryExpression" allInherited="true" parentTopicId="Overload:System.Data.Common.CommandTrees.DbExpression.Accept" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbBinaryExpression" />
      </containers>
      <file name="59b60d58-c595-4623-9252-69da9cfec87d" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Left">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbBinaryExpression" ref="true" />
      </containers>
      <file name="4200ae59-8555-7c0e-e603-226c77959dfe" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Right">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbBinaryExpression" ref="true" />
      </containers>
      <file name="27097f80-b5f2-9cff-93af-edd92873f543" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbCaseExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbCaseExpression" />
      <apidata name="DbCaseExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="14a17b93-5b02-5add-ca6a-f3c3f9ba145d" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbCaseExpression">
      <topicdata name="DbCaseExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbCaseExpression" />
      <apidata name="DbCaseExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbCaseExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbCaseExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbCaseExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="P:System.Data.Common.CommandTrees.DbCaseExpression.Else" />
        <element api="P:System.Data.Common.CommandTrees.DbCaseExpression.Then" />
        <element api="P:System.Data.Common.CommandTrees.DbCaseExpression.When" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="a9dcd033-ab74-f369-3e1d-8822feeeaaac" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbCaseExpression">
      <topicdata name="DbCaseExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbCaseExpression" />
      <apidata name="DbCaseExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbCaseExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbCaseExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbCaseExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="4c6e96fc-5f2b-a5ed-ac87-a9cc797a63c2" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbCaseExpression">
      <topicdata name="DbCaseExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbCaseExpression" />
      <apidata name="DbCaseExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbCaseExpression.Else" />
        <element api="P:System.Data.Common.CommandTrees.DbCaseExpression.Then" />
        <element api="P:System.Data.Common.CommandTrees.DbCaseExpression.When" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="acc810d1-544c-6787-3fa5-29c285e98813" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbCaseExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbCaseExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbCaseExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbCaseExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbCaseExpression" ref="true" />
      </containers>
      <file name="3931a413-f2c8-a369-6c48-276f58482b78" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbCaseExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbCaseExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbCaseExpression" ref="true" />
      </containers>
      <file name="11107f32-c24f-e6d3-748f-3d2da5d1d34c" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbCaseExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbCaseExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbCaseExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbCaseExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbCaseExpression" ref="true" />
      </containers>
      <file name="ef1861e3-c10d-19a7-9e7a-3f7b2b5b046c" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbCaseExpression.Else">
      <topicdata group="api" />
      <apidata name="Else" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Else">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbCaseExpression" ref="true" />
      </containers>
      <file name="f7756106-e941-6522-98c4-5fa5518acf0f" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbCaseExpression.Then">
      <topicdata group="api" />
      <apidata name="Then" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Then">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbCaseExpression" ref="true" />
      </containers>
      <file name="1f816ab1-f476-ca67-7a9c-e96dbd2bbd0a" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbCaseExpression.When">
      <topicdata group="api" />
      <apidata name="When" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_When">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbCaseExpression" ref="true" />
      </containers>
      <file name="119f4d7b-60b5-0981-7898-e815cc16acbb" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbCastExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbCastExpression" />
      <apidata name="DbCastExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="adf96854-67ab-ef9b-a199-1478506bff3b" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbCastExpression">
      <topicdata name="DbCastExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbCastExpression" />
      <apidata name="DbCastExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbCastExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbCastExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbCastExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="fdf4eabc-d79e-86f0-88eb-6ebb41e6c007" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbCastExpression">
      <topicdata name="DbCastExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbCastExpression" />
      <apidata name="DbCastExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbCastExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbCastExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbCastExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="63c67a60-8781-6b41-3803-888996868b83" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbCastExpression">
      <topicdata name="DbCastExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbCastExpression" />
      <apidata name="DbCastExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="2a00d489-4254-9d40-cde4-08f13eb354a0" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbCastExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbCastExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbCastExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbCastExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbCastExpression" ref="true" />
      </containers>
      <file name="acae5c68-68b0-03f3-a828-0e86b04d8aea" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbCastExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbCastExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbCastExpression" ref="true" />
      </containers>
      <file name="98b29253-3bf1-7727-aa1a-b7f91442b53e" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbCastExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbCastExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbCastExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbCastExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbCastExpression" ref="true" />
      </containers>
      <file name="991d25e4-fdcf-992a-4dd2-717f7d8f079c" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbCommandTree">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbCommandTree" />
      <apidata name="DbCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Common.CommandTrees.DbFunctionCommandTree" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbModificationCommandTree" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbQueryCommandTree" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="fd4797cb-b634-d340-b2fd-920ec8dc3124" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbCommandTree">
      <topicdata name="DbCommandTree" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbCommandTree" />
      <apidata name="DbCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="fa65e193-c02f-617d-8554-a11bafa3a945" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbCommandTree">
      <topicdata name="DbCommandTree" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbCommandTree" />
      <apidata name="DbCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="bd568dd6-6734-8ace-f48c-976e92e30190" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbCommandTree">
      <topicdata name="DbCommandTree" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbCommandTree" />
      <apidata name="DbCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="cedb58d3-ca32-9660-5d6b-927c7902ce38" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbCommandTree" ref="true" />
      </containers>
      <file name="75f2d31c-bb09-7571-5295-8fe954f61bd2" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbComparisonExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbComparisonExpression" />
      <apidata name="DbComparisonExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbBinaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="e64d29d9-6299-75a6-3974-e679fe4d3e69" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbComparisonExpression">
      <topicdata name="DbComparisonExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbComparisonExpression" />
      <apidata name="DbComparisonExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
        <element api="Overload:System.Data.Common.CommandTrees.DbComparisonExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="0327624a-2279-d5b7-cd09-cc1009da5785" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbComparisonExpression">
      <topicdata name="DbComparisonExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbComparisonExpression" />
      <apidata name="DbComparisonExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbComparisonExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="be36f06a-fc6f-2a80-0bbf-bad4b69679aa" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbComparisonExpression">
      <topicdata name="DbComparisonExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbComparisonExpression" />
      <apidata name="DbComparisonExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="467fd56c-4eb9-e2a4-dda2-f33c25c1641c" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbComparisonExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbComparisonExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbComparisonExpression" ref="true" />
      </containers>
      <file name="665b2cab-159f-9101-09b8-c3562851df03" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbComparisonExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbComparisonExpression" ref="true" />
      </containers>
      <file name="cfa736ee-9691-8da4-a827-d84b02bf28cc" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbComparisonExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbComparisonExpression" ref="true" />
      </containers>
      <file name="338ab5fd-5ee2-e3b4-4c7f-a705f6b992de" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbConstantExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbConstantExpression" />
      <apidata name="DbConstantExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="68613015-6f54-5a26-e6b2-7d5c9d7a81c7" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbConstantExpression">
      <topicdata name="DbConstantExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbConstantExpression" />
      <apidata name="DbConstantExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbConstantExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbConstantExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbConstantExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="P:System.Data.Common.CommandTrees.DbConstantExpression.Value" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="db29677e-45c6-9ac7-cc3b-553326b9688a" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbConstantExpression">
      <topicdata name="DbConstantExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbConstantExpression" />
      <apidata name="DbConstantExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbConstantExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbConstantExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbConstantExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="6772acfa-0462-f669-4e18-be8e17d8c647" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbConstantExpression">
      <topicdata name="DbConstantExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbConstantExpression" />
      <apidata name="DbConstantExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbConstantExpression.Value" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="91d3da18-cf01-1ce3-ac8a-1530e9fcd923" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbConstantExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbConstantExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbConstantExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbConstantExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbConstantExpression" ref="true" />
      </containers>
      <file name="e167c095-b784-f8d9-54f9-1cf8ea0af87d" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbConstantExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbConstantExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbConstantExpression" ref="true" />
      </containers>
      <file name="26ca446b-6d31-774a-5a93-ec632f120ad0" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbConstantExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbConstantExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbConstantExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbConstantExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbConstantExpression" ref="true" />
      </containers>
      <file name="4ea8d1f3-668c-44b8-bbf8-74630b6cfcb6" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbConstantExpression.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbConstantExpression" ref="true" />
      </containers>
      <file name="dfadfc1f-f580-641d-0ee5-e289cd75290f" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbCrossJoinExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />
      <apidata name="DbCrossJoinExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="db9bd63a-04ad-bacb-d03d-bbdda0ba83d8" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbCrossJoinExpression">
      <topicdata name="DbCrossJoinExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />
      <apidata name="DbCrossJoinExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="P:System.Data.Common.CommandTrees.DbCrossJoinExpression.Inputs" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="3a49d84b-f480-8d4b-e119-7cb9d3ff91a3" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbCrossJoinExpression">
      <topicdata name="DbCrossJoinExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />
      <apidata name="DbCrossJoinExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="50832fd5-8f9f-a85a-ee39-6ce1ad46a5d8" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbCrossJoinExpression">
      <topicdata name="DbCrossJoinExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />
      <apidata name="DbCrossJoinExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbCrossJoinExpression.Inputs" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="37d7a63c-2566-8527-ad33-9a59b9a6f91c" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" ref="true" />
      </containers>
      <file name="832ae458-09c9-f3e6-bc47-9c5f5c12bf73" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" ref="true" />
      </containers>
      <file name="a1d0228a-f312-ec55-5a4a-4c1e7fb222c4" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" ref="true" />
      </containers>
      <file name="ece1f83f-4975-77d0-f225-32bbc85eb634" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbCrossJoinExpression.Inputs">
      <topicdata group="api" />
      <apidata name="Inputs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Inputs">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" ref="true" />
      </containers>
      <file name="cc6fa4bf-1f24-2751-a42e-234ba5084176" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbDeleteCommandTree">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbDeleteCommandTree" />
      <apidata name="DbDeleteCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbModificationCommandTree" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbCommandTree" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="56e8c99b-5f07-a0d4-a208-ee39651cd0b8" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbDeleteCommandTree">
      <topicdata name="DbDeleteCommandTree" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbDeleteCommandTree" />
      <apidata name="DbDeleteCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters" />
        <element api="P:System.Data.Common.CommandTrees.DbDeleteCommandTree.Predicate" />
        <element api="P:System.Data.Common.CommandTrees.DbModificationCommandTree.Target" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="46e580f6-f2c7-cd45-51a4-d8208244a990" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbDeleteCommandTree">
      <topicdata name="DbDeleteCommandTree" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbDeleteCommandTree" />
      <apidata name="DbDeleteCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="7d5bbd7f-94c1-22a5-268d-4d34c698f933" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbDeleteCommandTree">
      <topicdata name="DbDeleteCommandTree" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbDeleteCommandTree" />
      <apidata name="DbDeleteCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters" />
        <element api="P:System.Data.Common.CommandTrees.DbDeleteCommandTree.Predicate" />
        <element api="P:System.Data.Common.CommandTrees.DbModificationCommandTree.Target" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="c8f7c904-fab6-a799-2192-f59bd6096d1e" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbDeleteCommandTree.Predicate">
      <topicdata group="api" />
      <apidata name="Predicate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Predicate">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbDeleteCommandTree" ref="true" />
      </containers>
      <file name="daa2bdd3-64d0-efd3-af0b-d09e66ca4064" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbDerefExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbDerefExpression" />
      <apidata name="DbDerefExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="a6646177-eed3-64ed-21b2-4af1dc736fc1" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbDerefExpression">
      <topicdata name="DbDerefExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbDerefExpression" />
      <apidata name="DbDerefExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbDerefExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbDerefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbDerefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="955c7dd9-01b9-d515-c0a1-7c5ed7b2ad9d" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbDerefExpression">
      <topicdata name="DbDerefExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbDerefExpression" />
      <apidata name="DbDerefExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbDerefExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbDerefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbDerefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="e90d0f69-855f-9f0b-cf30-616ce63db606" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbDerefExpression">
      <topicdata name="DbDerefExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbDerefExpression" />
      <apidata name="DbDerefExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="10874686-5f36-1df2-e821-7fc0c4d500ec" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbDerefExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbDerefExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbDerefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbDerefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbDerefExpression" ref="true" />
      </containers>
      <file name="1714e146-c371-7b87-1655-a381c5d853a9" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbDerefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbDerefExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbDerefExpression" ref="true" />
      </containers>
      <file name="39953e9f-3aff-fc39-50e5-7a1a561f665a" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbDerefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbDerefExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbDerefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbDerefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbDerefExpression" ref="true" />
      </containers>
      <file name="67f98683-f979-2e53-5145-f337fa5bcfb5" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbDistinctExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbDistinctExpression" />
      <apidata name="DbDistinctExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="901e953b-66ee-5953-8ffd-4365f3d80e69" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbDistinctExpression">
      <topicdata name="DbDistinctExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbDistinctExpression" />
      <apidata name="DbDistinctExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbDistinctExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbDistinctExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbDistinctExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="f74f7753-d12b-6505-86c4-0c1f617c6563" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbDistinctExpression">
      <topicdata name="DbDistinctExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbDistinctExpression" />
      <apidata name="DbDistinctExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbDistinctExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbDistinctExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbDistinctExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="b2c17992-a867-d7d3-287c-14ac5a4d0d2b" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbDistinctExpression">
      <topicdata name="DbDistinctExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbDistinctExpression" />
      <apidata name="DbDistinctExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="1a56c750-77c5-a0d8-1120-1b47385a4124" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbDistinctExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbDistinctExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbDistinctExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbDistinctExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbDistinctExpression" ref="true" />
      </containers>
      <file name="4e13c901-9185-4e19-b848-ed553669b46a" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbDistinctExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbDistinctExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbDistinctExpression" ref="true" />
      </containers>
      <file name="48515a9f-f654-42ea-4983-cb59f6784dfd" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbDistinctExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbDistinctExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbDistinctExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbDistinctExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbDistinctExpression" ref="true" />
      </containers>
      <file name="1d460eb0-7162-fb44-d478-821d308eb0fc" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbElementExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbElementExpression" />
      <apidata name="DbElementExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="92a74e84-3836-2945-2201-d8a42cf9e4a0" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbElementExpression">
      <topicdata name="DbElementExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbElementExpression" />
      <apidata name="DbElementExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbElementExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbElementExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbElementExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="ff20a9d6-9c68-7ea5-1c1c-c184b8819301" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbElementExpression">
      <topicdata name="DbElementExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbElementExpression" />
      <apidata name="DbElementExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbElementExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbElementExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbElementExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="da1db7ce-0438-95bd-a840-8765f3d97f90" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbElementExpression">
      <topicdata name="DbElementExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbElementExpression" />
      <apidata name="DbElementExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="bfbecfbe-daec-2172-1c0a-174e81cd4e29" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbElementExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbElementExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbElementExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbElementExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbElementExpression" ref="true" />
      </containers>
      <file name="1b25aa5a-d0d0-95ea-e311-9492761f5320" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbElementExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbElementExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbElementExpression" ref="true" />
      </containers>
      <file name="7287158d-e9ac-86ef-b7d5-ec1da7c77750" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbElementExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbElementExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbElementExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbElementExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbElementExpression" ref="true" />
      </containers>
      <file name="915c8876-20d8-5ff0-4629-6dd9126f541a" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbEntityRefExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbEntityRefExpression" />
      <apidata name="DbEntityRefExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="527d6e30-416a-2f37-ec5d-0d883ef1d0c1" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbEntityRefExpression">
      <topicdata name="DbEntityRefExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />
      <apidata name="DbEntityRefExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="6d6fb9ea-fa07-abd3-14f5-9ec65ce158fa" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbEntityRefExpression">
      <topicdata name="DbEntityRefExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />
      <apidata name="DbEntityRefExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="d79e7641-2f0f-d85f-1b2b-c8bc2a1aeb6a" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbEntityRefExpression">
      <topicdata name="DbEntityRefExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />
      <apidata name="DbEntityRefExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="d05259d6-ee20-949c-a484-9a187887dbd2" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbEntityRefExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbEntityRefExpression" ref="true" />
      </containers>
      <file name="8743f052-cae9-158e-9bb7-a6b6f3be2207" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbEntityRefExpression" ref="true" />
      </containers>
      <file name="79acf5b1-fefc-5701-7597-0cb4001d7f6d" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbEntityRefExpression" ref="true" />
      </containers>
      <file name="97fce868-c9e1-adbd-af22-44021e776ba2" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbExceptExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbExceptExpression" />
      <apidata name="DbExceptExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbBinaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="618497fb-35cc-675c-9c44-e477b3e8ff59" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbExceptExpression">
      <topicdata name="DbExceptExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbExceptExpression" />
      <apidata name="DbExceptExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
        <element api="Overload:System.Data.Common.CommandTrees.DbExceptExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExceptExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbExceptExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="e0761ed9-261b-c8e8-8567-8e07cb4d2f08" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbExceptExpression">
      <topicdata name="DbExceptExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbExceptExpression" />
      <apidata name="DbExceptExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbExceptExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExceptExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbExceptExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="240ebc43-ae2b-9561-6fa4-b558cc3f150e" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbExceptExpression">
      <topicdata name="DbExceptExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbExceptExpression" />
      <apidata name="DbExceptExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="89a0aeae-987d-811d-4dc3-ad35caf054a4" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbExceptExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbExceptExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExceptExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbExceptExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExceptExpression" ref="true" />
      </containers>
      <file name="29d96744-09e7-8591-05bc-a00665d61c29" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExceptExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExceptExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExceptExpression" ref="true" />
      </containers>
      <file name="31aab2d0-f383-3152-d2f9-cc4b33e09064" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExceptExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExceptExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbExceptExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbExceptExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExceptExpression" ref="true" />
      </containers>
      <file name="8ba584cf-af5a-9023-a8ca-e1859e27d55f" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbExpression" />
      <apidata name="DbExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Common.CommandTrees.DbBinaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbArithmeticExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbCaseExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbLikeExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbApplyExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbFilterExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbGroupByExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbLimitExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbProjectExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbQuantifierExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbSkipExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbConstantExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbNullExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbPropertyExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbLambdaExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbScanExpression" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="85c95932-0f78-6b75-c2e1-309e893a895e" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbExpression">
      <topicdata name="DbExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbExpression" />
      <apidata name="DbExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="0e417d85-c714-4418-16f0-861ae7e61310" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbExpression">
      <topicdata name="DbExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbExpression" />
      <apidata name="DbExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="954f5aff-65fd-3acf-9f1e-60c4a4ccb643" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbExpression">
      <topicdata name="DbExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbExpression" />
      <apidata name="DbExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="f4547ca8-f266-891f-a288-bc70b34626a9" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </containers>
      <file name="df3a169c-ce56-55ef-e0dc-7e77a4391f4f" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpression.Accept" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </containers>
      <file name="5d9c8b51-cdcb-0530-d093-43b6c1edecab" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpression.Accept" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </containers>
      <file name="6ad3da45-8246-0fa8-b76e-64e4ea451b7d" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </containers>
      <file name="f03bee07-2453-2e31-cda5-45dd67349334" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind">
      <topicdata group="api" />
      <apidata name="ExpressionKind" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExpressionKind">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </containers>
      <file name="c25de2bf-b0b2-c2bb-1357-51dc566256b1" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </containers>
      <file name="a10dbce8-3591-0c31-addf-75a9146bdb2e" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbExpression.ResultType">
      <topicdata group="api" />
      <apidata name="ResultType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResultType">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </containers>
      <file name="68fa79db-9894-a5d1-eaba-9dcc19003aa2" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbExpressionBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbExpressionBinding" />
      <apidata name="DbExpressionBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="d804fc57-52c1-568e-cce2-83c9c5bc4019" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbExpressionBinding">
      <topicdata name="DbExpressionBinding" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbExpressionBinding" />
      <apidata name="DbExpressionBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbExpressionBinding.Expression" />
        <element api="P:System.Data.Common.CommandTrees.DbExpressionBinding.Variable" />
        <element api="P:System.Data.Common.CommandTrees.DbExpressionBinding.VariableName" />
        <element api="P:System.Data.Common.CommandTrees.DbExpressionBinding.VariableType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="6407c39f-2909-4ac3-7b55-5c05e12302a0" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbExpressionBinding">
      <topicdata name="DbExpressionBinding" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbExpressionBinding" />
      <apidata name="DbExpressionBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="f4adfa83-fb2d-266e-b30a-412b21738519" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbExpressionBinding">
      <topicdata name="DbExpressionBinding" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbExpressionBinding" />
      <apidata name="DbExpressionBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpressionBinding.Expression" />
        <element api="P:System.Data.Common.CommandTrees.DbExpressionBinding.Variable" />
        <element api="P:System.Data.Common.CommandTrees.DbExpressionBinding.VariableName" />
        <element api="P:System.Data.Common.CommandTrees.DbExpressionBinding.VariableType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="2ba2f437-653a-7eaa-764b-dffc7064a90b" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbExpressionBinding.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Expression">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </containers>
      <file name="8d049349-df4d-7fff-27d8-b7c97156de10" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbExpressionBinding.Variable">
      <topicdata group="api" />
      <apidata name="Variable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Variable">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </containers>
      <file name="56ca47f7-9f39-c9f0-284a-20aff3a0cf9c" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbExpressionBinding.VariableName">
      <topicdata group="api" />
      <apidata name="VariableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VariableName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </containers>
      <file name="298c0560-e1e9-f43d-f70b-4ed02955ae0f" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbExpressionBinding.VariableType">
      <topicdata group="api" />
      <apidata name="VariableType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VariableType" />
      <returns>
        <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </containers>
      <file name="483e5d8b-fe2c-e8e3-a79e-c8a13658f305" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbExpressionKind">
      <topicdata group="api" />
      <apidata name="DbExpressionKind" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.All" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.And" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Any" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Case" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Cast" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Constant" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.CrossApply" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.CrossJoin" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Deref" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Distinct" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Divide" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Element" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.EntityRef" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Equals" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Except" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Filter" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.FullOuterJoin" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Function" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.GroupBy" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.InnerJoin" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Intersect" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.IsEmpty" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.IsNull" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.IsOf" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.IsOfOnly" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Lambda" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.LeftOuterJoin" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.LessThan" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Like" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Limit" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Minus" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Modulo" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Multiply" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.NewInstance" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Not" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.NotEquals" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Null" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Or" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.OuterApply" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.ParameterReference" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Plus" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Project" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Property" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Ref" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.RefKey" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.RelationshipNavigation" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Scan" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Skip" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Sort" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.Treat" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.UnaryMinus" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.UnionAll" />
        <element api="F:System.Data.Common.CommandTrees.DbExpressionKind.VariableReference" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="9044af89-7b14-979d-9797-0a5ef869835a" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="2ff8f221-b09e-9375-d60d-877ec48faf86" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.And">
      <topicdata group="api" notopic="" />
      <apidata name="And" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="28f3cf6b-1d99-923c-47ce-03921e43c131" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Any">
      <topicdata group="api" notopic="" />
      <apidata name="Any" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="c30e5739-cbed-d568-00f4-e1ee0e1d101e" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Case">
      <topicdata group="api" notopic="" />
      <apidata name="Case" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="75d422ad-c373-a9d1-96cf-9bb31d3324ea" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Cast">
      <topicdata group="api" notopic="" />
      <apidata name="Cast" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="404119ad-f830-d8fa-361c-4730b2c3277a" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Constant">
      <topicdata group="api" notopic="" />
      <apidata name="Constant" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="6b138543-8feb-362d-789d-f14c56780c2a" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.CrossApply">
      <topicdata group="api" notopic="" />
      <apidata name="CrossApply" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="87f99cad-f733-321c-ddb5-7166812c18c5" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.CrossJoin">
      <topicdata group="api" notopic="" />
      <apidata name="CrossJoin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="08cd8556-eaad-47ae-d9c2-337888ebe3a3" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Deref">
      <topicdata group="api" notopic="" />
      <apidata name="Deref" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="3933f076-8d28-5b8b-3e6f-9c7f66b37cd9" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Distinct">
      <topicdata group="api" notopic="" />
      <apidata name="Distinct" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="67daa377-aa56-1c35-cdb5-6ed29a0e86f9" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Divide">
      <topicdata group="api" notopic="" />
      <apidata name="Divide" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="e9dc5bde-05ee-8b6b-6cf1-774a5e553470" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Element">
      <topicdata group="api" notopic="" />
      <apidata name="Element" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="5ba29907-9c2f-2557-6acd-49be5624b861" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.EntityRef">
      <topicdata group="api" notopic="" />
      <apidata name="EntityRef" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="29eef48d-bfcd-9e43-f402-03c826fc5fd2" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Equals">
      <topicdata group="api" notopic="" />
      <apidata name="Equals" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="ee566c9f-aee4-9fb2-8aea-fc5bec104d8e" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Except">
      <topicdata group="api" notopic="" />
      <apidata name="Except" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="9545ddca-0d08-39bb-b956-24943ce9027f" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Filter">
      <topicdata group="api" notopic="" />
      <apidata name="Filter" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="c314f74c-4700-148b-8ff3-d93d901349fd" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.FullOuterJoin">
      <topicdata group="api" notopic="" />
      <apidata name="FullOuterJoin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="005d99c7-118c-2d56-ce42-8c5005830cd8" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Function">
      <topicdata group="api" notopic="" />
      <apidata name="Function" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="3e51d9f2-9d53-decb-4d86-9da5800234f0" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan">
      <topicdata group="api" notopic="" />
      <apidata name="GreaterThan" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="07253d61-d209-be60-5566-e3bb9dd26f88" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals">
      <topicdata group="api" notopic="" />
      <apidata name="GreaterThanOrEquals" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>19</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="7d9d267b-6edd-aafa-fc29-be28cab85ce6" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.GroupBy">
      <topicdata group="api" notopic="" />
      <apidata name="GroupBy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="a484ae28-852e-aee8-6ae8-0c6f857d3a5b" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.InnerJoin">
      <topicdata group="api" notopic="" />
      <apidata name="InnerJoin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>21</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="e4f9d4fd-69e9-a170-795e-91ebf909940c" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Intersect">
      <topicdata group="api" notopic="" />
      <apidata name="Intersect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="57b0c48d-9686-8b07-9e5e-0c8bb76ea0ba" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.IsEmpty">
      <topicdata group="api" notopic="" />
      <apidata name="IsEmpty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>23</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="c1fa698a-78d3-0cdb-7350-29dff2bf999f" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.IsNull">
      <topicdata group="api" notopic="" />
      <apidata name="IsNull" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>24</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="9a97fc3b-ac63-c020-053f-7085f866ee7e" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.IsOf">
      <topicdata group="api" notopic="" />
      <apidata name="IsOf" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>25</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="e17d2933-12c6-e310-7225-c40d9f17157c" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.IsOfOnly">
      <topicdata group="api" notopic="" />
      <apidata name="IsOfOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>26</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="b9c6fe19-198f-231c-8f8a-6829dda1d769" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Lambda">
      <topicdata group="api" notopic="" />
      <apidata name="Lambda" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>57</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="bfff5d80-2bae-6d16-bb8d-38aa60cc9a1a" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.LeftOuterJoin">
      <topicdata group="api" notopic="" />
      <apidata name="LeftOuterJoin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>27</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="5b05e4c4-d493-1b0b-89e6-fe99d09f7121" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.LessThan">
      <topicdata group="api" notopic="" />
      <apidata name="LessThan" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>28</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="e3bc5233-e276-d7ba-3b91-df4a16a540f2" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals">
      <topicdata group="api" notopic="" />
      <apidata name="LessThanOrEquals" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>29</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="5c5cb4b1-1237-6c6e-0410-ada04192796e" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Like">
      <topicdata group="api" notopic="" />
      <apidata name="Like" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>30</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="eeadcb12-bd7d-f2c9-d4c0-81bef71de1a1" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Limit">
      <topicdata group="api" notopic="" />
      <apidata name="Limit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>31</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="460b761e-199a-8677-c4e5-dcf34cb104f5" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Minus">
      <topicdata group="api" notopic="" />
      <apidata name="Minus" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="c334ceab-b845-5e8e-ecf5-0efe543b94db" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Modulo">
      <topicdata group="api" notopic="" />
      <apidata name="Modulo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>33</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="3c5d15ea-63c3-dbee-8166-043188062d34" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Multiply">
      <topicdata group="api" notopic="" />
      <apidata name="Multiply" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>34</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="1f794f20-8a95-105b-a019-29e82e641787" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.NewInstance">
      <topicdata group="api" notopic="" />
      <apidata name="NewInstance" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>35</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="0a0044de-eea5-6fba-15ce-ced827a20541" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Not">
      <topicdata group="api" notopic="" />
      <apidata name="Not" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>36</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="843ab6a7-6010-6b2a-1e91-85e5e6eb1e44" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.NotEquals">
      <topicdata group="api" notopic="" />
      <apidata name="NotEquals" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>37</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="3ba5df94-c2a4-aea4-3cc9-49556936847d" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Null">
      <topicdata group="api" notopic="" />
      <apidata name="Null" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>38</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="3ff740e9-3680-3d5b-96e4-9b688da9020d" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType">
      <topicdata group="api" notopic="" />
      <apidata name="OfType" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>39</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="1a9c1d8d-6f38-ccb3-c5b0-1c14ef357b60" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly">
      <topicdata group="api" notopic="" />
      <apidata name="OfTypeOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>40</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="bc5c2ba6-abdf-d945-975a-7267c1a85eaf" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Or">
      <topicdata group="api" notopic="" />
      <apidata name="Or" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>41</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="dfd64706-7c20-103d-0036-e4f70f47edf9" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.OuterApply">
      <topicdata group="api" notopic="" />
      <apidata name="OuterApply" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>42</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="5539539d-b610-f334-d7ae-fa32a3c3a354" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.ParameterReference">
      <topicdata group="api" notopic="" />
      <apidata name="ParameterReference" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>43</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="f565db1e-50e8-f883-737f-4b706282274b" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Plus">
      <topicdata group="api" notopic="" />
      <apidata name="Plus" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>44</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="4d31ef31-6f59-dd35-686a-ee902e9b7fb2" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Project">
      <topicdata group="api" notopic="" />
      <apidata name="Project" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>45</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="96a296bf-69e4-f78a-a03c-9212c1bd8faf" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Property">
      <topicdata group="api" notopic="" />
      <apidata name="Property" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>46</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="6a589cfb-7453-b9ac-258e-2be19eadfe30" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Ref">
      <topicdata group="api" notopic="" />
      <apidata name="Ref" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>47</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="c6f13975-8f0b-ecdf-1645-addfa5230930" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.RefKey">
      <topicdata group="api" notopic="" />
      <apidata name="RefKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>48</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="73f84274-9440-520f-19dc-2ccadce53d8e" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.RelationshipNavigation">
      <topicdata group="api" notopic="" />
      <apidata name="RelationshipNavigation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>49</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="fad471cd-3716-bbb7-c802-0c684af38fee" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Scan">
      <topicdata group="api" notopic="" />
      <apidata name="Scan" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>50</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="ca780379-de14-063b-f241-89cf34146079" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Skip">
      <topicdata group="api" notopic="" />
      <apidata name="Skip" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>51</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="d80d897e-8991-92f1-9e3c-6d2278989729" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Sort">
      <topicdata group="api" notopic="" />
      <apidata name="Sort" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>52</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="95d3f4df-e037-109e-aacc-f91cd817b544" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.Treat">
      <topicdata group="api" notopic="" />
      <apidata name="Treat" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>53</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="822308ae-55c4-c049-0af2-f911b93176c8" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.UnaryMinus">
      <topicdata group="api" notopic="" />
      <apidata name="UnaryMinus" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>54</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="72ba03c9-b3fd-7589-acc0-47f742a8f254" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.UnionAll">
      <topicdata group="api" notopic="" />
      <apidata name="UnionAll" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>55</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="e9ac4a5a-b0f1-f687-aef8-24fffc9e29b7" />
    </api>
    <api id="F:System.Data.Common.CommandTrees.DbExpressionKind.VariableReference">
      <topicdata group="api" notopic="" />
      <apidata name="VariableReference" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </returns>
      <value>56</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionKind" ref="false" />
      </containers>
      <file name="047004cf-5879-ac0f-9487-c068b34e2b0a" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbExpressionVisitor">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbExpressionVisitor" />
      <apidata name="DbExpressionVisitor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="d7d70841-ce13-8046-6b07-d2880eb1f7b3" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbExpressionVisitor">
      <topicdata name="DbExpressionVisitor" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />
      <apidata name="DbExpressionVisitor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.#ctor" />
        <element api="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit">
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="af7bc86d-f8fd-417a-c4ca-d3648d4c5064" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbExpressionVisitor">
      <topicdata name="DbExpressionVisitor" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />
      <apidata name="DbExpressionVisitor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit">
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="7d63e62a-e504-e5b8-68b9-175adf827670" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit">
      <topicdata name="Visit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbExpressionVisitor" />
      <apidata name="Visit" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="a5b18de9-03f4-449c-8a22-1e1f3d5ab7ee" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5eb2eeb8-a788-545a-edbb-911147bca3c4" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbAndExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="1e7cb8a5-c738-e329-2d89-06621b15ff39" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbApplyExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="7986c544-6422-b9d7-2130-e6b9d59794ab" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbArithmeticExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="d0df7fa1-ca14-1396-0298-36f0698c238b" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbCaseExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="b6834c82-3423-3c7d-e47b-7e4058f1de55" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbCastExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="4a8aecd5-e32c-d494-0c2b-230356c24e77" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbComparisonExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="0edfa0c0-bb75-0448-2089-f795d030430e" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbConstantExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="319acbc5-32f4-746d-61f9-79631e3842f5" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="dab0389f-552e-d7a7-5a61-169704242c76" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbDerefExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="4a8a6320-0d24-57b3-8902-266b486733e0" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbDistinctExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="3f70d4a5-e406-fc97-be7e-7700c420ade5" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbElementExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="737ab8fb-81b9-5530-9891-65fa8fe4928a" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbEntityRefExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="cd21c90a-edaa-0ec7-469b-fd1089d09543" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbExceptExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="fe7ac109-ef42-b899-7b07-dac76f974f4f" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="fab60dc1-20ae-1583-ef83-292433e667f3" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbFilterExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="c288fd56-ff14-c893-96cd-aba93c41fc71" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="3f0c929e-917b-0a0f-4c42-3f7b5eeb94fc" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbGroupByExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="2fd4ffff-c562-75c8-2712-d89ed364c665" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbIntersectExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="a050f189-5e14-c652-ccee-6ff219bb61b7" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="f3729ed2-7cf9-2f71-2390-71f4a19c4a60" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbIsNullExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="e2c94843-40b7-5489-05fa-dd3ead7913b3" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbIsOfExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="58837e54-15d6-da78-8bb4-6fce8711644b" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="35c43fbd-79d5-8e56-ef05-37b5ed2efa49" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbLambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="6cebbf92-addf-75c0-2eb1-6c88ed337530" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbLikeExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="65e76305-4130-225f-a9e5-992d8d7433ab" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbLimitExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="136a1098-3e37-9655-9b4b-4c9a411ecadd" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="e61e9693-bbfd-ce17-985b-7d3dcaa349ab" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbNotExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="ddb0d487-5bbe-7889-aa5a-f05bda9cd4ba" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbNullExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="a18a0c29-3937-bdc7-6d9b-f32d49d4799e" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbOfTypeExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="49baf716-5d33-2144-bdaa-d93126afcbce" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbOrExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="16360f12-6b97-6745-96f2-d1bc8ae3c49d" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="3a5ab82a-cb2d-fddd-02ba-44c373f51720" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbProjectExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="310febaa-8342-2f97-3ab7-dc928ec6b443" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbPropertyExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="0cf0f862-1bc9-cd99-652a-11f8017b042c" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbQuantifierExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="8adca671-00d2-21de-6a81-78412ccbf924" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbRefExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="8b8bf204-74cb-3d2b-faa0-5a8a1e6d6401" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbRefKeyExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="3112f0f6-4ac6-c51a-a758-951f1774875f" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="2abf8911-c7ce-d3af-2a00-65ca8f5a7ae6" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbScanExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="f4705652-a013-e839-2606-1c5cc2692e3e" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbSkipExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="4bbf402b-6ed1-f02a-677b-a3a5c423e239" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="e78f2f14-13a4-c252-b0f3-faa14085c37b" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbTreatExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="4db0826c-aecf-7ad1-9160-2a54ad8ea568" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbUnionAllExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="c09d5d6b-c574-deea-aa7f-53bfc70d3c6d" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
      </containers>
      <file name="6a48f469-c1ae-ff21-8662-6011b5a4be6b" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      <apidata name="DbExpressionVisitor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TResultType" />
      </templates>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="4dfa7026-76b7-536d-0e3e-647cc704abe0" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbExpressionVisitor`1">
      <topicdata name="DbExpressionVisitor" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      <apidata name="DbExpressionVisitor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TResultType" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.#ctor" />
        <element api="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit">
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="a1a05a9d-c3e0-2bc5-2908-8c7ca5ae790a" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbExpressionVisitor`1">
      <topicdata name="DbExpressionVisitor" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      <apidata name="DbExpressionVisitor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TResultType" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit">
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="67e49daf-a88b-29e9-25cf-24b8389e34c8" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit">
      <topicdata name="Visit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      <apidata name="Visit" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="25e95d90-a32d-6689-f456-3fd9ca904232" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performance critical to inline this type of method across NGen image boundaries</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f02ae3ab-8082-b1fa-8857-ba953528f41d" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbAndExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="22df7f99-a4cc-bfbf-2f09-41570bd9c7fc" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbApplyExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="2aa7cdd7-8fd6-9b98-30fa-9d91d98de26a" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbArithmeticExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="7300bf1a-ade0-2a15-3b87-3d438923e008" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbCaseExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="815ca763-6fb9-0bb8-9bb9-106e4a3c6d3b" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbCastExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="f925dd51-802c-b8b5-5040-d625edeab1c6" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbComparisonExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="5d6c2b5e-3d44-de68-566e-96bbd9a87975" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbConstantExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="d137524d-24b6-4337-bfe4-aa54035cde0d" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="0162a7a9-e249-1862-48e4-4701ffe150f6" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbDerefExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="5ec72cf6-b20c-5d14-649e-6e4fd9ad02d2" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbDistinctExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="66e63cea-1c62-53db-fe15-def76946adfa" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbElementExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="65ee78f5-1548-edc8-494a-2c5f653c73b5" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbEntityRefExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="6c8e2800-a60e-7513-4ac9-122ef3f5505d" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbExceptExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="1e3a6862-63a2-6cc0-0eb9-924dac48511c" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="a2ebcc53-981d-e654-6fc1-7cd545a4e63c" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbFilterExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="a0f069b3-c92c-3116-7c01-b726885bf788" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="f0c3080a-bc47-ddfe-7035-f616d324981d" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbGroupByExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="ad73dd20-140f-a686-1a93-ca805e211ab2" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbIntersectExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="1312e9ec-250a-e53e-f73d-a653327aa803" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="6893bbab-5bdd-5897-1766-55c51a8fe54c" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbIsNullExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="b884a2b0-43b8-b28f-2abf-695f907438e9" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbIsOfExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="6310ba8d-40eb-eb1a-81fe-180cd0d48c81" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="f479ae01-5f42-21d0-f4b1-c310dc0985dc" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbLambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="86a87748-f576-9462-5aaa-8005d4dcb759" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbLikeExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="426f6468-688c-16f5-95e3-041209a57729" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbLimitExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="b6ea18f9-289a-3be5-49d5-7458a480196d" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="dfdd9b8f-08d5-2289-d89b-909521c181d5" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbNotExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="dd4675ec-ba08-26bb-e484-9394a58c215a" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbNullExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="88baac61-d115-80c1-6ea5-327dc206e138" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbOfTypeExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="21e1b6d3-d876-eee8-14dd-1c2626c33437" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbOrExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="e414b191-b03e-e03c-6b05-615a4f026ea5" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="5c05695c-534d-ed4c-544f-109dc65a7139" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbProjectExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="bf159b73-8577-31a9-7d76-435c5b96f4f5" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbPropertyExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="908eb731-422c-6208-8704-3cdfafe5a3f2" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbQuantifierExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="d13f0bd9-37e4-b345-ca03-52dc36391ab4" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbRefExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="0e8a5df9-bb88-b1cd-78d3-433d1397b706" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbRefKeyExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="c5c3806f-f096-2bc9-fc36-c9018c8f3822" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="90e399fc-ce6c-34a3-21a0-98599b0d1d6e" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbScanExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="ab292a56-f85a-c051-6817-e0ded91afe4b" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbSkipExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="eb930416-c341-f220-f7f3-fd15cc126c00" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="dd8155ad-d14b-979a-c286-07b025c3a72c" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbTreatExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="98e8a9e9-574d-4eee-9ec8-2502e9c4ebab" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbUnionAllExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="62323289-412f-cc35-4cd3-bb4cf25aa621" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true" />
      </containers>
      <file name="887101d9-20a8-e3cd-95b1-9ccffeb142bc" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbFilterExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbFilterExpression" />
      <apidata name="DbFilterExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="107c752e-e82d-3dfd-cbec-ff4bfb98ae30" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbFilterExpression">
      <topicdata name="DbFilterExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbFilterExpression" />
      <apidata name="DbFilterExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbFilterExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbFilterExpression.Input" />
        <element api="P:System.Data.Common.CommandTrees.DbFilterExpression.Predicate" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="31c90762-8531-96d8-ab9a-948c94dc153c" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbFilterExpression">
      <topicdata name="DbFilterExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbFilterExpression" />
      <apidata name="DbFilterExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbFilterExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="29edecb8-f3ab-7ac4-a6f3-26464f9605a2" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbFilterExpression">
      <topicdata name="DbFilterExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbFilterExpression" />
      <apidata name="DbFilterExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbFilterExpression.Input" />
        <element api="P:System.Data.Common.CommandTrees.DbFilterExpression.Predicate" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="03da4884-4d90-c9c6-bff6-eddcef59d9df" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbFilterExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbFilterExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbFilterExpression" ref="true" />
      </containers>
      <file name="00250948-2138-428d-da00-75ce27addc68" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbFilterExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbFilterExpression" ref="true" />
      </containers>
      <file name="78f8b950-8dc3-ad66-1b0c-04b745f86a7f" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbFilterExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbFilterExpression" ref="true" />
      </containers>
      <file name="732c378d-251e-ff81-0d31-ec866fb65bbe" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbFilterExpression.Input">
      <topicdata group="api" />
      <apidata name="Input" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Input">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbFilterExpression" ref="true" />
      </containers>
      <file name="3756697d-1296-b35f-d22f-e90ba5508a9d" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbFilterExpression.Predicate">
      <topicdata group="api" />
      <apidata name="Predicate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Predicate">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbFilterExpression" ref="true" />
      </containers>
      <file name="237dfcd7-ba2b-4ae0-e38a-de0537539ec0" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbFunctionAggregate">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbFunctionAggregate" />
      <apidata name="DbFunctionAggregate" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbAggregate" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="0c05fc8f-4be9-2ef8-5d8d-397b17734374" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbFunctionAggregate">
      <topicdata name="DbFunctionAggregate" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />
      <apidata name="DbFunctionAggregate" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbAggregate.Arguments" />
        <element api="P:System.Data.Common.CommandTrees.DbAggregate.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct" />
        <element api="P:System.Data.Common.CommandTrees.DbFunctionAggregate.Function" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="e9408cef-6bac-be77-a4b3-07630f16abbc" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbFunctionAggregate">
      <topicdata name="DbFunctionAggregate" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />
      <apidata name="DbFunctionAggregate" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="1c35baf2-bfaa-e53d-c8e7-1d1161d7891c" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbFunctionAggregate">
      <topicdata name="DbFunctionAggregate" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />
      <apidata name="DbFunctionAggregate" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbAggregate.Arguments" />
        <element api="P:System.Data.Common.CommandTrees.DbAggregate.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct" />
        <element api="P:System.Data.Common.CommandTrees.DbFunctionAggregate.Function" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="c34b76a1-cfa8-5b3d-16e6-b181ae70a19f" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct">
      <topicdata group="api" />
      <apidata name="Distinct" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Distinct">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbFunctionAggregate" ref="true" />
      </containers>
      <file name="6ccf3fb6-c7f1-b22f-d529-b25b971e023f" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbFunctionAggregate.Function">
      <topicdata group="api" />
      <apidata name="Function" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Function">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Metadata.Edm.EdmFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbFunctionAggregate" ref="true" />
      </containers>
      <file name="1e819622-5039-6fdf-497a-ad9a7c190130" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbFunctionCommandTree">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbFunctionCommandTree" />
      <apidata name="DbFunctionCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbCommandTree" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="cb718250-e229-2cb8-422d-654258bfe6be" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbFunctionCommandTree">
      <topicdata name="DbFunctionCommandTree" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbFunctionCommandTree" />
      <apidata name="DbFunctionCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters" />
        <element api="P:System.Data.Common.CommandTrees.DbFunctionCommandTree.EdmFunction" />
        <element api="P:System.Data.Common.CommandTrees.DbFunctionCommandTree.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="aab4f9ce-289b-08e2-f125-6784ee70d705" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbFunctionCommandTree">
      <topicdata name="DbFunctionCommandTree" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbFunctionCommandTree" />
      <apidata name="DbFunctionCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="ac0c75a0-d8bd-9b76-cc9e-230da732fa8a" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbFunctionCommandTree">
      <topicdata name="DbFunctionCommandTree" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbFunctionCommandTree" />
      <apidata name="DbFunctionCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters" />
        <element api="P:System.Data.Common.CommandTrees.DbFunctionCommandTree.EdmFunction" />
        <element api="P:System.Data.Common.CommandTrees.DbFunctionCommandTree.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="66f266a1-529e-2047-fcee-223217920a17" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbFunctionCommandTree.EdmFunction">
      <topicdata group="api" />
      <apidata name="EdmFunction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EdmFunction">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Metadata.Edm.EdmFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbFunctionCommandTree" ref="true" />
      </containers>
      <file name="3324c65e-671e-2ee0-6e3a-92d8c8ca5d4c" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbFunctionCommandTree.ResultType">
      <topicdata group="api" />
      <apidata name="ResultType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResultType">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbFunctionCommandTree" ref="true" />
      </containers>
      <file name="f59860d1-1fa6-e6f8-c469-d7459fca6fd9" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbFunctionExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbFunctionExpression" />
      <apidata name="DbFunctionExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="b9da1fd2-8a19-20f8-3c5f-5a3b1252b8d4" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbFunctionExpression">
      <topicdata name="DbFunctionExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbFunctionExpression" />
      <apidata name="DbFunctionExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbFunctionExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbFunctionExpression.Arguments" />
        <element api="P:System.Data.Common.CommandTrees.DbFunctionExpression.Function" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="1df04add-80b4-6e24-f3d9-0b538e42f130" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbFunctionExpression">
      <topicdata name="DbFunctionExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbFunctionExpression" />
      <apidata name="DbFunctionExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbFunctionExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="b244dab1-e715-0426-9de7-9ca63ac4f917" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbFunctionExpression">
      <topicdata name="DbFunctionExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbFunctionExpression" />
      <apidata name="DbFunctionExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbFunctionExpression.Arguments" />
        <element api="P:System.Data.Common.CommandTrees.DbFunctionExpression.Function" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="49f4b5d5-7892-401a-d82f-3319b4052f18" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbFunctionExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbFunctionExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </containers>
      <file name="fbd9f6fb-537c-7e21-4681-fff1f373bb67" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbFunctionExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </containers>
      <file name="659fea4b-fd4e-3929-7076-36b46e921e04" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbFunctionExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </containers>
      <file name="aa12ae87-6ebf-acbf-2773-d479368a88d9" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbFunctionExpression.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Arguments">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </containers>
      <file name="c157db06-4205-bbc7-ca09-23c8553403a6" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbFunctionExpression.Function">
      <topicdata group="api" />
      <apidata name="Function" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Function">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Metadata.Edm.EdmFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </containers>
      <file name="ce264a10-bdb3-77e3-a16e-9a04d4225fea" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbGroupAggregate">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbGroupAggregate" />
      <apidata name="DbGroupAggregate" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbAggregate" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="ee1035af-e023-bc63-afed-4c38ffae63dd" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbGroupAggregate">
      <topicdata name="DbGroupAggregate" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbGroupAggregate" />
      <apidata name="DbGroupAggregate" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbAggregate.Arguments" />
        <element api="P:System.Data.Common.CommandTrees.DbAggregate.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="6ede00eb-7a23-0ce0-064f-e43b99243347" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbGroupAggregate">
      <topicdata name="DbGroupAggregate" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbGroupAggregate" />
      <apidata name="DbGroupAggregate" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="8e853612-2bbe-e983-95df-4fe1cc1fff89" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbGroupAggregate">
      <topicdata name="DbGroupAggregate" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbGroupAggregate" />
      <apidata name="DbGroupAggregate" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbAggregate.Arguments" />
        <element api="P:System.Data.Common.CommandTrees.DbAggregate.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="941f4c79-1cc8-53b6-b1b2-4ffabbee2bb4" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbGroupByExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbGroupByExpression" />
      <apidata name="DbGroupByExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="ea4a6cdd-7e6e-fe35-f225-5023d2fe36cb" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbGroupByExpression">
      <topicdata name="DbGroupByExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbGroupByExpression" />
      <apidata name="DbGroupByExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbGroupByExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupByExpression.Input" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupByExpression.Keys" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="2cf007a2-4869-92d7-eb97-5a3b12526d96" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbGroupByExpression">
      <topicdata name="DbGroupByExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbGroupByExpression" />
      <apidata name="DbGroupByExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbGroupByExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="4ff56911-37c5-7b76-7f47-b67610fb1db9" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbGroupByExpression">
      <topicdata name="DbGroupByExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbGroupByExpression" />
      <apidata name="DbGroupByExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupByExpression.Input" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupByExpression.Keys" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="a1630281-9ae4-89e4-9348-47c3293d408d" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbGroupByExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbGroupByExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbGroupByExpression" ref="true" />
      </containers>
      <file name="c14dc91b-c714-7f78-00c6-214fde9fa45b" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbGroupByExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbGroupByExpression" ref="true" />
      </containers>
      <file name="3a38be37-6d83-4643-385f-0a02dfe82323" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbGroupByExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbGroupByExpression" ref="true" />
      </containers>
      <file name="0ce5909c-eb70-8e4e-0087-dc05a3bb6924" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates">
      <topicdata group="api" />
      <apidata name="Aggregates" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Aggregates">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Data.Common.CommandTrees.DbAggregate" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbGroupByExpression" ref="true" />
      </containers>
      <file name="e41e6546-c78f-9ab3-3688-3f8928f5b8bd" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbGroupByExpression.Input">
      <topicdata group="api" />
      <apidata name="Input" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Input">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbGroupByExpression" ref="true" />
      </containers>
      <file name="556805ab-2668-dbc6-2464-ecb70a1fe3b2" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbGroupByExpression.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Keys">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbGroupByExpression" ref="true" />
      </containers>
      <file name="1df63acf-e406-1c1b-d583-13858b99634f" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />
      <apidata name="DbGroupExpressionBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="062425e5-56f2-b91d-66fb-8afae685aac3" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbGroupExpressionBinding">
      <topicdata name="DbGroupExpressionBinding" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />
      <apidata name="DbGroupExpressionBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.Expression" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupAggregate" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariable" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariableName" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariableType" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.Variable" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.VariableName" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.VariableType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="cb53f515-e3cb-1f4d-c3c0-be765cfceffe" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbGroupExpressionBinding">
      <topicdata name="DbGroupExpressionBinding" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />
      <apidata name="DbGroupExpressionBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="6ddb4e35-6a4e-39ba-d78c-e4c0d730be16" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbGroupExpressionBinding">
      <topicdata name="DbGroupExpressionBinding" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />
      <apidata name="DbGroupExpressionBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.Expression" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupAggregate" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariable" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariableName" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariableType" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.Variable" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.VariableName" />
        <element api="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.VariableType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="e0966247-5a04-2ac0-5d55-8804be4f0c1f" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Expression">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" ref="true" />
      </containers>
      <file name="aac8001b-9e68-badd-920b-390738c1328b" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupAggregate">
      <topicdata group="api" />
      <apidata name="GroupAggregate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GroupAggregate" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbGroupAggregate" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" ref="true" />
      </containers>
      <file name="d202820f-1a6d-06db-9010-91253026a0b2" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariable">
      <topicdata group="api" />
      <apidata name="GroupVariable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GroupVariable">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" ref="true" />
      </containers>
      <file name="5c8654e2-96c5-b526-ab17-ecc1c2da4bfa" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariableName">
      <topicdata group="api" />
      <apidata name="GroupVariableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GroupVariableName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" ref="true" />
      </containers>
      <file name="7d3791e2-f4a9-451b-e336-dafbac172704" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariableType">
      <topicdata group="api" />
      <apidata name="GroupVariableType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GroupVariableType" />
      <returns>
        <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" ref="true" />
      </containers>
      <file name="4b29ac16-41bb-bedc-c722-3f27467d5da5" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.Variable">
      <topicdata group="api" />
      <apidata name="Variable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Variable">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" ref="true" />
      </containers>
      <file name="7a927527-de88-34f9-1270-ee4b32146fc9" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.VariableName">
      <topicdata group="api" />
      <apidata name="VariableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VariableName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" ref="true" />
      </containers>
      <file name="6c6412f9-ae19-4688-dda5-71d2cfe52c86" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.VariableType">
      <topicdata group="api" />
      <apidata name="VariableType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VariableType" />
      <returns>
        <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" ref="true" />
      </containers>
      <file name="77a2f9ef-86fd-8199-1b8d-224b3af46d10" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbInsertCommandTree">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbInsertCommandTree" />
      <apidata name="DbInsertCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbModificationCommandTree" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbCommandTree" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="22ecb0d3-553a-373d-f6fa-e254beae2c9c" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbInsertCommandTree">
      <topicdata name="DbInsertCommandTree" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbInsertCommandTree" />
      <apidata name="DbInsertCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters" />
        <element api="P:System.Data.Common.CommandTrees.DbInsertCommandTree.Returning" />
        <element api="P:System.Data.Common.CommandTrees.DbInsertCommandTree.SetClauses" />
        <element api="P:System.Data.Common.CommandTrees.DbModificationCommandTree.Target" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="53ccdef7-8be0-2ba4-6d5c-c79ccf4cb9bf" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbInsertCommandTree">
      <topicdata name="DbInsertCommandTree" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbInsertCommandTree" />
      <apidata name="DbInsertCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="a5613346-1753-0cab-8fcd-0bee26031c24" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbInsertCommandTree">
      <topicdata name="DbInsertCommandTree" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbInsertCommandTree" />
      <apidata name="DbInsertCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters" />
        <element api="P:System.Data.Common.CommandTrees.DbInsertCommandTree.Returning" />
        <element api="P:System.Data.Common.CommandTrees.DbInsertCommandTree.SetClauses" />
        <element api="P:System.Data.Common.CommandTrees.DbModificationCommandTree.Target" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="43769242-1ff9-a0ec-7657-0e41aeec9cfb" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbInsertCommandTree.Returning">
      <topicdata group="api" />
      <apidata name="Returning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Returning">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbInsertCommandTree" ref="true" />
      </containers>
      <file name="103bcec6-b8db-2e36-290e-137bdd5a295a" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbInsertCommandTree.SetClauses">
      <topicdata group="api" />
      <apidata name="SetClauses" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SetClauses">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Data.Common.CommandTrees.DbModificationClause" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbInsertCommandTree" ref="true" />
      </containers>
      <file name="f1e334d9-3148-13e6-395e-4407499790ef" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbIntersectExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbIntersectExpression" />
      <apidata name="DbIntersectExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbBinaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="cb542361-de34-2182-92e0-440c1fa5f75d" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbIntersectExpression">
      <topicdata name="DbIntersectExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbIntersectExpression" />
      <apidata name="DbIntersectExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
        <element api="Overload:System.Data.Common.CommandTrees.DbIntersectExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbIntersectExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbIntersectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="6aac2d94-b86b-9ed5-9085-2a501b3e6a55" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbIntersectExpression">
      <topicdata name="DbIntersectExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbIntersectExpression" />
      <apidata name="DbIntersectExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbIntersectExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbIntersectExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbIntersectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="050dadb7-8912-02e3-d383-8e73943ede2b" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbIntersectExpression">
      <topicdata name="DbIntersectExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbIntersectExpression" />
      <apidata name="DbIntersectExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="b8efa396-35bf-9dde-7ef7-d7a8d6c0e08d" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbIntersectExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbIntersectExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbIntersectExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbIntersectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbIntersectExpression" ref="true" />
      </containers>
      <file name="f571da57-f0a5-c735-d2dd-09f96402b4e8" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbIntersectExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbIntersectExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbIntersectExpression" ref="true" />
      </containers>
      <file name="6b78e531-066a-bb1a-8a3e-078e7ef18d9c" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbIntersectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbIntersectExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbIntersectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbIntersectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbIntersectExpression" ref="true" />
      </containers>
      <file name="b9680920-24bc-e246-5cff-ae42f6c1c533" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbIsEmptyExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />
      <apidata name="DbIsEmptyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="1eaf76a6-b9c7-1bbb-dee8-d64436ec74fb" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbIsEmptyExpression">
      <topicdata name="DbIsEmptyExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />
      <apidata name="DbIsEmptyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="9c38f31e-f6cc-d281-c8e7-f98a4d8745bc" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbIsEmptyExpression">
      <topicdata name="DbIsEmptyExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />
      <apidata name="DbIsEmptyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="a19e5d6d-8701-681a-ad5d-9a791802257d" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbIsEmptyExpression">
      <topicdata name="DbIsEmptyExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />
      <apidata name="DbIsEmptyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="062a6f35-52c0-6d95-37ca-34eef96c52dd" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" ref="true" />
      </containers>
      <file name="3a8cc370-3552-8e03-628e-5e50617487bd" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" ref="true" />
      </containers>
      <file name="0b71f1ea-e7e2-6980-21f7-910ea79828dd" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" ref="true" />
      </containers>
      <file name="dd9c96e6-61f3-25bb-ad8f-26d4abdc0362" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbIsNullExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbIsNullExpression" />
      <apidata name="DbIsNullExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="301e1ee1-ed6f-00c1-1a3c-08e797eb0a14" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbIsNullExpression">
      <topicdata name="DbIsNullExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbIsNullExpression" />
      <apidata name="DbIsNullExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbIsNullExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbIsNullExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbIsNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="c55f5bfe-ce9c-ecdf-59ba-bd33cf263906" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbIsNullExpression">
      <topicdata name="DbIsNullExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbIsNullExpression" />
      <apidata name="DbIsNullExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbIsNullExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbIsNullExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbIsNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="b1907786-ea6d-1a10-bdd6-0fdc7ae8155e" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbIsNullExpression">
      <topicdata name="DbIsNullExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbIsNullExpression" />
      <apidata name="DbIsNullExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="9ee39757-eb39-cd54-a3d0-a15dcaa058b6" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbIsNullExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbIsNullExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbIsNullExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbIsNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbIsNullExpression" ref="true" />
      </containers>
      <file name="e4bdb4d7-a4d0-e76e-9d8b-1d112b2f4648" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbIsNullExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbIsNullExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbIsNullExpression" ref="true" />
      </containers>
      <file name="0a558bd2-2806-5c7a-b1d5-c9a839cd85cf" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbIsNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbIsNullExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbIsNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbIsNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbIsNullExpression" ref="true" />
      </containers>
      <file name="e3873f2a-2dc1-527d-9db3-2b08554b97d0" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbIsOfExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbIsOfExpression" />
      <apidata name="DbIsOfExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="1827d8ff-e5bc-4c0e-5fc6-a16afacba082" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbIsOfExpression">
      <topicdata name="DbIsOfExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbIsOfExpression" />
      <apidata name="DbIsOfExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbIsOfExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbIsOfExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbIsOfExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbIsOfExpression.OfType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="f1888033-9e59-9b21-e525-d8f7fd30b11e" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbIsOfExpression">
      <topicdata name="DbIsOfExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbIsOfExpression" />
      <apidata name="DbIsOfExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbIsOfExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbIsOfExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbIsOfExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="104ed6b7-a163-9b8f-db91-90cac2cb3e4e" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbIsOfExpression">
      <topicdata name="DbIsOfExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbIsOfExpression" />
      <apidata name="DbIsOfExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbIsOfExpression.OfType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="a0aec025-7bf4-fd9c-121e-7c960e5910eb" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbIsOfExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbIsOfExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbIsOfExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbIsOfExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbIsOfExpression" ref="true" />
      </containers>
      <file name="0743258c-b79b-367a-97b2-f7ae51c8c86d" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbIsOfExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbIsOfExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbIsOfExpression" ref="true" />
      </containers>
      <file name="4a55f7f9-e829-90e9-6689-dbf24412c16d" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbIsOfExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbIsOfExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbIsOfExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbIsOfExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbIsOfExpression" ref="true" />
      </containers>
      <file name="15e956ce-0856-fa39-9363-0bc4c2b3d498" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbIsOfExpression.OfType">
      <topicdata group="api" />
      <apidata name="OfType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OfType">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbIsOfExpression" ref="true" />
      </containers>
      <file name="07efd65e-abef-16a9-6891-f9a3908650a7" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbJoinExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbJoinExpression" />
      <apidata name="DbJoinExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="de662824-c0bc-f396-44cb-c828d16ff8c6" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbJoinExpression">
      <topicdata name="DbJoinExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbJoinExpression" />
      <apidata name="DbJoinExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbJoinExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbJoinExpression.JoinCondition" />
        <element api="P:System.Data.Common.CommandTrees.DbJoinExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbJoinExpression.Right" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="53203e58-66b9-a9de-fdba-72e9f3473d7b" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbJoinExpression">
      <topicdata name="DbJoinExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbJoinExpression" />
      <apidata name="DbJoinExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbJoinExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="96f47a4b-9d93-4f15-0efe-12cff1304a03" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbJoinExpression">
      <topicdata name="DbJoinExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbJoinExpression" />
      <apidata name="DbJoinExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbJoinExpression.JoinCondition" />
        <element api="P:System.Data.Common.CommandTrees.DbJoinExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbJoinExpression.Right" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="2d58bf00-40b7-da23-89eb-7d819e1530de" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbJoinExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbJoinExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
      </containers>
      <file name="e6aa3595-4c98-f56c-b5b7-b6040ad504aa" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbJoinExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
      </containers>
      <file name="e7c8bd64-47ca-f787-cc1f-498418630667" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbJoinExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
      </containers>
      <file name="75b3f5d7-aeb0-e1a0-1230-804f7d4b58ed" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbJoinExpression.JoinCondition">
      <topicdata group="api" />
      <apidata name="JoinCondition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_JoinCondition">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
      </containers>
      <file name="40435645-5f8a-7b72-4038-03696f26eb56" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbJoinExpression.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Left">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
      </containers>
      <file name="6dcd5188-9ba7-29c9-f256-536200e19469" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbJoinExpression.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Right">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
      </containers>
      <file name="f94e0ad3-1cf8-1d6e-6a84-6e05b030ab53" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbLambda">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbLambda" />
      <apidata name="DbLambda" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="f3cf2928-3c5d-8607-197e-fe2fa481f5e1" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbLambda">
      <topicdata name="DbLambda" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbLambda" />
      <apidata name="DbLambda" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbLambda.Body" />
        <element api="P:System.Data.Common.CommandTrees.DbLambda.Variables" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="3f8594e5-d445-0f09-a9a5-0d81ac19d85f" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbLambda">
      <topicdata name="DbLambda" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbLambda" />
      <apidata name="DbLambda" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="dd40e094-cc9a-5d49-5e86-b28d6db0919f" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbLambda">
      <topicdata name="DbLambda" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbLambda" />
      <apidata name="DbLambda" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbLambda.Body" />
        <element api="P:System.Data.Common.CommandTrees.DbLambda.Variables" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="cf87db2c-3e49-4d61-8820-3a24e7833f43" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbLambda.Body">
      <topicdata group="api" />
      <apidata name="Body" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Body">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLambda" ref="true" />
      </containers>
      <file name="836f5292-1a06-030e-1b24-b813a8f57548" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbLambda.Variables">
      <topicdata group="api" />
      <apidata name="Variables" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Variables">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLambda" ref="true" />
      </containers>
      <file name="4b2acfcc-45b8-6a1f-009c-47c51ff32a0e" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbLambdaExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbLambdaExpression" />
      <apidata name="DbLambdaExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="2aad9327-1ae6-0f6c-f6ac-04b024e4f7e7" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbLambdaExpression">
      <topicdata name="DbLambdaExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbLambdaExpression" />
      <apidata name="DbLambdaExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbLambdaExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbLambdaExpression.Arguments" />
        <element api="P:System.Data.Common.CommandTrees.DbLambdaExpression.Lambda" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="cda53c75-4d1c-7c6a-3052-16f7ebdf64b1" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbLambdaExpression">
      <topicdata name="DbLambdaExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbLambdaExpression" />
      <apidata name="DbLambdaExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbLambdaExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="6964d5c0-de2b-6319-09af-8cdf2f866236" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbLambdaExpression">
      <topicdata name="DbLambdaExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbLambdaExpression" />
      <apidata name="DbLambdaExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbLambdaExpression.Arguments" />
        <element api="P:System.Data.Common.CommandTrees.DbLambdaExpression.Lambda" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="eb7724af-242d-389c-0e12-c73cfeafb0ec" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbLambdaExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbLambdaExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLambdaExpression" ref="true" />
      </containers>
      <file name="738c8fad-1960-ecd4-6ddd-529e0b4bd5a4" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbLambdaExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLambdaExpression" ref="true" />
      </containers>
      <file name="db9c008e-acc2-19fe-b2b4-803e9ad5f9a6" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbLambdaExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLambdaExpression" ref="true" />
      </containers>
      <file name="7b6cf54c-4078-3503-917c-ad0d56f369f7" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbLambdaExpression.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Arguments">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLambdaExpression" ref="true" />
      </containers>
      <file name="a57145b0-e176-fbd9-f224-c21f5b553d1f" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbLambdaExpression.Lambda">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Lambda">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbLambda" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLambdaExpression" ref="true" />
      </containers>
      <file name="9b3be12e-bd99-78ff-6f46-87271cbdaa48" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbLikeExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbLikeExpression" />
      <apidata name="DbLikeExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="6b5e65cf-d78f-3f5c-a593-15c9933e5b89" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbLikeExpression">
      <topicdata name="DbLikeExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbLikeExpression" />
      <apidata name="DbLikeExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbLikeExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbLikeExpression.Argument" />
        <element api="P:System.Data.Common.CommandTrees.DbLikeExpression.Escape" />
        <element api="P:System.Data.Common.CommandTrees.DbLikeExpression.Pattern" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="437916c6-8b22-2cf1-c55f-98eef5fb52b0" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbLikeExpression">
      <topicdata name="DbLikeExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbLikeExpression" />
      <apidata name="DbLikeExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbLikeExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="71c41a57-bf64-655c-2f0b-c838f4ce443a" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbLikeExpression">
      <topicdata name="DbLikeExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbLikeExpression" />
      <apidata name="DbLikeExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbLikeExpression.Argument" />
        <element api="P:System.Data.Common.CommandTrees.DbLikeExpression.Escape" />
        <element api="P:System.Data.Common.CommandTrees.DbLikeExpression.Pattern" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="30da03b0-b077-fc9a-01d3-84ad1eb4a8f3" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbLikeExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbLikeExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLikeExpression" ref="true" />
      </containers>
      <file name="b8153f19-edbb-4713-17b3-0ef7dab0d5c2" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbLikeExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLikeExpression" ref="true" />
      </containers>
      <file name="59a63f55-88ea-1b0e-b6f8-6a7833139039" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbLikeExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLikeExpression" ref="true" />
      </containers>
      <file name="14e83f11-aa9c-69d9-8afb-96e510e36df6" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbLikeExpression.Argument">
      <topicdata group="api" />
      <apidata name="Argument" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Argument">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLikeExpression" ref="true" />
      </containers>
      <file name="06aba61e-6ece-2205-651b-9977e771df0f" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbLikeExpression.Escape">
      <topicdata group="api" />
      <apidata name="Escape" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Escape">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLikeExpression" ref="true" />
      </containers>
      <file name="4ca15659-bceb-1aef-7806-827d032d0b29" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbLikeExpression.Pattern">
      <topicdata group="api" />
      <apidata name="Pattern" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Pattern">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLikeExpression" ref="true" />
      </containers>
      <file name="70b4cca8-5343-d745-d7b0-c45692dccaf9" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbLimitExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbLimitExpression" />
      <apidata name="DbLimitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="f382dfa8-86cb-0d88-8f37-9f9f45b8866f" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbLimitExpression">
      <topicdata name="DbLimitExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbLimitExpression" />
      <apidata name="DbLimitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbLimitExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbLimitExpression.Argument" />
        <element api="P:System.Data.Common.CommandTrees.DbLimitExpression.Limit" />
        <element api="P:System.Data.Common.CommandTrees.DbLimitExpression.WithTies" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="80bb6dca-7d72-077e-c258-8b082958f619" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbLimitExpression">
      <topicdata name="DbLimitExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbLimitExpression" />
      <apidata name="DbLimitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbLimitExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="ebec50c5-f32e-917a-d9ce-811697d1fefb" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbLimitExpression">
      <topicdata name="DbLimitExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbLimitExpression" />
      <apidata name="DbLimitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbLimitExpression.Argument" />
        <element api="P:System.Data.Common.CommandTrees.DbLimitExpression.Limit" />
        <element api="P:System.Data.Common.CommandTrees.DbLimitExpression.WithTies" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="486e8cba-2b0c-8bb8-fcb8-8c8da8e13b8d" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbLimitExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbLimitExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLimitExpression" ref="true" />
      </containers>
      <file name="b8ed6de0-78ad-0989-06d3-98a20dabdb0e" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbLimitExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLimitExpression" ref="true" />
      </containers>
      <file name="4d4469f3-94d2-9c2a-307b-3e78460b6b71" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbLimitExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLimitExpression" ref="true" />
      </containers>
      <file name="3d3c43cf-e80c-c256-cb1f-21168ca9adc1" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbLimitExpression.Argument">
      <topicdata group="api" />
      <apidata name="Argument" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Argument">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLimitExpression" ref="true" />
      </containers>
      <file name="6dc7ffcb-37ed-9043-0d89-81b6da751a4f" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbLimitExpression.Limit">
      <topicdata group="api" />
      <apidata name="Limit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Limit">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLimitExpression" ref="true" />
      </containers>
      <file name="c6cfa63e-3b25-dcd5-37d9-d1f5ee197521" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbLimitExpression.WithTies">
      <topicdata group="api" />
      <apidata name="WithTies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WithTies">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbLimitExpression" ref="true" />
      </containers>
      <file name="eb59e21e-63c1-e671-7bd9-809aa8230b60" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbModificationClause">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbModificationClause" />
      <apidata name="DbModificationClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Common.CommandTrees.DbSetClause" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="ea385ce2-80b5-ab50-bbe0-a35a93f1db3e" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbModificationClause">
      <topicdata name="DbModificationClause" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbModificationClause" />
      <apidata name="DbModificationClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="3df93dfd-68e9-006b-77b4-cdb4f25cc955" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbModificationClause">
      <topicdata name="DbModificationClause" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbModificationClause" />
      <apidata name="DbModificationClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="ae7ef209-0440-2188-f796-fa210ac437bf" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbModificationCommandTree">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbModificationCommandTree" />
      <apidata name="DbModificationCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbCommandTree" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Common.CommandTrees.DbDeleteCommandTree" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbInsertCommandTree" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbUpdateCommandTree" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="5b075455-9126-07b2-5848-583bc2bd1b19" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbModificationCommandTree">
      <topicdata name="DbModificationCommandTree" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbModificationCommandTree" />
      <apidata name="DbModificationCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters" />
        <element api="P:System.Data.Common.CommandTrees.DbModificationCommandTree.Target" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="34a2de6f-f461-211b-0a9d-05f13e4717d1" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbModificationCommandTree">
      <topicdata name="DbModificationCommandTree" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbModificationCommandTree" />
      <apidata name="DbModificationCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="f87de983-8843-ecd7-343e-a7088fc02fd3" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbModificationCommandTree">
      <topicdata name="DbModificationCommandTree" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbModificationCommandTree" />
      <apidata name="DbModificationCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters" />
        <element api="P:System.Data.Common.CommandTrees.DbModificationCommandTree.Target" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="5a625474-1302-3cd5-d8d7-95b1f88cad70" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbModificationCommandTree.Target">
      <topicdata group="api" />
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Target">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbModificationCommandTree" ref="true" />
      </containers>
      <file name="119a8fd0-437c-09f4-ecb7-12e6272afc6c" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbNewInstanceExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />
      <apidata name="DbNewInstanceExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="d80dd041-94c8-7912-844a-b997999b5ea5" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbNewInstanceExpression">
      <topicdata name="DbNewInstanceExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />
      <apidata name="DbNewInstanceExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbNewInstanceExpression.Arguments" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="36d40b21-5fb9-e4e5-be12-aace77dcb1c8" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbNewInstanceExpression">
      <topicdata name="DbNewInstanceExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />
      <apidata name="DbNewInstanceExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="5af97d2d-686b-c4c7-28aa-c1fb0f2bfab3" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbNewInstanceExpression">
      <topicdata name="DbNewInstanceExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />
      <apidata name="DbNewInstanceExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbNewInstanceExpression.Arguments" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="3ad9f67e-4d64-570f-8b17-8570691bb9d7" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" ref="true" />
      </containers>
      <file name="4c5bd3ff-9612-e160-c7dc-2cb3ceae8ff7" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" ref="true" />
      </containers>
      <file name="4c6f0b9d-3553-f3bf-3043-f90586c31987" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" ref="true" />
      </containers>
      <file name="686e921d-2964-2d32-5ce1-e4c4f226aa21" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbNewInstanceExpression.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Arguments">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" ref="true" />
      </containers>
      <file name="f334f92e-5f56-b614-23cd-5a6fdaec8d3c" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbNotExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbNotExpression" />
      <apidata name="DbNotExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="ae2ae6f5-9fd0-e1c9-5df7-d0169efcc61c" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbNotExpression">
      <topicdata name="DbNotExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbNotExpression" />
      <apidata name="DbNotExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbNotExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbNotExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbNotExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="3cc55c0e-c292-3a4b-b6ef-12521b676fe2" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbNotExpression">
      <topicdata name="DbNotExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbNotExpression" />
      <apidata name="DbNotExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbNotExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbNotExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbNotExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="126a2d2f-d779-9c29-3749-ec57fafa6222" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbNotExpression">
      <topicdata name="DbNotExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbNotExpression" />
      <apidata name="DbNotExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="d7f0e458-9222-9197-c7bc-d07ef4a60e31" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbNotExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbNotExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbNotExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbNotExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbNotExpression" ref="true" />
      </containers>
      <file name="877b997e-38f7-1faf-48ec-cdab1939c147" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbNotExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbNotExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbNotExpression" ref="true" />
      </containers>
      <file name="6e1fad9a-c33f-d847-20ac-ec0aaea309b2" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbNotExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbNotExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbNotExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbNotExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbNotExpression" ref="true" />
      </containers>
      <file name="d2856f72-03ed-e45c-dbe3-d0cbc568ebd1" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbNullExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbNullExpression" />
      <apidata name="DbNullExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="7b04d87b-43f0-90b7-1276-574a7a7fa042" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbNullExpression">
      <topicdata name="DbNullExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbNullExpression" />
      <apidata name="DbNullExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbNullExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbNullExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="feab2ba1-0310-59ff-f5f3-04d69044ce81" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbNullExpression">
      <topicdata name="DbNullExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbNullExpression" />
      <apidata name="DbNullExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbNullExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbNullExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="a916270f-3ca9-0fbe-84fa-604894c2ed87" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbNullExpression">
      <topicdata name="DbNullExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbNullExpression" />
      <apidata name="DbNullExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="de092bf4-55df-63d3-0451-9e992b6a977b" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbNullExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbNullExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbNullExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbNullExpression" ref="true" />
      </containers>
      <file name="c9fac785-30f6-cd41-c40e-3772173f72e3" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbNullExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbNullExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbNullExpression" ref="true" />
      </containers>
      <file name="9720a46d-5302-5f1a-74c5-58904aec6999" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbNullExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbNullExpression" ref="true" />
      </containers>
      <file name="3419537f-8911-3d61-8cb4-b270785314cb" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbOfTypeExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbOfTypeExpression" />
      <apidata name="DbOfTypeExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="f0dc2f2f-b99d-1d06-c342-d57cb9018807" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbOfTypeExpression">
      <topicdata name="DbOfTypeExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />
      <apidata name="DbOfTypeExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbOfTypeExpression.OfType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="0972b815-990d-4d8a-9794-99289dd51881" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbOfTypeExpression">
      <topicdata name="DbOfTypeExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />
      <apidata name="DbOfTypeExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="5d094ac6-32cd-268d-51e3-647080f090d5" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbOfTypeExpression">
      <topicdata name="DbOfTypeExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />
      <apidata name="DbOfTypeExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbOfTypeExpression.OfType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="7138b66c-66e3-89da-7325-96f1fbbce30e" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbOfTypeExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbOfTypeExpression" ref="true" />
      </containers>
      <file name="de6504c2-06fe-b0ae-293d-7cca957d17e7" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbOfTypeExpression" ref="true" />
      </containers>
      <file name="efd1dcee-598c-d05c-577b-7be9d0497b26" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbOfTypeExpression" ref="true" />
      </containers>
      <file name="fb844f75-26c6-ea9e-e188-6ab3ebf94ec6" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbOfTypeExpression.OfType">
      <topicdata group="api" />
      <apidata name="OfType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OfType">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbOfTypeExpression" ref="true" />
      </containers>
      <file name="27999db1-e0bf-6968-e23a-680d31ccee1b" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbOrExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbOrExpression" />
      <apidata name="DbOrExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbBinaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="94bcd93a-8921-982e-c0d0-05114436efe0" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbOrExpression">
      <topicdata name="DbOrExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbOrExpression" />
      <apidata name="DbOrExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
        <element api="Overload:System.Data.Common.CommandTrees.DbOrExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbOrExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbOrExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="a844023d-d5c6-a8e2-4eda-70c979d50cb8" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbOrExpression">
      <topicdata name="DbOrExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbOrExpression" />
      <apidata name="DbOrExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbOrExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbOrExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbOrExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="6484c085-75f8-e938-0275-ba08b36b9cfe" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbOrExpression">
      <topicdata name="DbOrExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbOrExpression" />
      <apidata name="DbOrExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="2bf1b573-60de-111b-35bf-fb201568bd94" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbOrExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbOrExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbOrExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbOrExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbOrExpression" ref="true" />
      </containers>
      <file name="d77493dd-c459-e708-a073-663a8f4548b9" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbOrExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbOrExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbOrExpression" ref="true" />
      </containers>
      <file name="d32f95cd-2bf1-19f4-dc56-caaca49ae930" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbOrExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbOrExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbOrExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbOrExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbOrExpression" ref="true" />
      </containers>
      <file name="5283edc8-dab0-01e8-f282-7958d3791bb1" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />
      <apidata name="DbParameterReferenceExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="626a8278-7f8f-02f7-49f9-70195e529f8e" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbParameterReferenceExpression">
      <topicdata name="DbParameterReferenceExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />
      <apidata name="DbParameterReferenceExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbParameterReferenceExpression.ParameterName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="aa060395-fb9d-3cc3-abe0-7fd5289c9939" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbParameterReferenceExpression">
      <topicdata name="DbParameterReferenceExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />
      <apidata name="DbParameterReferenceExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="720e52df-77d7-854b-d06e-533ddfc82a9a" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbParameterReferenceExpression">
      <topicdata name="DbParameterReferenceExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />
      <apidata name="DbParameterReferenceExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbParameterReferenceExpression.ParameterName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="4b1400bc-78ef-819e-f02e-fd2b7153329b" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" ref="true" />
      </containers>
      <file name="507c1cad-c6b6-fbc2-bb86-4a644493419d" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" ref="true" />
      </containers>
      <file name="8c4987b4-ebf7-3d3d-6baf-08f4ebbb32f5" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" ref="true" />
      </containers>
      <file name="81f2dda6-f8e8-fd06-d087-8728845b2ade" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbParameterReferenceExpression.ParameterName">
      <topicdata group="api" />
      <apidata name="ParameterName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterName">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" ref="true" />
      </containers>
      <file name="691a7835-9545-c72d-9bdf-12e465723f00" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbProjectExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbProjectExpression" />
      <apidata name="DbProjectExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="a38c05aa-e638-d662-435e-531623f01d9d" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbProjectExpression">
      <topicdata name="DbProjectExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbProjectExpression" />
      <apidata name="DbProjectExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbProjectExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbProjectExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbProjectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbProjectExpression.Input" />
        <element api="P:System.Data.Common.CommandTrees.DbProjectExpression.Projection" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="32424ce7-4755-f170-71b6-9ab43d333e0a" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbProjectExpression">
      <topicdata name="DbProjectExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbProjectExpression" />
      <apidata name="DbProjectExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbProjectExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbProjectExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbProjectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="0d06684f-fca9-aeae-7790-dd6102b80c54" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbProjectExpression">
      <topicdata name="DbProjectExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbProjectExpression" />
      <apidata name="DbProjectExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbProjectExpression.Input" />
        <element api="P:System.Data.Common.CommandTrees.DbProjectExpression.Projection" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="25f752db-be1a-7dc9-0c3c-801f6047edd4" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbProjectExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbProjectExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbProjectExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbProjectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbProjectExpression" ref="true" />
      </containers>
      <file name="34a169f0-e352-4a9a-a7bd-0f006098f5b0" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbProjectExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbProjectExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbProjectExpression" ref="true" />
      </containers>
      <file name="513657fe-2e93-56ea-1ce6-e63af5d47eae" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbProjectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbProjectExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbProjectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbProjectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbProjectExpression" ref="true" />
      </containers>
      <file name="fc94bf2f-4c5b-f5c3-83d8-ed815a93bc87" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbProjectExpression.Input">
      <topicdata group="api" />
      <apidata name="Input" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Input">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbProjectExpression" ref="true" />
      </containers>
      <file name="67e652b2-f59a-58e3-4300-4687900dc013" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbProjectExpression.Projection">
      <topicdata group="api" />
      <apidata name="Projection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Projection">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbProjectExpression" ref="true" />
      </containers>
      <file name="e96fd243-fddc-300b-6965-8824ce44325c" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbPropertyExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbPropertyExpression" />
      <apidata name="DbPropertyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="65bad956-ed05-0780-e4eb-c27231fb3066" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbPropertyExpression">
      <topicdata name="DbPropertyExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbPropertyExpression" />
      <apidata name="DbPropertyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbPropertyExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbPropertyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbPropertyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbPropertyExpression.Instance" />
        <element api="M:System.Data.Common.CommandTrees.DbPropertyExpression.op_Implicit(System.Data.Common.CommandTrees.DbPropertyExpression)~System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}" />
        <element api="P:System.Data.Common.CommandTrees.DbPropertyExpression.Property" />
        <element api="M:System.Data.Common.CommandTrees.DbPropertyExpression.ToKeyValuePair" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="800ec0b8-9344-3d1c-e80e-153cb093c8d7" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbPropertyExpression">
      <topicdata name="DbPropertyExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbPropertyExpression" />
      <apidata name="DbPropertyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbPropertyExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbPropertyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbPropertyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="M:System.Data.Common.CommandTrees.DbPropertyExpression.ToKeyValuePair" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="f6e73736-d7a6-f4a4-f59f-cf918e3f73f3" />
    </api>
    <api id="Operators.T:System.Data.Common.CommandTrees.DbPropertyExpression">
      <topicdata name="DbPropertyExpression" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Data.Common.CommandTrees.DbPropertyExpression" />
      <apidata name="DbPropertyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbPropertyExpression.op_Implicit(System.Data.Common.CommandTrees.DbPropertyExpression)~System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="d74b1beb-47cf-8463-1e5b-0f8217e900d7" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbPropertyExpression">
      <topicdata name="DbPropertyExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbPropertyExpression" />
      <apidata name="DbPropertyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbPropertyExpression.Instance" />
        <element api="P:System.Data.Common.CommandTrees.DbPropertyExpression.Property" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="5423e7bb-c516-078d-0f63-f578c4c3327e" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbPropertyExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbPropertyExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbPropertyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbPropertyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbPropertyExpression" ref="true" />
      </containers>
      <file name="bf329078-db49-364e-04e5-260cafee3b73" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbPropertyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbPropertyExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbPropertyExpression" ref="true" />
      </containers>
      <file name="06d70b7f-f281-5d40-0b33-cd83b2e8a549" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbPropertyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbPropertyExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbPropertyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbPropertyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbPropertyExpression" ref="true" />
      </containers>
      <file name="e654d01a-9e82-70f1-c1e3-714397402ef3" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbPropertyExpression.Instance">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbPropertyExpression" ref="true" />
      </containers>
      <file name="acd88962-3d64-c7f9-f579-fd803c625d1e" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbPropertyExpression.op_Implicit(System.Data.Common.CommandTrees.DbPropertyExpression)~System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Data.Common.CommandTrees.DbPropertyExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbPropertyExpression" ref="true" />
      </containers>
      <file name="4a0dfcf7-eefd-5852-0c79-58697535a3cb" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbPropertyExpression.Property">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Property">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Metadata.Edm.EdmMember" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbPropertyExpression" ref="true" />
      </containers>
      <file name="15c51211-11c4-5542-0e95-e38db2d03972" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbPropertyExpression.ToKeyValuePair">
      <topicdata group="api" />
      <apidata name="ToKeyValuePair" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbPropertyExpression" ref="true" />
      </containers>
      <file name="6b8fa400-d389-823a-6343-5e998ca86dc0" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbQuantifierExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbQuantifierExpression" />
      <apidata name="DbQuantifierExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="9fabec04-fe04-d640-f3b9-85524f0ab6fa" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbQuantifierExpression">
      <topicdata name="DbQuantifierExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />
      <apidata name="DbQuantifierExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Input" />
        <element api="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Predicate" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="c02d3a02-26ca-cdee-2114-df8474e0cbd0" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbQuantifierExpression">
      <topicdata name="DbQuantifierExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />
      <apidata name="DbQuantifierExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="7705a993-e54b-9903-eb29-6ff5bbd37343" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbQuantifierExpression">
      <topicdata name="DbQuantifierExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />
      <apidata name="DbQuantifierExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Input" />
        <element api="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Predicate" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="3769e827-2829-da0a-b2b0-d43f85111b0e" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbQuantifierExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbQuantifierExpression" ref="true" />
      </containers>
      <file name="18c36efb-6a56-11d2-3829-b91da10487ce" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbQuantifierExpression" ref="true" />
      </containers>
      <file name="45a7440c-5c17-294f-d252-b0298cded1a6" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbQuantifierExpression" ref="true" />
      </containers>
      <file name="fce69464-11c6-443c-87fb-c6a169ad419a" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Input">
      <topicdata group="api" />
      <apidata name="Input" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Input">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbQuantifierExpression" ref="true" />
      </containers>
      <file name="c9a3be98-c39e-9fc3-86f2-a0a141d6700c" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Predicate">
      <topicdata group="api" />
      <apidata name="Predicate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Predicate">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbQuantifierExpression" ref="true" />
      </containers>
      <file name="1949e0fb-edbc-dfdb-43fd-8fe54f03de65" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbQueryCommandTree">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbQueryCommandTree" />
      <apidata name="DbQueryCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbCommandTree" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="a7381dc6-6d70-e736-d80d-b1df55c1797a" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbQueryCommandTree">
      <topicdata name="DbQueryCommandTree" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbQueryCommandTree" />
      <apidata name="DbQueryCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters" />
        <element api="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="2db9e67a-78a5-0af6-5eec-a9da5c8c9023" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbQueryCommandTree">
      <topicdata name="DbQueryCommandTree" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbQueryCommandTree" />
      <apidata name="DbQueryCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="d44fa41b-78d0-9410-aff5-dc0ded6b3152" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbQueryCommandTree">
      <topicdata name="DbQueryCommandTree" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbQueryCommandTree" />
      <apidata name="DbQueryCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters" />
        <element api="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="925ac840-54a0-8468-9761-f9ad35037692" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query">
      <topicdata group="api" />
      <apidata name="Query" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Query">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbQueryCommandTree" ref="true" />
      </containers>
      <file name="f0e20b20-4be8-0703-024e-4b150940a369" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbRefExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbRefExpression" />
      <apidata name="DbRefExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="8009d889-620e-0421-6154-84811df189e1" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbRefExpression">
      <topicdata name="DbRefExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbRefExpression" />
      <apidata name="DbRefExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbRefExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbRefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbRefExpression.EntitySet" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="cee2f964-45b2-6b1c-3b00-cd5ab4bf4fa6" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbRefExpression">
      <topicdata name="DbRefExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbRefExpression" />
      <apidata name="DbRefExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbRefExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbRefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="220b5ec2-4547-1d05-e57e-f0c727c9b231" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbRefExpression">
      <topicdata name="DbRefExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbRefExpression" />
      <apidata name="DbRefExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbRefExpression.EntitySet" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="40d709b5-d742-e9fd-2e06-36f26479eba7" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbRefExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbRefExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbRefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbRefExpression" ref="true" />
      </containers>
      <file name="7fc9e3af-96f8-18bd-7b54-85e002b7e6d2" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbRefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbRefExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbRefExpression" ref="true" />
      </containers>
      <file name="82a6a246-95fc-56c8-38e3-7cf188ad856d" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbRefExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbRefExpression" ref="true" />
      </containers>
      <file name="7bffb6e6-464f-68a5-7d48-5fffd000a129" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbRefExpression.EntitySet">
      <topicdata group="api" />
      <apidata name="EntitySet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntitySet">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Metadata.Edm.EntitySet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbRefExpression" ref="true" />
      </containers>
      <file name="7df35274-dd41-0155-db1e-4f4c0797e59a" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbRefKeyExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbRefKeyExpression" />
      <apidata name="DbRefKeyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="690b39ef-f2cb-533b-7f6b-f4c2da7c0e57" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbRefKeyExpression">
      <topicdata name="DbRefKeyExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />
      <apidata name="DbRefKeyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="59c0549e-8c4b-4566-cf99-f35c013cb865" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbRefKeyExpression">
      <topicdata name="DbRefKeyExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />
      <apidata name="DbRefKeyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="3b0c2976-55ac-a4b2-4e4a-7f69c73b25d3" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbRefKeyExpression">
      <topicdata name="DbRefKeyExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />
      <apidata name="DbRefKeyExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="52163410-4495-3e67-6aa4-845153df711e" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbRefKeyExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbRefKeyExpression" ref="true" />
      </containers>
      <file name="4f1be3e6-ec4f-c105-10ca-85d712ac9180" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbRefKeyExpression" ref="true" />
      </containers>
      <file name="3dd4bf70-cf88-536b-fd95-4c0f5db6ed44" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbRefKeyExpression" ref="true" />
      </containers>
      <file name="8408ebfc-2ac3-c8ec-0c49-75b1367f82dd" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />
      <apidata name="DbRelationshipNavigationExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="7886bb3a-005a-a815-0793-dba8d53ee6c0" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression">
      <topicdata name="DbRelationshipNavigationExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />
      <apidata name="DbRelationshipNavigationExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateFrom" />
        <element api="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateTo" />
        <element api="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigationSource" />
        <element api="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Relationship" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="ab85988d-8fbb-a248-641b-839aa95f8539" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression">
      <topicdata name="DbRelationshipNavigationExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />
      <apidata name="DbRelationshipNavigationExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="eb478288-36b4-3de8-e601-bdb5a151d504" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression">
      <topicdata name="DbRelationshipNavigationExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />
      <apidata name="DbRelationshipNavigationExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateFrom" />
        <element api="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateTo" />
        <element api="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigationSource" />
        <element api="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Relationship" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="b14bd18f-918e-3250-5bcb-03cd9de9d6b7" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" ref="true" />
      </containers>
      <file name="7ad02052-da8e-363f-723f-953a07d97921" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" ref="true" />
      </containers>
      <file name="3c1e322d-c276-9cfb-157c-1744f2e4939b" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" ref="true" />
      </containers>
      <file name="d81251cc-f5b3-3f49-d3f3-90b94deaeed3" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateFrom">
      <topicdata group="api" />
      <apidata name="NavigateFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigateFrom">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Metadata.Edm.RelationshipEndMember" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" ref="true" />
      </containers>
      <file name="f55a18b0-c123-a8e1-dc17-d92574fb7e21" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateTo">
      <topicdata group="api" />
      <apidata name="NavigateTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigateTo">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Metadata.Edm.RelationshipEndMember" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" ref="true" />
      </containers>
      <file name="b4f046ea-156a-38f0-0d5c-5daa9bfde35c" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigationSource">
      <topicdata group="api" />
      <apidata name="NavigationSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigationSource">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" ref="true" />
      </containers>
      <file name="6bc9acb5-ccb4-4052-ddbf-f0e1c9bfb393" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Relationship">
      <topicdata group="api" />
      <apidata name="Relationship" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Relationship">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Metadata.Edm.RelationshipType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" ref="true" />
      </containers>
      <file name="66fdc787-79a5-78fd-3000-ec7618ee6d3d" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbScanExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbScanExpression" />
      <apidata name="DbScanExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="61d24b2f-150d-d03d-de9b-893a382fb9ef" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbScanExpression">
      <topicdata name="DbScanExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbScanExpression" />
      <apidata name="DbScanExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbScanExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbScanExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbScanExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbScanExpression.Target" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="9f5a4db4-1f7c-dead-5823-b29dfe1fcbdb" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbScanExpression">
      <topicdata name="DbScanExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbScanExpression" />
      <apidata name="DbScanExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbScanExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbScanExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbScanExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="20629bbd-a291-db35-c61d-a5450215b742" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbScanExpression">
      <topicdata name="DbScanExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbScanExpression" />
      <apidata name="DbScanExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbScanExpression.Target" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="35c301b0-9084-5e88-ec34-859848f1844b" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbScanExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbScanExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbScanExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbScanExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbScanExpression" ref="true" />
      </containers>
      <file name="c2c3a37f-6227-aadc-1b9f-8658a25cd03f" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbScanExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbScanExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbScanExpression" ref="true" />
      </containers>
      <file name="9a2f5306-48f7-ea87-1c9f-0ba1dde16333" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbScanExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbScanExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbScanExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbScanExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbScanExpression" ref="true" />
      </containers>
      <file name="15803c04-b693-3f5f-4f48-01cb89784834" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbScanExpression.Target">
      <topicdata group="api" />
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Target">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Metadata.Edm.EntitySetBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbScanExpression" ref="true" />
      </containers>
      <file name="6fa77778-8202-6c4b-3d9b-c78806e6b150" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbSetClause">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbSetClause" />
      <apidata name="DbSetClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbModificationClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="fd201980-8705-95ab-4ed0-8e9cfe846454" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbSetClause">
      <topicdata name="DbSetClause" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbSetClause" />
      <apidata name="DbSetClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbSetClause.Property" />
        <element api="P:System.Data.Common.CommandTrees.DbSetClause.Value" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="257c2478-3e60-26b0-10b9-86e31334f0c1" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbSetClause">
      <topicdata name="DbSetClause" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbSetClause" />
      <apidata name="DbSetClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="8a8d8f2c-e0ac-97dd-702e-dda7d9c4826b" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbSetClause">
      <topicdata name="DbSetClause" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbSetClause" />
      <apidata name="DbSetClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbSetClause.Property" />
        <element api="P:System.Data.Common.CommandTrees.DbSetClause.Value" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="70bfd548-b455-d546-c55c-45858a90aedf" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbSetClause.Property">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Property">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSetClause" ref="true" />
      </containers>
      <file name="c74d71fe-80b0-1a6c-96bc-f77dc7ab1e68" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbSetClause.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSetClause" ref="true" />
      </containers>
      <file name="10affb1c-65ee-a77c-b7f2-81c9f9e8b7d9" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbSkipExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbSkipExpression" />
      <apidata name="DbSkipExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="e2d5b903-28ca-43fb-b5e5-beff3db0367e" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbSkipExpression">
      <topicdata name="DbSkipExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbSkipExpression" />
      <apidata name="DbSkipExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbSkipExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbSkipExpression.Count" />
        <element api="P:System.Data.Common.CommandTrees.DbSkipExpression.Input" />
        <element api="P:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="a84641e9-508d-643e-2dbf-c6c79c72c10c" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbSkipExpression">
      <topicdata name="DbSkipExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbSkipExpression" />
      <apidata name="DbSkipExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbSkipExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="00912fa7-e4b4-e609-995e-b8e65302c917" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbSkipExpression">
      <topicdata name="DbSkipExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbSkipExpression" />
      <apidata name="DbSkipExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbSkipExpression.Count" />
        <element api="P:System.Data.Common.CommandTrees.DbSkipExpression.Input" />
        <element api="P:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="26a14382-83ee-e530-28d8-fd99f0157870" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbSkipExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbSkipExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSkipExpression" ref="true" />
      </containers>
      <file name="c2b9600a-7ed0-7483-1224-33dcd9abf829" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbSkipExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSkipExpression" ref="true" />
      </containers>
      <file name="43bfd42b-8786-2f29-9107-fbf69feddca2" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbSkipExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSkipExpression" ref="true" />
      </containers>
      <file name="d4874f25-7769-430c-1cc5-e7d23d1ea0d4" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbSkipExpression.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSkipExpression" ref="true" />
      </containers>
      <file name="822786b6-e2d8-9c07-bdeb-daa45b719fa2" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbSkipExpression.Input">
      <topicdata group="api" />
      <apidata name="Input" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Input">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSkipExpression" ref="true" />
      </containers>
      <file name="d5fb4fc2-7967-ccc4-d16c-1ed258ffcb6a" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder">
      <topicdata group="api" />
      <apidata name="SortOrder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SortOrder">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Data.Common.CommandTrees.DbSortClause" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSkipExpression" ref="true" />
      </containers>
      <file name="6ac445ac-72b4-392d-1091-70951f3d5ad9" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbSortClause">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbSortClause" />
      <apidata name="DbSortClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="f0ac2d6a-b5cf-00a9-12a8-fecb39e283e3" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbSortClause">
      <topicdata name="DbSortClause" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbSortClause" />
      <apidata name="DbSortClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbSortClause.Ascending" />
        <element api="P:System.Data.Common.CommandTrees.DbSortClause.Collation" />
        <element api="P:System.Data.Common.CommandTrees.DbSortClause.Expression" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="ee37417a-e84c-3f36-f320-eabedca1edf6" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbSortClause">
      <topicdata name="DbSortClause" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbSortClause" />
      <apidata name="DbSortClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="427cd6b6-c7dc-ea07-1bb6-ca7c98823cd0" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbSortClause">
      <topicdata name="DbSortClause" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbSortClause" />
      <apidata name="DbSortClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbSortClause.Ascending" />
        <element api="P:System.Data.Common.CommandTrees.DbSortClause.Collation" />
        <element api="P:System.Data.Common.CommandTrees.DbSortClause.Expression" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="e93ca4d1-6996-a0c7-a138-c7f50a161e76" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbSortClause.Ascending">
      <topicdata group="api" />
      <apidata name="Ascending" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Ascending">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSortClause" ref="true" />
      </containers>
      <file name="194ca799-eec4-d14c-7707-1528eb58ccde" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbSortClause.Collation">
      <topicdata group="api" />
      <apidata name="Collation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Collation">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSortClause" ref="true" />
      </containers>
      <file name="1053ec39-b779-b12a-b3f9-e03a2179e6f5" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbSortClause.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Expression">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSortClause" ref="true" />
      </containers>
      <file name="a6171039-e574-55f7-5832-5a430f87ba8c" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbSortExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbSortExpression" />
      <apidata name="DbSortExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="36624ac6-edab-0259-4789-55de4e9941af" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbSortExpression">
      <topicdata name="DbSortExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbSortExpression" />
      <apidata name="DbSortExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbSortExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbSortExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbSortExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbSortExpression.Input" />
        <element api="P:System.Data.Common.CommandTrees.DbSortExpression.SortOrder" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="ccf2e77f-dca4-d888-9c55-49ac9515a05e" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbSortExpression">
      <topicdata name="DbSortExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbSortExpression" />
      <apidata name="DbSortExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbSortExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbSortExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbSortExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="4fdd5f46-31bf-337f-3102-7f2f79e0b538" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbSortExpression">
      <topicdata name="DbSortExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbSortExpression" />
      <apidata name="DbSortExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbSortExpression.Input" />
        <element api="P:System.Data.Common.CommandTrees.DbSortExpression.SortOrder" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="0fd209e2-e290-0ae1-ad1c-7db6015eee47" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbSortExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbSortExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbSortExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbSortExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
      </containers>
      <file name="340e96a0-f30c-0e0b-6898-00240158adeb" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbSortExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbSortExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
      </containers>
      <file name="791fa4bf-007a-ebf3-5901-76a476f82f8e" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbSortExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbSortExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbSortExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbSortExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
      </containers>
      <file name="e0b70de3-eee0-9deb-1bd5-586db72af17c" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbSortExpression.Input">
      <topicdata group="api" />
      <apidata name="Input" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Input">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
      </containers>
      <file name="7229e707-f218-646a-ffa0-d2ec690b0f2d" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbSortExpression.SortOrder">
      <topicdata group="api" />
      <apidata name="SortOrder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SortOrder">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Data.Common.CommandTrees.DbSortClause" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
      </containers>
      <file name="56fd1699-db90-9e9a-8852-d6ef1deb14ae" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbTreatExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbTreatExpression" />
      <apidata name="DbTreatExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="0b0ed774-14f2-612c-05a7-16c4e63c11af" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbTreatExpression">
      <topicdata name="DbTreatExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbTreatExpression" />
      <apidata name="DbTreatExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbTreatExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbTreatExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbTreatExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="192386a6-502c-9fd7-cf64-1cb517fe92b3" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbTreatExpression">
      <topicdata name="DbTreatExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbTreatExpression" />
      <apidata name="DbTreatExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbTreatExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbTreatExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbTreatExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="fde3a882-d415-0592-e949-0ff285d9dd27" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbTreatExpression">
      <topicdata name="DbTreatExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbTreatExpression" />
      <apidata name="DbTreatExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="880e7aff-bab8-cabd-f6bc-a0ee5525b28a" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbTreatExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbTreatExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbTreatExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbTreatExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbTreatExpression" ref="true" />
      </containers>
      <file name="54fbe07e-38f5-b0af-9833-23ece347a153" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbTreatExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbTreatExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbTreatExpression" ref="true" />
      </containers>
      <file name="6a9fbc6b-e76c-c680-aa6a-8e9bfd971cc6" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbTreatExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbTreatExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbTreatExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbTreatExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbTreatExpression" ref="true" />
      </containers>
      <file name="3496ab15-c6ce-5ce1-1a18-83dc6f1d28d2" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbUnaryExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbUnaryExpression" />
      <apidata name="DbUnaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Common.CommandTrees.DbNotExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbCastExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbIsNullExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbIsOfExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbOfTypeExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbTreatExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbEntityRefExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbRefKeyExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbDistinctExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbElementExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbRefExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbDerefExpression" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="a6ae1e26-e568-9eed-74ee-cc7f815bd8bd" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbUnaryExpression">
      <topicdata name="DbUnaryExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbUnaryExpression" />
      <apidata name="DbUnaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbUnaryExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="240d1cad-f58f-0361-7836-200f32245d43" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbUnaryExpression">
      <topicdata name="DbUnaryExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbUnaryExpression" />
      <apidata name="DbUnaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbUnaryExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="1f240448-d0ab-76fa-af65-375f8958dcf2" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbUnaryExpression">
      <topicdata name="DbUnaryExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbUnaryExpression" />
      <apidata name="DbUnaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="9690770b-2bea-344e-d039-9cef9e1751d0" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbUnaryExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbUnaryExpression" allInherited="true" parentTopicId="Overload:System.Data.Common.CommandTrees.DbExpression.Accept" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" />
      </containers>
      <file name="dc160026-1ef3-4e9a-98e8-5c8434422213" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument">
      <topicdata group="api" />
      <apidata name="Argument" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Argument">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbUnaryExpression" ref="true" />
      </containers>
      <file name="97c2046a-8b3c-b4a9-d6ea-c9672ea2b104" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbUnionAllExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbUnionAllExpression" />
      <apidata name="DbUnionAllExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbBinaryExpression" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="93c768f2-4429-84f5-fe89-9c26f2ac9011" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbUnionAllExpression">
      <topicdata name="DbUnionAllExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />
      <apidata name="DbUnionAllExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
        <element api="Overload:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="89206b98-58c5-9586-a1b2-4c60504a3e1a" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbUnionAllExpression">
      <topicdata name="DbUnionAllExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />
      <apidata name="DbUnionAllExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="91c69bd7-e12d-684d-cab7-fc4f65ae153b" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbUnionAllExpression">
      <topicdata name="DbUnionAllExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />
      <apidata name="DbUnionAllExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
        <element api="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="f0dcedba-4ab4-6ce9-847a-e2d6da3f5e63" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbUnionAllExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbUnionAllExpression" ref="true" />
      </containers>
      <file name="827150bd-3436-067c-f9f9-6a5c9be0036d" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbUnionAllExpression" ref="true" />
      </containers>
      <file name="4aff4728-ec43-440c-91be-fe7026824f7a" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbUnionAllExpression" ref="true" />
      </containers>
      <file name="98ee99bc-c454-f190-04d6-7524733e85f6" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbUpdateCommandTree">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbUpdateCommandTree" />
      <apidata name="DbUpdateCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbModificationCommandTree" ref="true" />
          <type api="T:System.Data.Common.CommandTrees.DbCommandTree" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="9ce7c514-4bf4-0119-e57a-d22d18a62a2d" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbUpdateCommandTree">
      <topicdata name="DbUpdateCommandTree" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbUpdateCommandTree" />
      <apidata name="DbUpdateCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters" />
        <element api="P:System.Data.Common.CommandTrees.DbModificationCommandTree.Target" />
        <element api="P:System.Data.Common.CommandTrees.DbUpdateCommandTree.Predicate" />
        <element api="P:System.Data.Common.CommandTrees.DbUpdateCommandTree.Returning" />
        <element api="P:System.Data.Common.CommandTrees.DbUpdateCommandTree.SetClauses" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="f611bb7c-e9f9-170d-cd8b-840a1d154dae" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbUpdateCommandTree">
      <topicdata name="DbUpdateCommandTree" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbUpdateCommandTree" />
      <apidata name="DbUpdateCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="cbe8f341-9139-41f8-0e8a-cb6896cdcb1d" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbUpdateCommandTree">
      <topicdata name="DbUpdateCommandTree" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbUpdateCommandTree" />
      <apidata name="DbUpdateCommandTree" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters" />
        <element api="P:System.Data.Common.CommandTrees.DbModificationCommandTree.Target" />
        <element api="P:System.Data.Common.CommandTrees.DbUpdateCommandTree.Predicate" />
        <element api="P:System.Data.Common.CommandTrees.DbUpdateCommandTree.Returning" />
        <element api="P:System.Data.Common.CommandTrees.DbUpdateCommandTree.SetClauses" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="dee9fc04-7770-a257-56f4-583cb53d9cc6" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbUpdateCommandTree.Predicate">
      <topicdata group="api" />
      <apidata name="Predicate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Predicate">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbUpdateCommandTree" ref="true" />
      </containers>
      <file name="172d2809-713e-d3a2-1e92-c3fafa1f77b3" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbUpdateCommandTree.Returning">
      <topicdata group="api" />
      <apidata name="Returning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Returning">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbUpdateCommandTree" ref="true" />
      </containers>
      <file name="42f2519d-0f94-df81-6efd-d6388011228e" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbUpdateCommandTree.SetClauses">
      <topicdata group="api" />
      <apidata name="SetClauses" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SetClauses">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Data.Common.CommandTrees.DbModificationClause" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbUpdateCommandTree" ref="true" />
      </containers>
      <file name="733ef965-5ae8-d433-6a92-be7f7180b16c" />
    </api>
    <api id="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
      <apidata name="DbVariableReferenceExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="5b9b0853-8657-e54c-4336-ea22d61738da" />
    </api>
    <api id="AllMembers.T:System.Data.Common.CommandTrees.DbVariableReferenceExpression">
      <topicdata name="DbVariableReferenceExpression" group="list" subgroup="members" typeTopicId="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
      <apidata name="DbVariableReferenceExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbVariableReferenceExpression.VariableName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="0887df73-5088-14ac-c7f7-67066778f774" />
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.DbVariableReferenceExpression">
      <topicdata name="DbVariableReferenceExpression" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
      <apidata name="DbVariableReferenceExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept">
          <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
          <element api="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
          <element api="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="13373958-d05e-0333-6015-31ea96b2dbb1" />
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.DbVariableReferenceExpression">
      <topicdata name="DbVariableReferenceExpression" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
      <apidata name="DbVariableReferenceExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" />
        <element api="P:System.Data.Common.CommandTrees.DbExpression.ResultType" />
        <element api="P:System.Data.Common.CommandTrees.DbVariableReferenceExpression.VariableName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
      </containers>
      <file name="5e4cff49-4fbe-b49b-30b5-cf20ccfa0b69" />
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept">
      <topicdata name="Accept" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
      <apidata name="Accept" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
        <element api="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
        <element api="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" ref="true" />
      </containers>
      <file name="c96f179a-87be-083f-bbc3-84de8b6315c6" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" ref="true" />
      </containers>
      <file name="015e1d62-ff45-a27f-17f5-c7a12991f227" />
    </api>
    <api id="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResultType" />
      </templates>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" ref="true">
            <specialization>
              <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResultType" index="0" api="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" ref="true" />
      </containers>
      <file name="801a9614-462d-283d-1341-d6029db51032" />
    </api>
    <api id="P:System.Data.Common.CommandTrees.DbVariableReferenceExpression.VariableName">
      <topicdata group="api" />
      <apidata name="VariableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VariableName">
        <attributes>
          <attribute>
            <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
            <argument>
              <type api="T:System.String" ref="true" />
              <value>Performance critical to inline this type of method across NGen image boundaries</value>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees" />
        <type api="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" ref="true" />
      </containers>
      <file name="2b7b99d9-aaa4-8a06-979e-b3c1b82bba0a" />
    </api>
  </apis>
</reflection>