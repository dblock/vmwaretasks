<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SandcastleBuilderGUI</name>
    </assembly>
    <members>
        <member name="T:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg">
            <summary>
            This form is used determine the state of the current MS Help Viewer
            content and offer options to install, launch, or remove it.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.#ctor(SandcastleBuilder.Utils.SandcastleProject)">
            <summary>
            Constructor
            </summary>
            <param name="currentProject">The current project</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.actionThread_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            This performs the requested task
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.actionThread_ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            This updates the status as the thread runs
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.actionThread_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            This enables the form when the thread finishes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close this form
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.LaunchMSHelpViewerDlg_Load(System.Object,System.EventArgs)">
            <summary>
            This is used to determine the state of the help content and set
            the form options.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the selected action
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.ThreadAction">
            <summary>
            This is used to tell the thread what to do
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.ThreadAction.OpenCurrent">
            <summary>Open the current content</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.ThreadAction.Install">
            <summary>Install content from the last build and open it</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.ThreadAction.Remove">
            <summary>Remove the current content</summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.ThreadState">
            <summary>
            This is used to indicate the current state of the thread
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.ThreadState.RemovingOldContent">
            <summary>Removing old content prior to installing new content</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.ThreadState.RemovingContent">
            <summary>Content is being removed</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.ThreadState.InstallingContent">
            <summary>Content is being installed</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.LaunchMSHelpViewerDlg.ThreadState.OpeningContent">
            <summary>Content is being opened</summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow">
            <summary>
            This form is used to edit the conceptual content items
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.BaseContentEditor">
            <summary>
            This is used as the base class for the Sandcastle Builder content
            editors.
            </summary>
            <remarks>There are probably several different ways to do this that are
            better but this is quick and dirty and it works.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.BaseContentEditor.Save">
            <summary>
            Save the content of the window using its current filename
            </summary>
            <returns>True if successful, false if not successful</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.BaseContentEditor.SaveAs">
            <summary>
            Save the content of the window using a different filename
            </summary>
            <returns>True if successful, false if not successful</returns>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.BaseContentEditor.IsDirty">
            <summary>
            This returns the dirty state of the document if it supports saving
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.BaseContentEditor.CanClose">
            <summary>
            Returns true if the window can be closed or false if something
            prevents it from allowing the close to occur.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.BaseContentEditor.CanSaveContent">
            <summary>
            This is used to see if the active document allows its content to be
            saved.
            </summary>
            <returns>Returns true if it supports saving its content or false
            if it does not.</returns>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.BaseContentEditor.IsContentDocument">
            <summary>
            This is used to see if the editor is a document type that should be
            saved prior to doing a build.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.BaseContentEditor.ClipboardDataHandler">
            <summary>
            This is used to pass a delegate on the clipboard used to obtain
            data that is too complex to serialize directly to the clipboard.
            </summary>
            <returns>The actual object that is to be pasted from the
            clipboard.</returns>
            <remarks>The method passed in the delegate must be a static method.
            If not, the containing type has to be serializable and it probably
            isn't cos its too complex and the whole point of this is to work
            around that problem.  Yes, it is a hack but it works.</remarks>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.#ctor(SandcastleBuilder.Utils.FileItem)">
            <summary>
            Constructor
            </summary>
            <param name="fileItem">The project file item to edit</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.Save(System.String)">
            <summary>
            Save the topic to a new filename
            </summary>
            <param name="filename">The new filename</param>
            <returns>True if saved successfully, false if not</returns>
            <overloads>There are two overloads for this method</overloads>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.LoadTopics(SandcastleBuilder.Utils.ConceptualContent.Topic)">
            <summary>
            Load the tree view with the topics and set the form up to edit them
            </summary>
            <param name="selectedEntry">If not null, the node containing the
            specified entry is set as the selected node.  If null, the first
            node is selected.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.AddChildren(SandcastleBuilder.Utils.ConceptualContent.TopicCollection,System.Windows.Forms.TreeNode)">
            <summary>
            Add child nodes to the tree view recursively
            </summary>
            <param name="children">The collection of entries to add</param>
            <param name="root">The root to which they are added</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.UpdateControlStatus">
            <summary>
            This is used to update the state of the form controls
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.UpdateDefaultAndApiNodeImages">
            <summary>
            This is used to update the tree node images for the default and
            API insertion point nodes.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.GetPersistString">
            <summary>
            Return the string used to store the editor state
            </summary>
            <returns>A string containing the type name and filename</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.Save">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.SaveAs">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.topics_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            This is used to mark the file as dirty when the collection changes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.ContentLayoutWindow_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            This is used to prompt for save when closing
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.pgProps_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Update the node text when a property changes if it affects the
            node text.
            </summary>
            <param name="s">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.txtFindId_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Find a topic by ID when Enter is hit in the text box
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.tsbDefaultTopic_Click(System.Object,System.EventArgs)">
            <summary>
            Set the selected node as the default topic
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The sender of the event</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.miMarkAsMSHVRoot_Click(System.Object,System.EventArgs)">
            <summary>
            Mark the selected topic as the MS Help Viewer root content container
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The sender of the event</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.ApiInsertionPoint_Click(System.Object,System.EventArgs)">
            <summary>
            Set or clear the insertion point
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The sender of the event</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.tsbMoveItem_Click(System.Object,System.EventArgs)">
            <summary>
            Move the selected node up or down within the group
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The sender of the event</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.AddExistingTopicFile_Click(System.Object,System.EventArgs)">
            <summary>
            Add an existing topic file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.templateFile_OnClick(System.Object,System.EventArgs)">
            <summary>
            Add a new item based on the selected template file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.AddTopicFile(System.String,System.Boolean)">
            <summary>
            Add a new topic file
            </summary>
            <param name="filename">The filename of the topic to add</param>
            <param name="addAsChild">True to add as a child of the selected
            node or false to add it as a sibling.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.tsbAddTopic_ButtonClick(System.Object,System.EventArgs)">
            <summary>
            Add an empty container node that is not associated with any topic
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.AddAllTopicsInFolder_Click(System.Object,System.EventArgs)">
            <summary>
            Add all topic files found in the selected folder
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.miAssociateTopic_Click(System.Object,System.EventArgs)">
            <summary>
            Associate a topic file with the selected node
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.miClearTopic_Click(System.Object,System.EventArgs)">
            <summary>
            Clear the topic associated with the selected node
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks>When cleared, the node becomes an container node</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.miRefreshAssociations_Click(System.Object,System.EventArgs)">
            <summary>
            Refresh the topic file associations to reflect changes made to the
            project elsewhere (i.e. in the Project Explorer).
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.tsbDeleteTopic_Click(System.Object,System.EventArgs)">
            <summary>
            Delete a content item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.miCopyAsLink_Click(System.Object,System.EventArgs)">
            <summary>
            Copy as a link to the Windows clipboard for pasting into a topic
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.GetClipboardData">
            <summary>
            This is used to return the actual object to paste from the Windows
            clipboard
            </summary>
            <returns>The object to paste</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.tsbCutCopy_Click(System.Object,System.EventArgs)">
            <summary>
            Cut or copy the selected node to the internal clipboard
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks><b>NOTE:</b> Copying within the file is currently not
            enabled.  Copying would require cloning the topic, its children,
            and all related properties.  Copying a topic may not be of any use
            anyway since the IDs have to be unique.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.tsbPaste_ButtonClick(System.Object,System.EventArgs)">
            <summary>
            Paste the node from the internal clipboard
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.tsbEditTopic_Click(System.Object,System.EventArgs)">
            <summary>
            Edit the selected topic file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.miSortTopics_Click(System.Object,System.EventArgs)">
            <summary>
            Sort the topics by display title
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.tsbHelp_Click(System.Object,System.EventArgs)">
            <summary>
            View help for this editor
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.txtFindId_DragEnter(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This displays the drop cursor when the mouse drags into
            the Find textbox.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.txtFindId_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This handles the drop operation for the Find textbox
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.tvContent_ItemDrag(System.Object,System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            This initiates drag and drop for the tree view nodes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.tvContent_DragOver(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This validates the drop target during the drag operation
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.tvContent_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This handles the drop operation for the tree view
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.tvContent_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Update the state of the controls based on the current selection
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.tvContent_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This is used to select the clicked node and display the context
            menu when a right click occurs.  This ensures that the correct
            node is affected by the selected operation.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.tvContent_NodeMouseDoubleClick(System.Object,System.Windows.Forms.TreeNodeMouseClickEventArgs)">
            <summary>
            Edit the node if it is double-clicked
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.tvContent_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle shortcut keys in the tree view
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.CanClose">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.CanSaveContent">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.ContentLayoutWindow.IsContentDocument">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException">
            <summary>
            This exception class is thrown to report problems with the Help Library
            Manager operation.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.Success">
            <summary>The operation was successful.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.HelpLibraryManagerNotFound">
            <summary>The Help Library Manager was not found.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.HelpLibraryManagerAlreadyRunning">
            <summary>The Help Library Manager is already running.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.LocalStoreNotInitialized">
            <summary>The local store is not initialized.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.MissingCommandLineArgument">
            <summary>A required command line argument is missing.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.CatalogNotInstalled">
            <summary>The catalog is not installed.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.UnknownError">
            <summary>An unknown error occurred in the Help Library Manager launcher.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.InvalidCmdArgs">
            <summary>One or more command line arguments was missing or invalid.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.MissingOrInvalidAppConfig">
            <summary>The application configuration file for HLM was missing or invalid.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnMachineLock">
            <summary>The help content store could not be locked for update.  This error typically
            occurs when the content is locked for update by another process.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.MissingCatalogInfo">
            <summary>Files required to install content for a new product were not found.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.InvalidCatalogInfo">
            <summary>Files required to install content for a new product were invalid.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnSettingLocalStore">
            <summary>The path specified for the /content switch is invalid.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.InvalidHelpLocation">
            <summary>The local content store is in an invalid state.  This error occurs when the
            directory permissions do not allow writing, or a required file is missing from the
            directory.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.NoBooksToInstall">
            <summary>The arguments passed to HLM did not result in content being installed or removed.
            This can occur when the content is already installed or has already been removed.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnSilentUninstall">
            <summary>The removal of content failed.  Detailed information can be found in the event log
            and in the installation log.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnSilentInstall">
            <summary>The installation of content failed.  Detailed information can be found in the event
            log and in the installation log.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.NonAdminSetsLocalStoreOnSilentMode">
            <summary>A non-admin user is trying to initialize the store using the /silent switch.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.Others">
            <summary>An unknown error occurred.</summary>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="errorCode">The error code associated with the exception</param>
            <overloads>There are three overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.#ctor(System.Int32,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="errorCode">The error code associated with the exception</param>
            <param name="additionalInfo">Additional information for the error message</param>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.ErrorMessageForCode(System.Int32)">
            <summary>
            Return a descriptive error message for the specified error code
            </summary>
            <param name="code">The error code</param>
            <returns>A descriptive error message for the error code</returns>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.ErrorCode">
            <summary>
            This read-only property returns the error code
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.SelectGacEntriesDlg">
            <summary>
            This form is used to let the user select the GAC entries to add as
            project references.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SelectGacEntriesDlg.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SelectGacEntriesDlg.SelectGacEntriesDlg_Activated(System.Object,System.EventArgs)">
            <summary>
            Load the GAC list when activated
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.SelectGacEntriesDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SelectGacEntriesDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SelectGacEntriesDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.SelectGacEntriesDlg.SelectedEntries">
            <summary>
            This is used to return the list of selected references
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.OutputWindow">
            <summary>
            This form is used to contain and view the build output
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.OutputWindow.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.OutputWindow.TransformLogFile(System.String,System.Boolean)">
            <summary>
            This is used to transform the log file from XML to HTML for viewing
            </summary>
            <param name="logFile">The log file to transform</param>
            <param name="filter">True to filter for warnings and errors only or
            false to include all content</param>
            <returns>The HTML representing the transformed log file</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.OutputWindow.tcbViewOutput_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Select the output to view
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.OutputWindow.tsbFilter_Click(System.Object,System.EventArgs)">
            <summary>
            Toggle the warnings and errors filter on and off
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.OutputWindow.tsbPrint_Click(System.Object,System.EventArgs)">
            <summary>
            Print the information in the browser control
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.OutputWindow.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            This is overridden to ignore Ctrl+F4 which closes the window rather
            than hide it when docked as a document.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.OutputWindow.UpdateSettings">
            <summary>
            Update the window settings based on the user preferences
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.OutputWindow.ResetLogViewer">
            <summary>
            Reset the log viewer ready for a new build
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.OutputWindow.ViewBuildOutput">
            <summary>
            View the build output
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.OutputWindow.ViewLogFile(System.String)">
            <summary>
            View the specified log file
            </summary>
            <param name="logFilename">The log file to view</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.OutputWindow.AppendText(System.String)">
            <summary>
            Append text to the build output
            </summary>
            <param name="text">The text to append</param>
            <remarks>A carriage return and line feed are added
            automatically.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.OutputWindow.SetBuildState(System.Boolean)">
            <summary>
            Enable or disable based on the build state
            </summary>
            <param name="isBuilding">True if building, false if not</param>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.OutputWindow.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.OutputWindow.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.OutputWindow.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.OutputWindow.LogFile">
            <summary>
            This is used to get or set the log filename from the last build
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.FindAndReplaceWindow">
            <summary>
            This form is used to handle search and replace in the text editor
            windows.
            </summary>
            <remarks>This is rather crude but it works.  It's the best I could
            do after poking around in the editor code.  It will do for the time
            being even if it isn't the most efficient way of doing it.</remarks>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.FindAndReplaceWindow.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FindAndReplaceWindow.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FindAndReplaceWindow.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FindAndReplaceWindow.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FindAndReplaceWindow.FindActiveDocumentWindow">
            <summary>
            Get the active document window
            </summary>
            <returns>The active topic editor window or null if not found</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FindAndReplaceWindow.ShowReplaceControls(System.Boolean)">
            <summary>
            This is used to show or hide the Replace controls
            </summary>
            <param name="show">True to show them, false to hide them</param>
            <returns>The prior state of the controls (false for hidden,
            true for visible).</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FindAndReplaceWindow.btnFind_Click(System.Object,System.EventArgs)">
            <summary>
            Find the selected text
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FindAndReplaceWindow.btnReplace_Click(System.Object,System.EventArgs)">
            <summary>
            Find and replace the next occurrence of the search text
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FindAndReplaceWindow.btnReplaceAll_Click(System.Object,System.EventArgs)">
            <summary>
            Find and replace all occurrences of the search text
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.FindAndReplaceWindow.FindText">
            <summary>
            This is used to get or set the find text
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.FindAndReplaceWindow.ReplaceWith">
            <summary>
            This is used to get or set the replacement text
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.FindAndReplaceWindow.CaseSensitive">
            <summary>
            This is used to get or set whether the search is case-sensitive
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.MainForm">
            <summary>
            This is the main form for the application
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.MainForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="projectToLoad">A default project file to load.  If
            not specified, the most recently used project is loaded if there
            is one.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.DeserializeState(System.String)">
            <summary>
            Deserialize the state of a content pane.
            </summary>
            <param name="persistString">The name of the item being deserialized</param>
            <returns>The dock content if deserialized or null if not.</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.CreateProject(System.String,System.Boolean)">
            <summary>
            Create a new project instance and connect it to the UI
            </summary>
            <param name="projectName">The project filename</param>
            <param name="mustExist">True if it must exist or false if it is
            a new, unnamed project</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.SaveBeforeBuild">
            <summary>
            This is used to save the project and/or document windows prior to
            doing a build.
            </summary>
            <returns>True if successful, false if it fails or is cancelled.</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.CloseProject">
            <summary>
            Close the current project
            </summary>
            <returns>True if the project was closed, false if not</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.UpdateFilenameInfo">
            <summary>
            This is used to update the filename information in the title bar
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.SetUIEnabledState(System.Boolean)">
            <summary>
            This is used to enable or disable the UI elements for the
            build process
            </summary>
            <param name="enabled">True to enable the UI, false to disable
            it</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.UpdateMruList(System.String)">
            <summary>
            Update the MRU list with the specified project filename by
            adding it to the list or making it the most recently used.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.KillWebServer">
            <summary>
             Kill the web server if it is running
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.MainForm_Load(System.Object,System.EventArgs)">
            <summary>
            Load the last used project on startup
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.MainForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Save changes on exit if necessary
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miExit_Click(System.Object,System.EventArgs)">
            <summary>
            Exit the application
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miAbout_Click(System.Object,System.EventArgs)">
            <summary>
            Show information about the application and contact info
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miHelp_Click(System.Object,System.EventArgs)">
            <summary>
            View the help file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.project_Modified(System.Object,System.EventArgs)">
            <summary>
            This updates the state of the form when the project is modified.
            It also updates the Sandcastle path in the component configuration
            form.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.buildProcess_BuildStepChanged(System.Object,SandcastleBuilder.Utils.BuildEngine.BuildProgressEventArgs)">
            <summary>
            This is called by the build process thread to update the main
            window with the current build step.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.buildProcess_BuildProgress(System.Object,SandcastleBuilder.Utils.BuildEngine.BuildProgressEventArgs)">
            <summary>
            This is called by the build process thread to update the main
            window with information about its progress.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miNewProject_Click(System.Object,System.EventArgs)">
            <summary>
            Start a new help project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miNewFromOtherFormat_Click(System.Object,System.EventArgs)">
            <summary>
            Create a new project from a project file that is in a different
            format (i.e. SHFB 1.7.0.0 or earlier or NDoc 1.x)
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miOpenProject_Click(System.Object,System.EventArgs)">
            <summary>
            Open an existing help project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miCloseProject_Click(System.Object,System.EventArgs)">
            <summary>
            Close the current project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miRecentProjects_DropDownOpening(System.Object,System.EventArgs)">
            <summary>
            Build the MRU list when the Recent Projects menu opens
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miProject_Click(System.Object,System.EventArgs)">
            <summary>
            This is used to load a project from the MRU List
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.tcbConfig_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Set the active configuration for the build
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.tcbPlatform_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Set the active platform for the build
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miBuildProject_Click(System.Object,System.EventArgs)">
            <summary>
            Build the help file using the current project settings
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miCancelBuild_Click(System.Object,System.EventArgs)">
            <summary>
            Cancel the current build process
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miClearOutput_Click(System.Object,System.EventArgs)">
            <summary>
            Clear the last build information from the output window
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miCleanOutput_Click(System.Object,System.EventArgs)">
            <summary>
            Clean the output and working folders by deleting all files from
            them.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miUserPreferences_Click(System.Object,System.EventArgs)">
            <summary>
            Modify user preferences that are unrelated to the project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event argumenst</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.ctxViewHelpMenu_Opening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Enable or disable the viewing options based on the current
            project's help file format setting
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event argumenst</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miViewHelpFile_Click(System.Object,System.EventArgs)">
            <summary>
            View the help file produced by the last build.  Pick the first
            available format.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miViewBuiltHelpFile_Click(System.Object,System.EventArgs)">
            <summary>
            View the last build HTML Help 1 file, MS Help 2 file, or website
            Index.aspx/Index.html page.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miViewMSHelpViewer_Click(System.Object,System.EventArgs)">
            <summary>
            Launch the H3 Viewer to view a Microsoft Help Viewer file.  This
            will optionally install it first.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miViewAspNetWebsite_Click(System.Object,System.EventArgs)">
            <summary>
            Launch the ASP.NET Development Web Server to view the website
            output (Index.aspx).
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miLaunchHlm_Click(System.Object,System.EventArgs)">
            <summary>
            Launch the Help Library Manager for interactive use based on the
            current project's settings.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miOpenHelpAfterBuild_Click(System.Object,System.EventArgs)">
            <summary>
            Toggle the "Open After Build" option
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.dockPanel_ContentAdded(System.Object,WeifenLuo.WinFormsUI.Docking.DockContentEventArgs)">
            <summary>
            Update the command states when content is added
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.dockPanel_ContentRemoved(System.Object,WeifenLuo.WinFormsUI.Docking.DockContentEventArgs)">
            <summary>
            Update the command states when content is removed
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miClose_Click(System.Object,System.EventArgs)">
            <summary>
            Close the active document window/panel
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miCloseAll_Click(System.Object,System.EventArgs)">
            <summary>
            Close all open content editors
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miSave_Click(System.Object,System.EventArgs)">
            <summary>
            Save all changes to the current item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miSaveAs_Click(System.Object,System.EventArgs)">
            <summary>
            Save all changes to the current item under a new name
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miSaveAll_Click(System.Object,System.EventArgs)">
            <summary>
            Save all content editors and the project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miViewProjectExplorer_Click(System.Object,System.EventArgs)">
            <summary>
            View the project explorer window
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miViewProjectProperties_Click(System.Object,System.EventArgs)">
            <summary>
            View the project properties window
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miViewOutput_Click(System.Object,System.EventArgs)">
            <summary>
            View the output from the last build
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miEntityReferences_Click(System.Object,System.EventArgs)">
            <summary>
            Open or show the entity references window
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.miPreviewTopic_Click(System.Object,System.EventArgs)">
            <summary>
            Open or show the preview topic window
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.MainForm_Deactivate(System.Object,System.EventArgs)">
            <summary>
            On deactivation, start watching for changes in the project folder
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.MainForm_Activated(System.Object,System.EventArgs)">
            <summary>
            On activation ask the user as needed about any changes noticed in
            the project folder.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.MainForm.fsw_OnChanged(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            Note changes to the file system
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:SandcastleBuilder.Gui.MainForm.Host">
            <summary>
            Return a reference to the main form
            </summary>
            <remarks>This is used to let the various panes communicate between
            each other.  There are probably several different ways to do this
            that are better but this is quick and dirty and it works.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Gui.MainForm.ProjectExplorer">
            <summary>
            Get a reference to the Project Explorer pane
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.MainForm.ProjectExplorerMenu">
            <summary>
            Get a reference to the Project Explorer menu item
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.MainForm.StatusBarTextLabel">
            <summary>
            Get a reference to the status strip label used for status bar text
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.MainForm.WindowStateSuffix">
            <summary>
            This returns a suffix to use as the project's window state
            settings file suffix.
            </summary>
            <value>Settings files are saved per user.</value>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow">
            <summary>
            This form is used to edit a resource item file.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.#ctor(SandcastleBuilder.Utils.FileItem)">
            <summary>
            Constructor
            </summary>
            <param name="fileItem">The project file item to edit</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.UpdateFont">
            <summary>
            Update the editor font used based on the selected user settings
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.Save(System.String)">
            <summary>
            Save the topic to a new filename
            </summary>
            <param name="filename">The new filename</param>
            <returns>True if saved successfully, false if not</returns>
            <overloads>There are two overloads for this method</overloads>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.LoadResourceItems">
            <summary>
            Load the tree view with the items and set the form up to edit them
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.LoadItemFile(System.String,System.Boolean)">
            <summary>
            This is used to load a resource item file's content into the
            dictionaries used by the editor.
            </summary>
            <param name="filename">The file to load</param>
            <param name="containsOverrides">True if this file contains overrides
            for the Sandcastle items</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.SaveResourceItems">
            <summary>
            Save the modified resource items to the project's resource item file
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.GetPersistString">
            <summary>
            Return the string used to store the editor state
            </summary>
            <returns>A string containing the type name and filename</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.Save">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.SaveAs">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            This is overriden to prompt to save changes if necessary
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.ResourceItemEditorWindow_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            This is used to prompt for save when closing
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.btnRevert_Click(System.Object,System.EventArgs)">
            <summary>
            Revert the selected item to its default value from the Sandcastle
            resource file.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.tvResourceItems_BeforeSelect(System.Object,System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            This updates the resource item value
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.tvResourceItems_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            This loads the selected item ID and text into the editor fields
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.CanClose">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.CanSaveContent">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.ResourceItemEditorWindow.IsContentDocument">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.FileTree">
            <summary>
            This is used to load the <see cref="T:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow"/>
            tree view with the project file tree.
            </summary>
            <remarks>It is also used to handle such tasks as renaming, removing,
            and adding nodes.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FileTree.#ctor(System.Windows.Forms.TreeView)">
            <summary>
            Constructor
            </summary>
            <param name="treeControl">The <see cref="T:System.Windows.Forms.TreeView"/> control
            with which this instance is associated.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FileTree.NodeIconFromFilename(System.String)">
            <summary>
            This is used to get an appropriate icon for the node based on the
            filename.
            </summary>
            <param name="filename">The filename associated with the node</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FileTree.AddNode(System.Windows.Forms.TreeNodeCollection,System.Windows.Forms.TreeNode)">
            <summary>
            Insert the node into the collection in the correct position based
            on its name
            </summary>
            <param name="nodes">The node collection</param>
            <param name="newNode">The new node</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FileTree.LoadTree(System.Collections.ObjectModel.Collection{SandcastleBuilder.Utils.FileItem})">
            <summary>
            Load the tree with the folder and file items
            </summary>
            <param name="files">The folder and file build items from the
            project</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FileTree.RefreshPathsInChildren(System.Windows.Forms.TreeNode)">
            <summary>
            Refresh the path info in each child node due to a renamed parent
            folder node.
            </summary>
            <param name="node">The node in which to refresh the children</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FileTree.RemoveNode(System.Windows.Forms.TreeNode,System.Boolean)">
            <summary>
            Remove the children of a folder node from the project.
            </summary>
            <param name="node">The parent folder node</param>
            <param name="permanently">True to delete the items or false
            to just remove them from the project.</param>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow">
            <summary>
            This form is used to look up code entity references, code snippets,
            tokens, and images, and allows them to be dragged and dropped into
            a topic editor window.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.#ctor(System.Windows.Forms.ToolStripStatusLabel)">
            <summary>
            Constructor
            </summary>
            <param name="statusLabel">The status text label control</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.IndexComments">
            <summary>
            This is the thread method that indexes the comments files
            </summary>
            <remarks>Rather than a partial build, we'll just index the
            comments files.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.Completed(SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache)">
            <summary>
            This is called if indexing completes successfully
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.Failed(System.String)">
            <summary>
            This is called if indexing fails
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.LoadImageInfo">
            <summary>
            This loads the tree view with image file entries from the project
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.LoadTokenInfo">
            <summary>
            This loads the tree view with token file entries from the project
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.EntityReferenceWindow_VisibleChanged(System.Object,System.EventArgs)">
            <summary>
            This loads the content when the window is first made visible
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.EntityReferenceWindow_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            This kills the build thread if it is still running when closed
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.txtFindName_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Find all code entities matching the entered text when Enter is hit
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.tvEntities_BeforeCollapse(System.Object,System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Prevent nodes from being collapsed
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.tvEntities_ItemDrag(System.Object,System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            Allow an item to be dragged and dropped onto a topic window
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.tsbRefresh_Click(System.Object,System.EventArgs)">
            <summary>
            Refresh the currently displayed entity information
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.cboContentType_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Change the type of entities listed in the window
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.tvEntities_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Act like a double-click when Enter is hit on a node
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.tvEntities_NodeMouseDoubleClick(System.Object,System.Windows.Forms.TreeNodeMouseClickEventArgs)">
            <summary>
            If a node is double-clicked, paste it into the active editor window
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.GetClipboardData">
            <summary>
            This is used to return the actual object to paste from the Windows
            clipboard
            </summary>
            <returns>The object to paste</returns>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.CurrentProject">
            <summary>
            This is used to set or get the current project
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.EntityReferenceWindow.EntityType">
            <summary>
            This defines the entity types
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.UserPreferencesDlg">
            <summary>
            This form is used to allow the user to modify help file builder
            preferences unrelated to projects.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.UserPreferencesDlg.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.UserPreferencesDlg.UserPreferencesDlg_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Validate the information and save the results if necessary when
            closing.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.UserPreferencesDlg.btnSelectViewer_Click(System.Object,System.EventArgs)">
            <summary>
            Select a help viewer application
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.UserPreferencesDlg.btnColor_Click(System.Object,System.EventArgs)">
            <summary>
            Select a color
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.UserPreferencesDlg.btnFont_Click(System.Object,System.EventArgs)">
            <summary>
            Select a font
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.UserPreferencesDlg.btnAddFile_Click(System.Object,System.EventArgs)">
            <summary>
            Add a new content editor definition
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.UserPreferencesDlg.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Delete a content editor item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.UserPreferencesDlg.lbContentEditors_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Update the property grid with the selected item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.UserPreferencesDlg.pgProps_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Refresh the list box item when a property changes
            </summary>
            <param name="s">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Gui.UserPreferencesDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.UserPreferencesDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.UserPreferencesDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.PreviewTopicWindow">
            <summary>
            This form is used to preview a topic
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.PreviewTopicWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.PreviewTopicWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.PreviewTopicWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.PreviewTopicWindow.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.PreviewTopicWindow.PreviewTopic(SandcastleBuilder.Utils.SandcastleProject,SandcastleBuilder.Utils.FileItem)">
            <summary>
            Build the conceptual content and preview the specified file
            </summary>
            <param name="project">The current project</param>
            <param name="preview">The file to preview</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.PreviewTopicWindow.BuildConceptualTopics">
            <summary>
            This kicks off the build process in a background thread
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.PreviewTopicWindow.buildProcess_BuildStepChanged(System.Object,SandcastleBuilder.Utils.BuildEngine.BuildProgressEventArgs)">
            <summary>
            This is called by the build process thread to update the main
            window with the current build step.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.PreviewTopicWindow.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            This is overridden to ignore Ctrl+F4 which closes the window rather
            than hide it when docked as a document.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.PreviewTopicWindow.PreviewTopicWindow_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Shut down the build process thread and clean up on exit
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.PreviewTopicWindow.timer_Tick(System.Object,System.EventArgs)">
            <summary>
            When the build finishes, load the topic if it was built
            successfully or view the log if the build failed.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks>We have to wait for the thread to finish before we can
            view the log file so we use a timer event to wait for it.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.PreviewTopicWindow.CanClose">
            <summary>
            This read-only property is used to determine whether or not the
            preview window can be closed.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.NewFromOtherFormatDlg">
            <summary>
            This form is used to convert a project in a different format to the new
            MSBuild format used by SHFB 1.8.0.0 and later.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.NewFromOtherFormatDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.NewFromOtherFormatDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.NewFromOtherFormatDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.NewFromOtherFormatDlg.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.NewFromOtherFormatDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close the dialog without converting a project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.NewFromOtherFormatDlg.btnSelectProject_Click(System.Object,System.EventArgs)">
            <summary>
            Select the project to convert
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.NewFromOtherFormatDlg.btnSelectNewFolder_Click(System.Object,System.EventArgs)">
            <summary>
            Select the folder for the new project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.NewFromOtherFormatDlg.btnConvert_Click(System.Object,System.EventArgs)">
            <summary>
            Convert the project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.NewFromOtherFormatDlg.btnHelp_Click(System.Object,System.EventArgs)">
            <summary>
            View help for this form
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:SandcastleBuilder.Gui.NewFromOtherFormatDlg.NewProjectFilename">
            <summary>
            Upon successful conversion, this will return the name of the
            new project file.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.GotoLineDlg">
            <summary>
            This is used to enter the line number for the Goto Line editor action.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.GotoLineDlg.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.GotoLineDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.GotoLineDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.GotoLineDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.GotoLineDlg.LineNumber">
            <summary>
            This read-only property returns the entered line number
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.UnsafeNativeMethods">
            <summary>
            This internal class is used for access to some Win32 API functions.
            </summary>
            <remarks>The window placement functions are used so as to support
            restoring the window on multi-monitor systems.</remarks>
        </member>
        <member name="F:SandcastleBuilder.Gui.UnsafeNativeMethods.SW_SHOWNORMAL">
            <summary>Show window in normal position</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.UnsafeNativeMethods.SW_SHOWMINIMIZED">
            <summary>Show window minimized</summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.UnsafeNativeMethods.GetWindowPlacement(System.IntPtr,SandcastleBuilder.Gui.WINDOWPLACEMENT@)">
            <summary>
            Get the window's placement information
            </summary>
            <param name="hWnd">The window handle for which to get information</param>
            <param name="placement">The placement information structure</param>
            <returns>True on success, false on failure</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.UnsafeNativeMethods.SetWindowPlacement(System.IntPtr,SandcastleBuilder.Gui.WINDOWPLACEMENT@)">
            <summary>
            Set the window's placement information
            </summary>
            <param name="hWnd">The window handle for which to set the information</param>
            <param name="placement">The placement information structure</param>
            <returns>True if successful, false on failure</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.UnsafeNativeMethods.VkKeyScan(System.Char)">
            <summary>
            Convert a character value to a virtual-key code and shift state
            for the current keyboard.
            </summary>
            <param name="ch">The character to translate</param>
            <returns>A short containing the virtual-key code in the low order
            byte and the shift state in the high order byte.</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.UnsafeNativeMethods.CharToKeys(System.Char)">
            <summary>
            This is used to convert a <see cref="T:System.Char"/> value to a
            <see cref="T:System.Windows.Forms.Keys"/> value.
            </summary>
            <param name="ch">The character to convert</param>
            <returns>The <see cref="T:System.Windows.Forms.Keys"/> value corresponding to the
            character.  Note that not all keys are represented in the
            <b>Keys</b> enumeration.  Some may return rather odd combinations
            or no actual enumerated value at all.</returns>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow">
            <summary>
            This form is used to edit site map files that defines the table of
            contents layout for additional content items.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.#ctor(SandcastleBuilder.Utils.FileItem)">
            <summary>
            Constructor
            </summary>
            <param name="fileItem">The project file item to edit</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.Save(System.String)">
            <summary>
            Save the topic to a new filename
            </summary>
            <param name="filename">The new filename</param>
            <returns>True if saved successfully, false if not</returns>
            <overloads>There are two overloads for this method</overloads>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.LoadTopics(SandcastleBuilder.Utils.ConceptualContent.TocEntry)">
            <summary>
            Load the tree view with the topics and set the form up to edit them
            </summary>
            <param name="selectedEntry">If not null, the node containing the
            specified entry is set as the selected node.  If null, the first
            node is selected.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.AddChildren(SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection,System.Windows.Forms.TreeNode)">
            <summary>
            Add child nodes to the tree view recursively
            </summary>
            <param name="children">The collection of entries to add</param>
            <param name="root">The root to which they are added</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.UpdateControlStatus">
            <summary>
            This is used to update the state of the form controls
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.GetPersistString">
            <summary>
            Return the string used to store the editor state
            </summary>
            <returns>A string containing the type name and filename</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.Save">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.SaveAs">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.topics_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            This is used to mark the file as dirty when the collection changes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.SiteMapEditorWindow_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            This is used to prompt for save when closing
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.pgProps_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Update the node text when a property changes if it affects the
            node text.
            </summary>
            <param name="s">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tsbDefaultTopic_Click(System.Object,System.EventArgs)">
            <summary>
            Set the selected node as the default topic
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The sender of the event</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tsbSplitTOC_Click(System.Object,System.EventArgs)">
            <summary>
            Set the selected node as the split TOC location
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The sender of the event</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tsbMoveItem_Click(System.Object,System.EventArgs)">
            <summary>
            Move the selected node up or down within the group
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The sender of the event</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.AddExistingTopicFile_Click(System.Object,System.EventArgs)">
            <summary>
            Add an existing topic file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.templateFile_OnClick(System.Object,System.EventArgs)">
            <summary>
            Add a new item based on the selected template file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.AddTopicFile(System.String,System.Boolean)">
            <summary>
            Add a new topic file
            </summary>
            <param name="filename">The filename of the topic to add</param>
            <param name="addAsChild">True to add as a child of the selected
            node or false to add it as a sibling.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tsbAddTopic_ButtonClick(System.Object,System.EventArgs)">
            <summary>
            Add an empty container node that is not associated with any topic
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.AddAllTopicsInFolder_Click(System.Object,System.EventArgs)">
            <summary>
            Add all topic files found in the selected folder
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tsbDeleteTopic_Click(System.Object,System.EventArgs)">
            <summary>
            Delete a content item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.miCopyAsLink_Click(System.Object,System.EventArgs)">
            <summary>
            Copy as a link to the Windows clipboard for pasting into a topic
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.GetClipboardData">
            <summary>
            This is used to return the actual object to paste from the Windows
            clipboard
            </summary>
            <returns>The object to paste</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tsbCutCopy_Click(System.Object,System.EventArgs)">
            <summary>
            Cut or copy the selected node to the internal clipboard
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks><b>NOTE:</b> Copying within the file is currently not
            enabled.  Copying would require cloning the topic, its children,
            and all related properties.  Copying a topic may not be of any use
            anyway since the IDs have to be unique.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tsbPaste_ButtonClick(System.Object,System.EventArgs)">
            <summary>
            Paste the node from the internal clipboard.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tsbEditTopic_Click(System.Object,System.EventArgs)">
            <summary>
            Edit the selected topic file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.miSortTopics_Click(System.Object,System.EventArgs)">
            <summary>
            Sort the topics by display title
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tsbHelp_Click(System.Object,System.EventArgs)">
            <summary>
            View help for this editor
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tvContent_ItemDrag(System.Object,System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            This initiates drag and drop for the tree view nodes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tvContent_DragOver(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This validates the drop target during the drag operation
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tvContent_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This handles the drop operation for the tree view
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tvContent_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Update the state of the controls based on the current selection
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tvContent_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This is used to select the clicked node and display the context
            menu when a right click occurs.  This ensures that the correct
            node is affected by the selected operation.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tvContent_NodeMouseDoubleClick(System.Object,System.Windows.Forms.TreeNodeMouseClickEventArgs)">
            <summary>
            Edit the node if it is double-clicked
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.tvContent_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle shortcut keys in the tree view
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.CanClose">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.CanSaveContent">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.SiteMapEditorWindow.IsContentDocument">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.NodeIcon">
            <summary>
            This defines the <see cref="T:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow"/> tree view node
            icon index values.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.NodeIcon.None">
            <summary>Unknown item</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.NodeIcon.ProjectNode">
            <summary>The root project node</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.NodeIcon.DocSourceFolder">
            <summary>Documentation source folder</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.NodeIcon.ReferenceFolder">
            <summary>References folder</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.NodeIcon.GeneralFolder">
            <summary>General folder</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.NodeIcon.DocSource">
            <summary>Documentation source</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.NodeIcon.ReferenceItem">
            <summary>Reference</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.NodeIcon.ImageFile">
            <summary>Image file</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.NodeIcon.CodeSnippets">
            <summary>Code snippets file</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.NodeIcon.ContentLayout">
            <summary>Conceptual content layout/sitemap file</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.NodeIcon.TokenFile">
            <summary>Conceptual content token file</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.NodeIcon.TopicTransform">
            <summary>Additional content topic transformation file</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.NodeIcon.XmlFile">
            <summary>XML file</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.NodeIcon.Content">
            <summary>General content file (MAML, HTML, stylesheet, etc.)</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.NodeIcon.ResourceItemFile">
            <summary>Resource item file</summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.NodeData">
            <summary>
            This is used to hold basic information about the item represented
            by the tree view node in the <see cref="T:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.NodeData.#ctor(SandcastleBuilder.Utils.BuildAction,System.Object,System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="action">The build action</param>
            <param name="item">The node item</param>
            <param name="properties">The node properties</param>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.NodeData.BuildAction">
            <summary>
            The build action
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.NodeData.Item">
            <summary>
            The build item for the node
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.NodeData.Properties">
            <summary>
            The properties for the object
            </summary>
            <value>If a separate properties object is not specified,
            this will return the item itself.</value>
        </member>
        <member name="T:SandcastleBuilder.Gui.AboutDlg">
            <summary>
            This form is used to display application version information.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.AboutDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.AboutDlg.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.AboutDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.AboutDlg.AboutDlg_Load(System.Object,System.EventArgs)">
            <summary>
            Load the controls on the forms with data
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.AboutDlg.btnSysInfo_Click(System.Object,System.EventArgs)">
            <summary>
            View system information using <b>MSInfo32.exe</b>
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.AboutDlg.Link_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Open the target of the clicked link
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.ProjectPropertiesWindow">
            <summary>
            This form is used to edit the project properties
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectPropertiesWindow.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectPropertiesWindow.pgProps_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Update the Sandcastle path in the component configuration designer
            </summary>
            <param name="s"></param>
            <param name="e"></param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectPropertiesWindow.OnVisibleChanged(System.EventArgs)">
            <summary>
            Reset the property grid splitter position after being made visible
            </summary>
            <param name="e">The event arguments</param>
            <remarks>If not, it tends to be way to large</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectPropertiesWindow.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            This is overridden to ignore Ctrl+F4 which closes the window rather
            than hide it when docked as a document.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectPropertiesWindow.Save">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectPropertiesWindow.SaveAs">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectPropertiesWindow.RefreshProperties">
            <summary>
            This is called to refresh the property grid after a change that
            may have affected it.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.ProjectPropertiesWindow.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectPropertiesWindow.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectPropertiesWindow.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.ProjectPropertiesWindow.CurrentProject">
            <summary>
            This is used to set or get the current project
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.ProjectPropertiesWindow.IsDirty">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.ProjectPropertiesWindow.CanClose">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.ProjectPropertiesWindow.CanSaveContent">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Gui.PromptToSaveDlg">
            <summary>
            This form is used to prompt to save files before a build
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.PromptToSaveDlg.#ctor(System.Collections.ObjectModel.Collection{SandcastleBuilder.Gui.ContentEditors.BaseContentEditor})">
            <summary>
            Constructor
            </summary>
            <param name="filesToSave">A collection containing the editors with
            files to save.</param>
        </member>
        <member name="F:SandcastleBuilder.Gui.PromptToSaveDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.PromptToSaveDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.PromptToSaveDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow">
            <summary>
            This form is used to edit a token file.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.#ctor(SandcastleBuilder.Utils.FileItem)">
            <summary>
            Constructor
            </summary>
            <param name="fileItem">The project file item to edit</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.UpdateFont">
            <summary>
            Update the editor font used based on the selected user settings
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.Save(System.String)">
            <summary>
            Save the topic to a new filename
            </summary>
            <param name="filename">The new filename</param>
            <returns>True if saved successfully, false if not</returns>
            <overloads>There are two overloads for this method</overloads>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.LoadTokens">
            <summary>
            Load the tree view with the tokens and set the form up to edit them
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.GetPersistString">
            <summary>
            Return the string used to store the editor state
            </summary>
            <returns>A string containing the type name and filename</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.Save">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.SaveAs">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            This is overriden to prompt to save changes if necessary
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.tokens_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            This is used to mark the file as dirty when the collection changes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.TokenEditorWindow_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            This is used to prompt for save when closing
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.btnAdd_Click(System.Object,System.EventArgs)">
            <summary>
            Add a new token
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Delete the selected token
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.tvTokens_BeforeSelect(System.Object,System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            This validates the token ID and value
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.tvTokens_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            This loads the selected token ID and text into the editor fields
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.CanClose">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.CanSaveContent">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.TokenEditorWindow.IsContentDocument">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.GotoLine">
            <summary>
            Get a line number and position the cursor on it
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.GotoLine.Execute(ICSharpCode.TextEditor.TextArea)">
            <summary>
            Execute the Goto Line action
            </summary>
            <param name="textArea">The text area in which to perform the
            action</param>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.FindText">
            <summary>
            Fire the PerformFindText event
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FindText.#ctor(SandcastleBuilder.Gui.ContentEditors.ContentEditorControl)">
            <summary>
            Constructor
            </summary>
            <param name="parent">The parent editor control</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.FindText.Execute(ICSharpCode.TextEditor.TextArea)">
            <summary>
            Execute the Find Text action
            </summary>
            <param name="textArea">The text area in which to perform the
            action</param>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.ReplaceText">
            <summary>
            Fire the PerformReplaceText event
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ReplaceText.#ctor(SandcastleBuilder.Gui.ContentEditors.ContentEditorControl)">
            <summary>
            Constructor
            </summary>
            <param name="parent">The parent editor control</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ReplaceText.Execute(ICSharpCode.TextEditor.TextArea)">
            <summary>
            Execute the Find Text action
            </summary>
            <param name="textArea">The text area in which to perform the
            action</param>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.PasteSpecial">
            <summary>
            This handles pasting data from <see cref="T:SandcastleBuilder.Gui.ContentEditors.BaseContentEditor.ClipboardDataHandler"/>
            objects if present.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.PasteSpecial.#ctor(SandcastleBuilder.Gui.ContentEditors.ContentEditorControl)">
            <summary>
            Constructor
            </summary>
            <param name="parent">The parent editor control</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.PasteSpecial.Execute(ICSharpCode.TextEditor.TextArea)">
            <summary>
            Handle the paste operation
            </summary>
            <param name="textArea">The text area in which to perform the
            action</param>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.HtmlEncode">
            <summary>
            This will HTML encode the currently selected block of text.
            </summary>
            <remarks>If no text is selected, nothing will happen.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.HtmlEncode.Execute(ICSharpCode.TextEditor.TextArea)">
            <summary>
            Execute the HTML Encode action
            </summary>
            <param name="textArea">The text area in which to perform the
            action</param>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.InsertClosingElement">
            <summary>
            This is used to insert a closing element when Tab is hit and the cursor
            is within an opening tag.
            </summary>
            <remarks>This is a really simple form of auto-completion.  This may be
            replaced in a later release with real auto-completion support that
            includes a pop-up with available options.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.InsertClosingElement.#ctor(ICSharpCode.TextEditor.Actions.IEditAction)">
            <summary>
            Constructor
            </summary>
            <param name="oldAction">The old action to call if this action
            doesn't do anything.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.InsertClosingElement.Execute(ICSharpCode.TextEditor.TextArea)">
            <summary>
            Execute the Inser Closing Element action
            </summary>
            <param name="textArea">The text area in which to perform the
            action</param>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.InsertElement">
            <summary>
            Insert an element of the given type optionally wrapping any selected
            text in which the cursor is located.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.InsertElement.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="element">The element name to insert</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.InsertElement.Execute(ICSharpCode.TextEditor.TextArea)">
            <summary>
            Execute the Insert Element action
            </summary>
            <param name="textArea">The text area in which to perform the
            action</param>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.InsertMatchingCharacter">
            <summary>
            Insert a matching character when the first of the pair is entered
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.InsertMatchingCharacter.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="match">The character(s) to insert</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.InsertMatchingCharacter.Execute(ICSharpCode.TextEditor.TextArea)">
            <summary>
            Execute the Insert Matching action
            </summary>
            <param name="textArea">The text area in which to perform the
            action</param>
        </member>
        <member name="T:SandcastleBuilder.MicrosoftHelpViewer.UnsafeNativeMethods">
            <summary>
            This internal class is used for access to some Win32 API functions.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.UnsafeNativeMethods.GetRegistryValue(System.String,System.String)">
            <summary>
            This is used to try and find the specified regsitry key value in the 64 bit part
            of the registry. If not found, an attempt is made to try and find it in the 32 bit
            part of the registry.
            </summary>
            <param name="registryKeyPath">The registry key path to find</param>
            <param name="valueName">The value name to find</param>
            <returns>The value in the named registry key value</returns>
            <remarks>This method uses an API call that is unsupported on Windows 2000.</remarks>
        </member>
        <member name="T:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager">
            <summary>
            This class is used to interact with the Help Library Manager to install
            and uninstall Microsoft Help Viewer files.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.FindLocaleFor(System.String,System.String)">
            <summary>
            This is used to find the installed locale of the specified product
            version.
            </summary>
            <param name="product">The product for which to get the locale.</param>
            <param name="version">The version of the product for which to get the
            locale.</param>
            <returns></returns>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.HelpContentFileInstalled(System.String)">
            <summary>
            This is used to see if the specified content file is installed
            </summary>
            <param name="contentFilename">The filename for which to check</param>
            <returns>True if the file is installed, false if not</returns>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.RunAsNormalUser(System.String,System.Diagnostics.ProcessWindowStyle)">
            <summary>
            Run the Help Library Manager as a normal user
            </summary>
            <param name="arguments">The command line arguments to pass to it</param>
            <param name="windowStyle">The window style to use</param>
            <returns>The Help Library Manager exit code</returns>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.RunAsAdministrator(System.String,System.Diagnostics.ProcessWindowStyle)">
            <summary>
            Run the Help Library Manager as an administrator
            </summary>
            <param name="arguments">The command line arguments to pass to it</param>
            <param name="windowStyle">The window style to use</param>
            <returns>The Help Library Manager exit code</returns>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.LaunchInteractive(System.String)">
            <summary>
            Launch the help file viewer for interactive use
            </summary>
            <param name="arguments">The command line arguments to pass to it</param>
            <remarks>This always runs it as an administrator on Vista and above.</remarks>
        </member>
        <member name="P:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.LocalStorePath">
            <summary>
            This read-only property returns the path to the local store folder.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.HelpLibraryManagerPath">
            <summary>
            This read-only property returns the path to the Help Library Manager
            executable.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.LocalStoreInitialized">
            <summary>
            This read-only property is used to see if the local store has been
            initialized.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.Catalog">
            <summary>
            This is used internally to store information about the installed catalogs
            </summary>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.Catalog.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="product"></param>
            <param name="version"></param>
            <param name="locale"></param>
        </member>
        <member name="P:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.Catalog.Locale">
            <summary>Get the locale</summary>
        </member>
        <member name="P:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.Catalog.Product">
            <summary>Get the product</summary>
        </member>
        <member name="P:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.Catalog.Version">
            <summary>Get the version</summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.StartUp">
            <summary>
            This class contains the main entry point and other start up code.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.StartUp.Main(System.String[])">
            <summary>
            The main entry point for the application.
            </summary>
            <param name="args">Command line arguments</param>
        </member>
        <member name="T:SandcastleBuilder.Gui.BeforeBuildAction">
            <summary>
            This is used to determine what to do with unsaved files before building
            a project.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.BeforeBuildAction.SaveAllChanges">
            <summary>Save all changes to documents and the project.</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.BeforeBuildAction.SaveOpenDocuments">
            <summary>Only save changes to open documents.</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.BeforeBuildAction.PromptToSaveAll">
            <summary>Prompt to save changes to all open documents and the
            project.</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.BeforeBuildAction.DoNotSave">
            <summary>Do not save any changes.</summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow">
            <summary>
            This form is used to edit a conceptual topic file.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="filename">The filename to load</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.GetPersistString">
            <summary>
            Return the string used to store the editor state
            </summary>
            <returns>A string containing the type name and filename</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.Save">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.SaveAs">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.UpdateFont">
            <summary>
            Update the font used based on the selected user settings
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.TrackLastInsertedElement(System.Windows.Forms.ToolStripMenuItem)">
            <summary>
            Track the last used insert action and update the toolbar button
            </summary>
            <param name="element">The last used element</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.InsertTopicLink(System.String,SandcastleBuilder.Utils.ConceptualContent.Topic)">
            <summary>
            Insert a link to a topic
            </summary>
            <param name="extension">The extension of the file in which the
            link is being inserted.</param>
            <param name="topic">The topic for which to create a link</param>
            <remarks>If dropped inside some selected text, the link will
            wrap the selected text.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.InsertTocLink(System.String,SandcastleBuilder.Utils.ConceptualContent.TocEntry)">
            <summary>
            Insert a link to a site map table of contents entry (HTML only)
            </summary>
            <param name="extension">The extension of the file in which the
            link is being inserted.</param>
            <param name="tocEntry">The TOC entry for which to create a link</param>
            <remarks>If dropped inside some selected text, the link will
            wrap the selected text.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.Save(System.String)">
            <summary>
            Save the topic to a new filename
            </summary>
            <param name="filename">The new filename</param>
            <returns>True if saved successfully, false if not</returns>
            <overloads>There are two overloads for this method</overloads>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.PasteFromClipboard">
            <summary>
            Paste text from the clipboard into the editor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.editor_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Mark the file as dirty when the text changes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            This is overriden to prompt to save changes if necessary
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.editor_DragEnter(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This displays the drop cursor when the mouse drags into
            the editor.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.editor_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This handles the drop operation for the editor
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.MediaLinkItem_Click(System.Object,System.EventArgs)">
            <summary>
            Insert a media link into the document
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.insertElement_Click(System.Object,System.EventArgs)">
            <summary>
            Insert a basic element such as legacyBold, legacyItalic, etc.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event element</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.insertList_Click(System.Object,System.EventArgs)">
            <summary>
            Insert a list element
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.tsbTable_Click(System.Object,System.EventArgs)">
            <summary>
            Insert a table element
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.tsbLocalLink_Click(System.Object,System.EventArgs)">
            <summary>
            Insert a link to an in-page address attribute value
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.tsbExternalLink_Click(System.Object,System.EventArgs)">
            <summary>
            Insert an external link
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.tsbInsertElement_ButtonClick(System.Object,System.EventArgs)">
            <summary>
            Perform the action associated with the last insert item used
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.miAlert_Click(System.Object,System.EventArgs)">
            <summary>
            Insert an alert element
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.miCode_Click(System.Object,System.EventArgs)">
            <summary>
            Insert a code element
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.miDefinitionTable_Click(System.Object,System.EventArgs)">
            <summary>
            Insert a definition table
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.miSection_Click(System.Object,System.EventArgs)">
            <summary>
            Insert a section
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.tsbHtmlEncode_Click(System.Object,System.EventArgs)">
            <summary>
            HTML encode any currently selected text
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.tsbCutText_Click(System.Object,System.EventArgs)">
            <summary>
            Cut text
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.tsbCopyText_Click(System.Object,System.EventArgs)">
            <summary>
            Cut text
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.tsbPasteText_Click(System.Object,System.EventArgs)">
            <summary>
            Paste text
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.tsbUndo_Click(System.Object,System.EventArgs)">
            <summary>
            Undo editor change
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.tsbRedo_Click(System.Object,System.EventArgs)">
            <summary>
            Redo editor change
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.editor_PerformFindText(System.Object,System.EventArgs)">
            <summary>
            This handles the Perform Find Text event
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.editor_PerformReplaceText(System.Object,System.EventArgs)">
            <summary>
            This handles the Perform Replace Text event
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.FindText(System.String,System.Boolean)">
            <summary>
            Find the specified text in the editor
            </summary>
            <param name="textToFind">The text to find</param>
            <param name="caseSensitive">True to do a case-sensitive search
            or false to do a case-insensitive search</param>
            <returns>True if the text is found, false if not</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.ReplaceText(System.String,System.String,System.Boolean)">
            <summary>
            Find and replace the next occurrence of the specified text in the
            editor.
            </summary>
            <param name="textToFind">The text to find</param>
            <param name="replaceWith">The replacement text</param>
            <param name="caseSensitive">True to do a case-sensitive search
            or false to do a case-insensitive search</param>
            <returns>True if the text is found and replaced, false if not</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.ReplaceAll(System.String,System.String,System.Boolean)">
            <summary>
            Find and replace all occurrences of the specified text in the
            editor.
            </summary>
            <param name="textToFind">The text to find</param>
            <param name="replaceWith">The replacement text</param>
            <param name="caseSensitive">True to do a case-sensitive search
            or false to do a case-insensitive search</param>
            <returns>True if replacements were made, false if not</returns>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.Filename">
            <summary>
            This returns the filename
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.CanClose">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.CanSaveContent">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.TopicEditorWindow.IsContentDocument">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow">
            <summary>
            This form is used to manage the project items and files
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.Save">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.SaveAs">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.RefreshProject">
            <summary>
            This is called to refresh the project explorer view after another
            pane has added files to the project.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.AskToSaveProject">
            <summary>
            This is called to ask the user if they want to save their project
            </summary>
            <returns>Returns true if saved successfully or no save is
            wanted.  Returns false on error or if cancelled.</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.Save(System.String)">
            <summary>
            Save the project file
            </summary>
            <param name="filename">The filename to which the project is saved</param>
            <returns>True if successful, false if not</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.CreateFileEditor(System.String,SandcastleBuilder.Utils.FileItem)">
            <summary>
            Create an editor for the specified file
            </summary>
            <param name="fullName">The full path to the file</param>
            <param name="fileItem">The project file item or null if the
            method should find it for itself</param>
            <returns></returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.AddItemTemplates">
            <summary>
            Add item templates to the New Item menu
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.AddConceptualTemplates">
            <summary>
            Add conceptual topic templates to the New Item menu
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.AddCustomTemplates">
            <summary>
            Add user-defined templates to the New Item menu
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.LoadProject">
            <summary>
            Load the project content
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.LoadDocSources(System.Boolean)">
            <summary>
            Load the documentation sources
            </summary>
            <param name="createRoot">True to create the root documentation
            source node or false to find it and reload it.</param>
            <returns>The root reference item node</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.LoadReferences(System.Boolean)">
            <summary>
            Load the reference items
            </summary>
            <param name="createRoot">True to create the root references node or
            false to find it and reload it.</param>
            <returns>The root reference item node</returns>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.EditNodeFile(System.Windows.Forms.TreeNode)">
            <summary>
            Edit the selected node's file if possible
            </summary>
            <param name="node">The node to edit</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.pgProps_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Refresh the node text when a property changes
            </summary>
            <param name="s">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.tvProjectFiles_BeforeCollapse(System.Object,System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Prevent the root node from being collapsed
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.tvProjectFiles_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            After a selection is made, set it as the current object in the
            property grid.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.tvProjectFiles_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This is used to select the clicked node and display the context
            menu when a right click occurs.  This ensures that the correct
            node is affected by the selected operation.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.tvProjectFiles_NodeMouseDoubleClick(System.Object,System.Windows.Forms.TreeNodeMouseClickEventArgs)">
            <summary>
            Edit the node's file if it is double-clicked
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.tvProjectFiles_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle shortcut keys in the tree view
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.tvProjectFiles_BeforeLabelEdit(System.Object,System.Windows.Forms.NodeLabelEditEventArgs)">
            <summary>
            Disable label edit on doc source and reference nodes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.tvProjectFiles_AfterLabelEdit(System.Object,System.Windows.Forms.NodeLabelEditEventArgs)">
            <summary>
            Rename the node after the label edit finishes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.cmsDocSource_Opening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Update the command states when the menu opens
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.miAddDocSource_Click(System.Object,System.EventArgs)">
            <summary>
            Add one or more new documentation sources
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.miRemoveDocSource_Click(System.Object,System.EventArgs)">
            <summary>
            Remove a documentation source from the project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.cmsReference_Opening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Update the command states when the menu opens
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.miAddReference_Click(System.Object,System.EventArgs)">
            <summary>
            Add a project or file reference to the project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.miAddGacReference_Click(System.Object,System.EventArgs)">
            <summary>
            Add a GAC reference to the project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.miRemoveReference_Click(System.Object,System.EventArgs)">
            <summary>
            Remove the selected reference from the project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.cmsFile_Opening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Update the command states when the menu opens
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.miOpen_Click(System.Object,System.EventArgs)">
            <summary>
            Open the selected file for editing
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.miRename_Click(System.Object,System.EventArgs)">
            <summary>
            Rename the selected node
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.miExcludeFromProject_Click(System.Object,System.EventArgs)">
            <summary>
            Exclude an item from the project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks>This removes the item and any child items from the project
            but leaves them on disk.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.miDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Delete an item from the project and the file system
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks>This removes the item and any child items from the project
            and the file system.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.miNewFolder_Click(System.Object,System.EventArgs)">
            <summary>
            Add a new folder to the project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.miAddExistingFolder_Click(System.Object,System.EventArgs)">
            <summary>
            Add an existing folder to the project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.AddSubFolders(System.String,System.Collections.ObjectModel.Collection{SandcastleBuilder.Utils.FileItem})">
            <summary>
            Add all files and subfolders to the project
            </summary>
            <param name="rootFolder">The root folder</param>
            <param name="items">The file item collection</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.miAddExistingItem_Click(System.Object,System.EventArgs)">
            <summary>
            Add an existing item to the project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.miImportMediaFile_Click(System.Object,System.EventArgs)">
            <summary>
            Import image file information from an existing MAML media content
            file.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.templateFile_OnClick(System.Object,System.EventArgs)">
            <summary>
            Add a new item based on the selected template file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.tvProjectFiles_ItemDrag(System.Object,System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            This initiates drag and drop for the tree view nodes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.tvProjectFiles_DragOver(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This validates the drop target during the drag operation and show
            the appropriate cursor.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks>It handles internal drag and drop items as well as files
            from Windows Explorer.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.tvProjectFiles_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This handles the drop operation for the tree view.  Dropped items
            can include other file nodes as well as files from Windows Explorer.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.AddFilesFromWindowsExplorer(System.Windows.Forms.DragEventArgs)">
            <summary>
            Add files dragged and dropped from Windows Explorer to the project
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.miCutCopy_Click(System.Object,System.EventArgs)">
            <summary>
            Cut or copy files to the clipboard
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.GetFilesForClipboard(System.Windows.Forms.TreeNode,System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            This is used to get a collection of files to copy to the clipboard
            </summary>
            <param name="node">The tree node at which to start</param>
            <param name="files">The file collection</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.miPaste_Click(System.Object,System.EventArgs)">
            <summary>
            Paste files from the clipboard
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.CurrentProject">
            <summary>
            This is used to get a reference to the current project
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.IsDirty">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Gui.ContentEditors.ProjectExplorerWindow.CanSaveContent">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Gui.WINDOWPLACEMENT">
            <summary>
            This structure is used to get and set the main form's position
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.WINDOWPLACEMENT.length">
            <summary>The length of the structure</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.WINDOWPLACEMENT.flags">
            <summary>Window position control flags</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.WINDOWPLACEMENT.showCmd">
            <summary>The current show state of the window</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.WINDOWPLACEMENT.ptMinPosition_x">
            <summary>Window upper left when minimized</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.WINDOWPLACEMENT.ptMinPosition_y">
            <summary>Window upper left when minimized</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.WINDOWPLACEMENT.ptMaxPosition_x">
            <summary>Window upper left when maximized</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.WINDOWPLACEMENT.ptMaxPosition_y">
            <summary>Window upper left when maximized</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.WINDOWPLACEMENT.rcNormalPosition_left">
            <summary>Window coordinates when in the restored position</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.WINDOWPLACEMENT.rcNormalPosition_top">
            <summary>Window coordinates when in the restored position</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.WINDOWPLACEMENT.rcNormalPosition_right">
            <summary>Window coordinates when in the restored position</summary>
        </member>
        <member name="F:SandcastleBuilder.Gui.WINDOWPLACEMENT.rcNormalPosition_bottom">
            <summary>Window coordinates when in the restored position</summary>
        </member>
        <member name="T:SandcastleBuilder.Gui.ContentEditors.ContentEditorControl">
            <summary>
            This is a derived ICSharpCode text editor control that is used to
            edit the conceptual content.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentEditorControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentEditorControl.OnPerformFindText(System.EventArgs)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Gui.ContentEditors.ContentEditorControl.PerformFindText"/> event
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentEditorControl.OnPerformReplaceText(System.EventArgs)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Gui.ContentEditors.ContentEditorControl.PerformReplaceText"/> event
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentEditorControl.PasteSpecial(System.Windows.Forms.DataObject)">
            <summary>
            Paste an object from the clipboard (i.e. a topic or image link)
            </summary>
            <param name="data">The data to paste</param>
            <remarks>Since the owning topic editor handles the necessary tasks
            in its drag and drop event handler, we'll just invoke it.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentEditorControl.InsertString(ICSharpCode.TextEditor.TextArea,System.String)">
            <summary>
            Insert a string of text into the specified text area at the current
            cursor location.
            </summary>
            <param name="textArea">The text area to use</param>
            <param name="text">The text to insert</param>
        </member>
        <member name="M:SandcastleBuilder.Gui.ContentEditors.ContentEditorControl.Execute(ICSharpCode.TextEditor.Actions.IEditAction)">
            <summary>
            Execute a specified action in the editor
            </summary>
            <param name="action">The action to execute</param>
        </member>
        <member name="E:SandcastleBuilder.Gui.ContentEditors.ContentEditorControl.PerformFindText">
            <summary>
            This event is raised when Ctrl+F is hit to find text
            </summary>
        </member>
        <member name="E:SandcastleBuilder.Gui.ContentEditors.ContentEditorControl.PerformReplaceText">
            <summary>
            This event is raised when Ctrl+H is hit to replace text
            </summary>
        </member>
    </members>
</doc>
